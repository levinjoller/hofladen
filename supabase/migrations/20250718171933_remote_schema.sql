

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;


COMMENT ON SCHEMA "public" IS 'standard public schema';



CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";






CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";






CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";






CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";





SET default_tablespace = '';

SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."stock_column_slots" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "display_name" "text" NOT NULL,
    "fk_stock_column" bigint NOT NULL,
    "max_level" bigint,
    "y_position" smallint NOT NULL
);


ALTER TABLE "public"."stock_column_slots" OWNER TO "postgres";


COMMENT ON TABLE "public"."stock_column_slots" IS 'Lagerspaltenplatz';



ALTER TABLE "public"."stock_column_slots" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."column_spots_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."customers" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "fk_person" bigint NOT NULL
);


ALTER TABLE "public"."customers" OWNER TO "postgres";


COMMENT ON TABLE "public"."customers" IS 'Käufer';



ALTER TABLE "public"."customers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."customers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."pallet_histories" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "fk_pallet" bigint NOT NULL,
    "fk_stock_column_slot_level" bigint NOT NULL
);


ALTER TABLE "public"."pallet_histories" OWNER TO "postgres";


COMMENT ON TABLE "public"."pallet_histories" IS 'Änderungsverlauf Paloxen';



ALTER TABLE "public"."pallet_histories" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."pallet_histories_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."pallets" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "fk_customer" bigint,
    "fk_product" bigint NOT NULL,
    "fk_supplier" bigint,
    "fk_stock_column_slot_level" bigint NOT NULL,
    "updated_at" timestamp without time zone DEFAULT "now"()
);


ALTER TABLE "public"."pallets" OWNER TO "postgres";


COMMENT ON TABLE "public"."pallets" IS 'Paloxen';



ALTER TABLE "public"."pallets" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."pallets_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."persons" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "display_name" "text" NOT NULL
);


ALTER TABLE "public"."persons" OWNER TO "postgres";


ALTER TABLE "public"."persons" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."person_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."products" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "display_name" "text" NOT NULL
);


ALTER TABLE "public"."products" OWNER TO "postgres";


COMMENT ON TABLE "public"."products" IS 'Inhalt';



ALTER TABLE "public"."products" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."product_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."stock_columns" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "display_name" "text" NOT NULL,
    "fk_stock" bigint NOT NULL,
    "x_position" smallint NOT NULL
);


ALTER TABLE "public"."stock_columns" OWNER TO "postgres";


COMMENT ON TABLE "public"."stock_columns" IS 'Lagerspalten';



ALTER TABLE "public"."stock_columns" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."rows_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."stock_column_slot_levels" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "fk_stock_column_slot" bigint NOT NULL,
    "is_taken" boolean NOT NULL,
    "level" bigint NOT NULL,
    "display_name" "text" NOT NULL
);


ALTER TABLE "public"."stock_column_slot_levels" OWNER TO "postgres";


COMMENT ON TABLE "public"."stock_column_slot_levels" IS 'Lagerplatzhöhe';



ALTER TABLE "public"."stock_column_slot_levels" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."slot_levels_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."stocks" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "display_name" "text" NOT NULL
);


ALTER TABLE "public"."stocks" OWNER TO "postgres";


COMMENT ON TABLE "public"."stocks" IS 'Lager';



CREATE TABLE IF NOT EXISTS "public"."suppliers" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "fk_person" bigint NOT NULL
);


ALTER TABLE "public"."suppliers" OWNER TO "postgres";


COMMENT ON TABLE "public"."suppliers" IS 'Herkunft';



ALTER TABLE "public"."suppliers" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."suppliers_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE "public"."stocks" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."warehouse_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



ALTER TABLE ONLY "public"."stock_column_slots"
    ADD CONSTRAINT "column_spots_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."customers"
    ADD CONSTRAINT "customers_fk_person_key" UNIQUE ("fk_person");



ALTER TABLE ONLY "public"."customers"
    ADD CONSTRAINT "customers_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."pallet_histories"
    ADD CONSTRAINT "pallet_histories_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."pallets"
    ADD CONSTRAINT "pallets_fk_stock_column_slot_level_key" UNIQUE ("fk_stock_column_slot_level");



ALTER TABLE ONLY "public"."pallets"
    ADD CONSTRAINT "pallets_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."persons"
    ADD CONSTRAINT "person_display_name_key" UNIQUE ("display_name");



ALTER TABLE ONLY "public"."persons"
    ADD CONSTRAINT "person_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."products"
    ADD CONSTRAINT "product_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."products"
    ADD CONSTRAINT "products_display_name_key" UNIQUE ("display_name");



ALTER TABLE ONLY "public"."stock_columns"
    ADD CONSTRAINT "rows_display_name_key" UNIQUE ("display_name");



ALTER TABLE ONLY "public"."stock_columns"
    ADD CONSTRAINT "rows_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."stock_column_slot_levels"
    ADD CONSTRAINT "slot_levels_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."suppliers"
    ADD CONSTRAINT "suppliers_fk_person_key" UNIQUE ("fk_person");



ALTER TABLE ONLY "public"."suppliers"
    ADD CONSTRAINT "suppliers_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."stocks"
    ADD CONSTRAINT "warehouse_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."stocks"
    ADD CONSTRAINT "warehouses_display_name_key" UNIQUE ("display_name");



ALTER TABLE ONLY "public"."customers"
    ADD CONSTRAINT "customers_fk_person_fkey" FOREIGN KEY ("fk_person") REFERENCES "public"."persons"("id");



ALTER TABLE ONLY "public"."pallet_histories"
    ADD CONSTRAINT "pallet_histories_fk_pallet_fkey" FOREIGN KEY ("fk_pallet") REFERENCES "public"."pallets"("id");



ALTER TABLE ONLY "public"."pallet_histories"
    ADD CONSTRAINT "pallet_histories_fk_stock_column_slot_level_fkey" FOREIGN KEY ("fk_stock_column_slot_level") REFERENCES "public"."stock_column_slot_levels"("id");



ALTER TABLE ONLY "public"."pallets"
    ADD CONSTRAINT "pallets_fk_customer_fkey" FOREIGN KEY ("fk_customer") REFERENCES "public"."customers"("id");



ALTER TABLE ONLY "public"."pallets"
    ADD CONSTRAINT "pallets_fk_product_fkey" FOREIGN KEY ("fk_product") REFERENCES "public"."products"("id");



ALTER TABLE ONLY "public"."pallets"
    ADD CONSTRAINT "pallets_fk_stock_column_slot_level_fkey" FOREIGN KEY ("fk_stock_column_slot_level") REFERENCES "public"."stock_column_slot_levels"("id");



ALTER TABLE ONLY "public"."pallets"
    ADD CONSTRAINT "pallets_fk_supplier_fkey" FOREIGN KEY ("fk_supplier") REFERENCES "public"."suppliers"("id");



ALTER TABLE ONLY "public"."stock_columns"
    ADD CONSTRAINT "rows_fk_warehouse_fkey" FOREIGN KEY ("fk_stock") REFERENCES "public"."stocks"("id");



ALTER TABLE ONLY "public"."stock_column_slot_levels"
    ADD CONSTRAINT "stock_column_slot_levels_fk_stock_column_slot_fkey" FOREIGN KEY ("fk_stock_column_slot") REFERENCES "public"."stock_column_slots"("id");



ALTER TABLE ONLY "public"."stock_column_slots"
    ADD CONSTRAINT "stock_column_slots_fk_stock_column_fkey" FOREIGN KEY ("fk_stock_column") REFERENCES "public"."stock_columns"("id");



ALTER TABLE ONLY "public"."suppliers"
    ADD CONSTRAINT "suppliers_fk_person_fkey" FOREIGN KEY ("fk_person") REFERENCES "public"."persons"("id");



CREATE POLICY "Enable read access for all users" ON "public"."customers" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."pallet_histories" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."pallets" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."persons" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."products" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."stock_column_slot_levels" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."stock_column_slots" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."stock_columns" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."stocks" FOR SELECT USING (true);



CREATE POLICY "Enable read access for all users" ON "public"."suppliers" FOR SELECT USING (true);



ALTER TABLE "public"."customers" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."pallet_histories" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."pallets" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."persons" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."products" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."stock_column_slot_levels" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."stock_column_slots" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."stock_columns" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."stocks" ENABLE ROW LEVEL SECURITY;


ALTER TABLE "public"."suppliers" ENABLE ROW LEVEL SECURITY;




ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";






ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."customers";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."persons";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."products";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."stock_column_slot_levels";



ALTER PUBLICATION "supabase_realtime" ADD TABLE ONLY "public"."suppliers";



GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";








































































































































































GRANT ALL ON TABLE "public"."stock_column_slots" TO "anon";
GRANT ALL ON TABLE "public"."stock_column_slots" TO "authenticated";
GRANT ALL ON TABLE "public"."stock_column_slots" TO "service_role";



GRANT ALL ON SEQUENCE "public"."column_spots_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."column_spots_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."column_spots_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."customers" TO "anon";
GRANT ALL ON TABLE "public"."customers" TO "authenticated";
GRANT ALL ON TABLE "public"."customers" TO "service_role";



GRANT ALL ON SEQUENCE "public"."customers_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."customers_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."customers_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."pallet_histories" TO "anon";
GRANT ALL ON TABLE "public"."pallet_histories" TO "authenticated";
GRANT ALL ON TABLE "public"."pallet_histories" TO "service_role";



GRANT ALL ON SEQUENCE "public"."pallet_histories_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."pallet_histories_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."pallet_histories_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."pallets" TO "anon";
GRANT ALL ON TABLE "public"."pallets" TO "authenticated";
GRANT ALL ON TABLE "public"."pallets" TO "service_role";



GRANT ALL ON SEQUENCE "public"."pallets_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."pallets_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."pallets_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."persons" TO "anon";
GRANT ALL ON TABLE "public"."persons" TO "authenticated";
GRANT ALL ON TABLE "public"."persons" TO "service_role";



GRANT ALL ON SEQUENCE "public"."person_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."person_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."person_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."products" TO "anon";
GRANT ALL ON TABLE "public"."products" TO "authenticated";
GRANT ALL ON TABLE "public"."products" TO "service_role";



GRANT ALL ON SEQUENCE "public"."product_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."product_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."product_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."stock_columns" TO "anon";
GRANT ALL ON TABLE "public"."stock_columns" TO "authenticated";
GRANT ALL ON TABLE "public"."stock_columns" TO "service_role";



GRANT ALL ON SEQUENCE "public"."rows_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."rows_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."rows_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."stock_column_slot_levels" TO "anon";
GRANT ALL ON TABLE "public"."stock_column_slot_levels" TO "authenticated";
GRANT ALL ON TABLE "public"."stock_column_slot_levels" TO "service_role";



GRANT ALL ON SEQUENCE "public"."slot_levels_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."slot_levels_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."slot_levels_id_seq" TO "service_role";



GRANT ALL ON TABLE "public"."stocks" TO "anon";
GRANT ALL ON TABLE "public"."stocks" TO "authenticated";
GRANT ALL ON TABLE "public"."stocks" TO "service_role";



GRANT ALL ON TABLE "public"."suppliers" TO "anon";
GRANT ALL ON TABLE "public"."suppliers" TO "authenticated";
GRANT ALL ON TABLE "public"."suppliers" TO "service_role";



GRANT ALL ON SEQUENCE "public"."suppliers_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."suppliers_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."suppliers_id_seq" TO "service_role";



GRANT ALL ON SEQUENCE "public"."warehouse_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."warehouse_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."warehouse_id_seq" TO "service_role";









ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS TO "service_role";






ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES TO "service_role";






























RESET ALL;
