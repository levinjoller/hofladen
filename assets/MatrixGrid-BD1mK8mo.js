var jM=Object.defineProperty;var ZM=(r,t,e)=>t in r?jM(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var Yt=(r,t,e)=>ZM(r,typeof t!="symbol"?t+"":t,e);import{P as Ro,aT as T0,aU as JM,aV as E0,aW as A0,aX as Xc,aY as rn,a1 as xs,x as Xn,aZ as ap,a_ as ye,r as tn,c as We,v as Qc,aI as KM,a$ as tu,b0 as ci,e as oe,d as fr,b1 as C0,A as xn,V as As,o as Ye,b2 as QM,aR as tS,b3 as eS,b4 as Ym,ax as eu,L as ih,aE as nu,b5 as nS,b as Dr,a0 as iS,s as ui,b6 as R0,b7 as rS,a as Aa,w as iu,aw as sS,B as oS,ay as aS}from"./index-B4NoDcFB.js";import{_ as I0}from"./_plugin-vue_export-helper-DlAUqK2U.js";/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const dl="180",ki={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},sr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},N0=0,gf=1,P0=2,lS=3,cS=0,lp=1,cp=2,zi=3,pr=0,Pn=1,ni=2,lr=0,bs=1,yf=2,_f=3,vf=4,L0=5,Lr=100,D0=101,O0=102,U0=103,F0=104,B0=200,z0=201,k0=202,V0=203,ru=204,su=205,H0=206,G0=207,W0=208,X0=209,$0=210,Y0=211,q0=212,j0=213,Z0=214,ou=0,au=1,lu=2,Cs=3,cu=4,uu=5,hu=6,du=7,fl=0,J0=1,K0=2,Gi=0,Q0=1,tv=2,ev=3,up=4,nv=5,iv=6,rv=7,xf="attached",sv="detached",rh=300,mr=301,Br=302,ka=303,Va=304,Xo=306,Ha=1e3,hi=1001,Ga=1002,hn=1003,hp=1004,uS=1004,vo=1005,hS=1005,nn=1006,Ca=1007,dS=1007,Vi=1008,fS=1008,Ci=1009,dp=1010,fp=1011,Io=1012,sh=1013,gr=1014,Gn=1015,Ps=1016,oh=1017,ah=1018,No=1020,pp=35902,mp=35899,gp=1021,yp=1022,Nn=1023,Po=1026,Lo=1027,lh=1028,pl=1029,_p=1030,ch=1031,pS=1032,uh=1033,Ra=33776,Ia=33777,Na=33778,Pa=33779,fu=35840,pu=35841,mu=35842,gu=35843,yu=36196,_u=37492,vu=37496,xu=37808,bu=37809,Mu=37810,Su=37811,wu=37812,Tu=37813,Eu=37814,Au=37815,Cu=37816,Ru=37817,Iu=37818,Nu=37819,Pu=37820,Lu=37821,Du=36492,Ou=36494,Uu=36495,Fu=36283,Bu=36284,zu=36285,ku=36286,ov=2200,av=2201,lv=2202,Wa=2300,Vu=2301,$c=2302,ms=2400,gs=2401,Xa=2402,hh=2500,vp=2501,mS=0,gS=1,yS=2,cv=3200,uv=3201,_S=3202,vS=3203,Hr=0,hv=1,or="",Vn="srgb",Rs="srgb-linear",$a="linear",Ee="srgb",xS=0,cs=7680,bS=7681,MS=7682,SS=7683,wS=34055,TS=34056,ES=5386,AS=512,CS=513,RS=514,IS=515,NS=516,PS=517,LS=518,bf=519,dv=512,fv=513,pv=514,xp=515,mv=516,gv=517,yv=518,_v=519,Ya=35044,DS=35048,OS=35040,US=35045,FS=35049,BS=35041,zS=35046,kS=35050,VS=35042,HS="100",Mf="300 es",ii=2e3,Do=2001,GS={COMPUTE:"compute",RENDER:"render"},WS={PERSPECTIVE:"perspective",LINEAR:"linear",FLAT:"flat"},XS={NORMAL:"normal",CENTROID:"centroid",SAMPLE:"sample",FIRST:"first",EITHER:"either"};class Yi{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const s=i.indexOf(e);s!==-1&&i.splice(s,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,t);t.target=null}}}const pn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let qm=1234567;const Ms=Math.PI/180,Oo=180/Math.PI;function ri(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(pn[r&255]+pn[r>>8&255]+pn[r>>16&255]+pn[r>>24&255]+"-"+pn[t&255]+pn[t>>8&255]+"-"+pn[t>>16&15|64]+pn[t>>24&255]+"-"+pn[e&63|128]+pn[e>>8&255]+"-"+pn[e>>16&255]+pn[e>>24&255]+pn[n&255]+pn[n>>8&255]+pn[n>>16&255]+pn[n>>24&255]).toLowerCase()}function re(r,t,e){return Math.max(t,Math.min(e,r))}function bp(r,t){return(r%t+t)%t}function $S(r,t,e,n,i){return n+(r-t)*(i-n)/(e-t)}function YS(r,t,e){return r!==t?(e-r)/(t-r):0}function La(r,t,e){return(1-e)*r+e*t}function qS(r,t,e,n){return La(r,t,1-Math.exp(-e*n))}function jS(r,t=1){return t-Math.abs(bp(r,t*2)-t)}function ZS(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*(3-2*r))}function JS(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*r*(r*(r*6-15)+10))}function KS(r,t){return r+Math.floor(Math.random()*(t-r+1))}function QS(r,t){return r+Math.random()*(t-r)}function t1(r){return r*(.5-Math.random())}function e1(r){r!==void 0&&(qm=r);let t=qm+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function n1(r){return r*Ms}function i1(r){return r*Oo}function r1(r){return(r&r-1)===0&&r!==0}function s1(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function o1(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function a1(r,t,e,n,i){const s=Math.cos,o=Math.sin,a=s(e/2),l=o(e/2),c=s((t+n)/2),u=o((t+n)/2),h=s((t-n)/2),d=o((t-n)/2),f=s((n-t)/2),p=o((n-t)/2);switch(i){case"XYX":r.set(a*u,l*h,l*d,a*c);break;case"YZY":r.set(l*d,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*d,a*u,a*c);break;case"XZX":r.set(a*u,l*p,l*f,a*c);break;case"YXY":r.set(l*f,a*u,l*p,a*c);break;case"ZYZ":r.set(l*p,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Rn(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function ue(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const ml={DEG2RAD:Ms,RAD2DEG:Oo,generateUUID:ri,clamp:re,euclideanModulo:bp,mapLinear:$S,inverseLerp:YS,lerp:La,damp:qS,pingpong:jS,smoothstep:ZS,smootherstep:JS,randInt:KS,randFloat:QS,randFloatSpread:t1,seededRandom:e1,degToRad:n1,radToDeg:i1,isPowerOfTwo:r1,ceilPowerOfTwo:s1,floorPowerOfTwo:o1,setQuaternionFromProperEuler:a1,normalize:ue,denormalize:Rn};class at{constructor(t=0,e=0){at.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=re(this.x,t.x,e.x),this.y=re(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=re(this.x,t,e),this.y=re(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(re(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(re(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*n-o*i+t.x,this.y=s*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class cn{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=s[o+0],f=s[o+1],p=s[o+2],y=s[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=y;return}if(h!==y||l!==d||c!==f||u!==p){let m=1-a;const g=l*d+c*f+u*p+h*y,w=g>=0?1:-1,b=1-g*g;if(b>Number.EPSILON){const A=Math.sqrt(b),S=Math.atan2(A,g*w);m=Math.sin(m*S)/A,a=Math.sin(a*S)/A}const M=a*w;if(l=l*m+d*M,c=c*m+f*M,u=u*m+p*M,h=h*m+y*M,m===1-a){const A=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=A,c*=A,u*=A,h*=A}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return t[e]=a*p+u*h+l*f-c*d,t[e+1]=l*p+u*d+c*h-a*f,t[e+2]=c*p+u*f+a*d-l*h,t[e+3]=u*p-a*h-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,s=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(s/2),d=l(n/2),f=l(i/2),p=l(s/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],h=e[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(s-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(s+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(s-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(s+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(re(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*s+e*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-e)*u)/c,d=Math.sin(e*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),s*Math.sin(e),s*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class L{constructor(t=0,e=0,n=0){L.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(jm.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(jm.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,o=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,o=t.y,a=t.z,l=t.w,c=2*(o*i-a*n),u=2*(a*e-s*i),h=2*(s*n-o*e);return this.x=e+l*c+o*h-a*u,this.y=n+l*u+a*c-s*h,this.z=i+l*h+s*u-o*c,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=re(this.x,t.x,e.x),this.y=re(this.y,t.y,e.y),this.z=re(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=re(this.x,t,e),this.y=re(this.y,t,e),this.z=re(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(re(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return Kh.copy(this).projectOnVector(t),this.sub(Kh)}reflect(t){return this.sub(Kh.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(re(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Kh=new L,jm=new cn;class le{constructor(t,e,n,i,s,o,a,l,c){le.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c)}set(t,e,n,i,s,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],y=i[0],m=i[3],g=i[6],w=i[1],b=i[4],M=i[7],A=i[2],S=i[5],E=i[8];return s[0]=o*y+a*w+l*A,s[3]=o*m+a*b+l*S,s[6]=o*g+a*M+l*E,s[1]=c*y+u*w+h*A,s[4]=c*m+u*b+h*S,s[7]=c*g+u*M+h*E,s[2]=d*y+f*w+p*A,s[5]=d*m+f*b+p*S,s[8]=d*g+f*M+p*E,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=u*o-a*c,d=a*l-u*s,f=c*s-o*l,p=e*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/p;return t[0]=h*y,t[1]=(i*c-u*n)*y,t[2]=(a*n-i*o)*y,t[3]=d*y,t[4]=(u*e-i*l)*y,t[5]=(i*s-a*e)*y,t[6]=f*y,t[7]=(n*l-c*e)*y,t[8]=(o*e-n*s)*y,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(Qh.makeScale(t,e)),this}rotate(t){return this.premultiply(Qh.makeRotation(-t)),this}translate(t,e){return this.premultiply(Qh.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const Qh=new le;function vv(r){for(let t=r.length-1;t>=0;--t)if(r[t]>=65535)return!0;return!1}const l1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function xo(r,t){return new l1[r](t)}function qa(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function xv(){const r=qa("canvas");return r.style.display="block",r}const Zm={};function ja(r){r in Zm||(Zm[r]=!0,console.warn(r))}function c1(r,t,e){return new Promise(function(n,i){function s(){switch(r.clientWaitSync(t,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:i();break;case r.TIMEOUT_EXPIRED:setTimeout(s,e);break;default:n()}}setTimeout(s,e)})}const Jm=new le().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),Km=new le().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function u1(){const r={enabled:!0,workingColorSpace:Rs,spaces:{},convert:function(i,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===Ee&&(i.r=cr(i.r),i.g=cr(i.g),i.b=cr(i.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Ee&&(i.r=To(i.r),i.g=To(i.g),i.b=To(i.b))),i},workingToColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},colorSpaceToWorking:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===or?$a:this.spaces[i].transfer},getToneMappingMode:function(i){return this.spaces[i].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,o){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,s){return ja("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),r.workingToColorSpace(i,s)},toWorkingColorSpace:function(i,s){return ja("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),r.colorSpaceToWorking(i,s)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return r.define({[Rs]:{primaries:t,whitePoint:n,transfer:$a,toXYZ:Jm,fromXYZ:Km,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Vn},outputColorSpaceConfig:{drawingBufferColorSpace:Vn}},[Vn]:{primaries:t,whitePoint:n,transfer:Ee,toXYZ:Jm,fromXYZ:Km,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Vn}}}),r}const ve=u1();function cr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function To(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Vs;class bv{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{Vs===void 0&&(Vs=qa("canvas")),Vs.width=t.width,Vs.height=t.height;const i=Vs.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=Vs}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=qa("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=cr(s[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(cr(e[n]/255)*255):e[n]=cr(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let h1=0;class Or{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:h1++}),this.uuid=ri(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(td(i[o].image)):s.push(td(i[o]))}else s=td(i);n.url=s}return e||(t.images[this.uuid]=n),n}}function td(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?bv.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let d1=0;const ed=new L;class Xe extends Yi{constructor(t=Xe.DEFAULT_IMAGE,e=Xe.DEFAULT_MAPPING,n=hi,i=hi,s=nn,o=Vi,a=Nn,l=Ci,c=Xe.DEFAULT_ANISOTROPY,u=or){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:d1++}),this.uuid=ri(),this.name="",this.source=new Or(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new at(0,0),this.repeat=new at(1,1),this.center=new at(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new le,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(ed).x}get height(){return this.source.getSize(ed).y}get depth(){return this.source.getSize(ed).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Texture.setValues(): parameter '".concat(e,"' has value of undefined."));continue}const i=this[e];if(i===void 0){console.warn("THREE.Texture.setValues(): property '".concat(e,"' does not exist."));continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==rh)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Ha:t.x=t.x-Math.floor(t.x);break;case hi:t.x=t.x<0?0:1;break;case Ga:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Ha:t.y=t.y-Math.floor(t.y);break;case hi:t.y=t.y<0?0:1;break;case Ga:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}Xe.DEFAULT_IMAGE=null;Xe.DEFAULT_MAPPING=rh;Xe.DEFAULT_ANISOTROPY=1;class _e{constructor(t=0,e=0,n=0,i=1){_e.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*s,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const l=t.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],y=l[2],m=l[6],g=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-y)<.01&&Math.abs(p-m)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+y)<.1&&Math.abs(p+m)<.1&&Math.abs(c+f+g-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const b=(c+1)/2,M=(f+1)/2,A=(g+1)/2,S=(u+d)/4,E=(h+y)/4,x=(p+m)/4;return b>M&&b>A?b<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(b),i=S/n,s=E/n):M>A?M<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(M),n=S/i,s=x/i):A<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(A),n=E/s,i=x/s),this.set(n,i,s,e),this}let w=Math.sqrt((m-p)*(m-p)+(h-y)*(h-y)+(d-u)*(d-u));return Math.abs(w)<.001&&(w=1),this.x=(m-p)/w,this.y=(h-y)/w,this.z=(d-u)/w,this.w=Math.acos((c+f+g-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=re(this.x,t.x,e.x),this.y=re(this.y,t.y,e.y),this.z=re(this.z,t.z,e.z),this.w=re(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=re(this.x,t,e),this.y=re(this.y,t,e),this.z=re(this.z,t,e),this.w=re(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(re(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Mp extends Yi{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:nn,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new _e(0,0,t,e),this.scissorTest=!1,this.viewport=new _e(0,0,t,e);const i={width:t,height:e,depth:n.depth},s=new Xe(i);this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:nn,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new Or(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ri extends Mp{constructor(t=1,e=1,n={}){super(t,e,n),this.isWebGLRenderTarget=!0}}class dh extends Xe{constructor(t=null,e=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=hn,this.minFilter=hn,this.wrapR=hi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class f1 extends Ri{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new dh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class fh extends Xe{constructor(t=null,e=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:n,depth:i},this.magFilter=hn,this.minFilter=hn,this.wrapR=hi,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class p1 extends Ri{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new fh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class bn{constructor(t=new L(1/0,1/0,1/0),e=new L(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(_i.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(_i.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=_i.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const s=n.getAttribute("position");if(e===!0&&s!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,_i):_i.fromBufferAttribute(s,o),_i.applyMatrix4(t.matrixWorld),this.expandByPoint(_i);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Fl.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Fl.copy(n.boundingBox)),Fl.applyMatrix4(t.matrixWorld),this.union(Fl)}const i=t.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,_i),_i.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Qo),Bl.subVectors(this.max,Qo),Hs.subVectors(t.a,Qo),Gs.subVectors(t.b,Qo),Ws.subVectors(t.c,Qo),br.subVectors(Gs,Hs),Mr.subVectors(Ws,Gs),Yr.subVectors(Hs,Ws);let e=[0,-br.z,br.y,0,-Mr.z,Mr.y,0,-Yr.z,Yr.y,br.z,0,-br.x,Mr.z,0,-Mr.x,Yr.z,0,-Yr.x,-br.y,br.x,0,-Mr.y,Mr.x,0,-Yr.y,Yr.x,0];return!nd(e,Hs,Gs,Ws,Bl)||(e=[1,0,0,0,1,0,0,0,1],!nd(e,Hs,Gs,Ws,Bl))?!1:(zl.crossVectors(br,Mr),e=[zl.x,zl.y,zl.z],nd(e,Hs,Gs,Ws,Bl))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,_i).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(_i).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ji[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ji[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ji[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ji[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ji[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ji[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ji[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ji[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ji),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const Ji=[new L,new L,new L,new L,new L,new L,new L,new L],_i=new L,Fl=new bn,Hs=new L,Gs=new L,Ws=new L,br=new L,Mr=new L,Yr=new L,Qo=new L,Bl=new L,zl=new L,qr=new L;function nd(r,t,e,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){qr.fromArray(r,s);const a=i.x*Math.abs(qr.x)+i.y*Math.abs(qr.y)+i.z*Math.abs(qr.z),l=t.dot(qr),c=e.dot(qr),u=n.dot(qr);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const m1=new bn,ta=new L,id=new L;class un{constructor(t=new L,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):m1.setFromPoints(t).getCenter(n);let i=0;for(let s=0,o=t.length;s<o;s++)i=Math.max(i,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;ta.subVectors(t,this.center);const e=ta.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(ta,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(id.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(ta.copy(t.center).add(id)),this.expandByPoint(ta.copy(t.center).sub(id))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}const Ki=new L,rd=new L,kl=new L,Sr=new L,sd=new L,Vl=new L,od=new L;class Xi{constructor(t=new L,e=new L(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ki)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ki.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ki.copy(this.origin).addScaledVector(this.direction,e),Ki.distanceToSquared(t))}distanceSqToSegment(t,e,n,i){rd.copy(t).add(e).multiplyScalar(.5),kl.copy(e).sub(t).normalize(),Sr.copy(this.origin).sub(rd);const s=t.distanceTo(e)*.5,o=-this.direction.dot(kl),a=Sr.dot(this.direction),l=-Sr.dot(kl),c=Sr.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=s*u,h>=0)if(d>=-p)if(d<=p){const y=1/u;h*=y,d*=y,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*s+a)),d=h>0?-s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(h=Math.max(0,-(o*s+a)),d=h>0?s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c);else d=o>0?-s:s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,h),i&&i.copy(rd).addScaledVector(kl,d),f}intersectSphere(t,e){Ki.subVectors(t.center,this.origin);const n=Ki.dot(this.direction),i=Ki.dot(Ki)-n*n,s=t.radius*t.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,l=n+o;return l<0?null:a<0?this.at(l,e):this.at(a,e)}intersectsSphere(t){return t.radius<0?!1:this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return n===null?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,i,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(n=(t.min.x-d.x)*c,i=(t.max.x-d.x)*c):(n=(t.max.x-d.x)*c,i=(t.min.x-d.x)*c),u>=0?(s=(t.min.y-d.y)*u,o=(t.max.y-d.y)*u):(s=(t.max.y-d.y)*u,o=(t.min.y-d.y)*u),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),h>=0?(a=(t.min.z-d.z)*h,l=(t.max.z-d.z)*h):(a=(t.max.z-d.z)*h,l=(t.min.z-d.z)*h),n>l||a>i)||((a>n||n!==n)&&(n=a),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,e)}intersectsBox(t){return this.intersectBox(t,Ki)!==null}intersectTriangle(t,e,n,i,s){sd.subVectors(e,t),Vl.subVectors(n,t),od.crossVectors(sd,Vl);let o=this.direction.dot(od),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Sr.subVectors(this.origin,t);const l=a*this.direction.dot(Vl.crossVectors(Sr,Vl));if(l<0)return null;const c=a*this.direction.dot(sd.cross(Sr));if(c<0||l+c>o)return null;const u=-a*Sr.dot(od);return u<0?null:this.at(u/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class jt{constructor(t,e,n,i,s,o,a,l,c,u,h,d,f,p,y,m){jt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c,u,h,d,f,p,y,m)}set(t,e,n,i,s,o,a,l,c,u,h,d,f,p,y,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=s,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=u,g[10]=h,g[14]=d,g[3]=f,g[7]=p,g[11]=y,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new jt().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/Xs.setFromMatrixColumn(t,0).length(),s=1/Xs.setFromMatrixColumn(t,1).length(),o=1/Xs.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,s=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(t.order==="XYZ"){const d=o*u,f=o*h,p=a*u,y=a*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=f+p*c,e[5]=d-y*c,e[9]=-a*l,e[2]=y-d*c,e[6]=p+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*u,f=l*h,p=c*u,y=c*h;e[0]=d+y*a,e[4]=p*a-f,e[8]=o*c,e[1]=o*h,e[5]=o*u,e[9]=-a,e[2]=f*a-p,e[6]=y+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*u,f=l*h,p=c*u,y=c*h;e[0]=d-y*a,e[4]=-o*h,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*u,e[9]=y-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*u,f=o*h,p=a*u,y=a*h;e[0]=l*u,e[4]=p*c-f,e[8]=d*c+y,e[1]=l*h,e[5]=y*c+d,e[9]=f*c-p,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,p=a*l,y=a*c;e[0]=l*u,e[4]=y-d*h,e[8]=p*h+f,e[1]=h,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=f*h+p,e[10]=d-y*h}else if(t.order==="XZY"){const d=o*l,f=o*c,p=a*l,y=a*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=d*h+y,e[5]=o*u,e[9]=f*h-p,e[2]=p*h-f,e[6]=a*u,e[10]=y*h+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(g1,t,y1)}lookAt(t,e,n){const i=this.elements;return Zn.subVectors(t,e),Zn.lengthSq()===0&&(Zn.z=1),Zn.normalize(),wr.crossVectors(n,Zn),wr.lengthSq()===0&&(Math.abs(n.z)===1?Zn.x+=1e-4:Zn.z+=1e-4,Zn.normalize(),wr.crossVectors(n,Zn)),wr.normalize(),Hl.crossVectors(Zn,wr),i[0]=wr.x,i[4]=Hl.x,i[8]=Zn.x,i[1]=wr.y,i[5]=Hl.y,i[9]=Zn.y,i[2]=wr.z,i[6]=Hl.z,i[10]=Zn.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],y=n[6],m=n[10],g=n[14],w=n[3],b=n[7],M=n[11],A=n[15],S=i[0],E=i[4],x=i[8],v=i[12],_=i[1],T=i[5],I=i[9],B=i[13],V=i[2],H=i[6],U=i[10],Q=i[14],W=i[3],lt=i[7],ut=i[11],mt=i[15];return s[0]=o*S+a*_+l*V+c*W,s[4]=o*E+a*T+l*H+c*lt,s[8]=o*x+a*I+l*U+c*ut,s[12]=o*v+a*B+l*Q+c*mt,s[1]=u*S+h*_+d*V+f*W,s[5]=u*E+h*T+d*H+f*lt,s[9]=u*x+h*I+d*U+f*ut,s[13]=u*v+h*B+d*Q+f*mt,s[2]=p*S+y*_+m*V+g*W,s[6]=p*E+y*T+m*H+g*lt,s[10]=p*x+y*I+m*U+g*ut,s[14]=p*v+y*B+m*Q+g*mt,s[3]=w*S+b*_+M*V+A*W,s[7]=w*E+b*T+M*H+A*lt,s[11]=w*x+b*I+M*U+A*ut,s[15]=w*v+b*B+M*Q+A*mt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],h=t[6],d=t[10],f=t[14],p=t[3],y=t[7],m=t[11],g=t[15];return p*(+s*l*h-i*c*h-s*a*d+n*c*d+i*a*f-n*l*f)+y*(+e*l*f-e*c*d+s*o*d-i*o*f+i*c*u-s*l*u)+m*(+e*c*h-e*a*f-s*o*h+n*o*f+s*a*u-n*c*u)+g*(-i*a*u-e*l*h+e*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],y=t[13],m=t[14],g=t[15],w=h*m*c-y*d*c+y*l*f-a*m*f-h*l*g+a*d*g,b=p*d*c-u*m*c-p*l*f+o*m*f+u*l*g-o*d*g,M=u*y*c-p*h*c+p*a*f-o*y*f-u*a*g+o*h*g,A=p*h*l-u*y*l-p*a*d+o*y*d+u*a*m-o*h*m,S=e*w+n*b+i*M+s*A;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/S;return t[0]=w*E,t[1]=(y*d*s-h*m*s-y*i*f+n*m*f+h*i*g-n*d*g)*E,t[2]=(a*m*s-y*l*s+y*i*c-n*m*c-a*i*g+n*l*g)*E,t[3]=(h*l*s-a*d*s-h*i*c+n*d*c+a*i*f-n*l*f)*E,t[4]=b*E,t[5]=(u*m*s-p*d*s+p*i*f-e*m*f-u*i*g+e*d*g)*E,t[6]=(p*l*s-o*m*s-p*i*c+e*m*c+o*i*g-e*l*g)*E,t[7]=(o*d*s-u*l*s+u*i*c-e*d*c-o*i*f+e*l*f)*E,t[8]=M*E,t[9]=(p*h*s-u*y*s-p*n*f+e*y*f+u*n*g-e*h*g)*E,t[10]=(o*y*s-p*a*s+p*n*c-e*y*c-o*n*g+e*a*g)*E,t[11]=(u*a*s-o*h*s-u*n*c+e*h*c+o*n*f-e*a*f)*E,t[12]=A*E,t[13]=(u*y*i-p*h*i+p*n*d-e*y*d-u*n*m+e*h*m)*E,t[14]=(p*a*i-o*y*i-p*n*l+e*y*l+o*n*m-e*a*m)*E,t[15]=(o*h*i-u*a*i+u*n*l-e*h*l-o*n*d+e*a*d)*E,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,o=t.x,a=t.y,l=t.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,o){return this.set(1,n,s,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,o=e._y,a=e._z,l=e._w,c=s+s,u=o+o,h=a+a,d=s*c,f=s*u,p=s*h,y=o*u,m=o*h,g=a*h,w=l*c,b=l*u,M=l*h,A=n.x,S=n.y,E=n.z;return i[0]=(1-(y+g))*A,i[1]=(f+M)*A,i[2]=(p-b)*A,i[3]=0,i[4]=(f-M)*S,i[5]=(1-(d+g))*S,i[6]=(m+w)*S,i[7]=0,i[8]=(p+b)*E,i[9]=(m-w)*E,i[10]=(1-(d+y))*E,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=Xs.set(i[0],i[1],i[2]).length();const o=Xs.set(i[4],i[5],i[6]).length(),a=Xs.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],vi.copy(this);const c=1/s,u=1/o,h=1/a;return vi.elements[0]*=c,vi.elements[1]*=c,vi.elements[2]*=c,vi.elements[4]*=u,vi.elements[5]*=u,vi.elements[6]*=u,vi.elements[8]*=h,vi.elements[9]*=h,vi.elements[10]*=h,e.setFromRotationMatrix(vi),n.x=s,n.y=o,n.z=a,this}makePerspective(t,e,n,i,s,o,a=ii,l=!1){const c=this.elements,u=2*s/(e-t),h=2*s/(n-i),d=(e+t)/(e-t),f=(n+i)/(n-i);let p,y;if(l)p=s/(o-s),y=o*s/(o-s);else if(a===ii)p=-(o+s)/(o-s),y=-2*o*s/(o-s);else if(a===Do)p=-o/(o-s),y=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=h,c[9]=f,c[13]=0,c[2]=0,c[6]=0,c[10]=p,c[14]=y,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,i,s,o,a=ii,l=!1){const c=this.elements,u=2/(e-t),h=2/(n-i),d=-(e+t)/(e-t),f=-(n+i)/(n-i);let p,y;if(l)p=1/(o-s),y=o/(o-s);else if(a===ii)p=-2/(o-s),y=-(o+s)/(o-s);else if(a===Do)p=-1/(o-s),y=-s/(o-s);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=0,c[12]=d,c[1]=0,c[5]=h,c[9]=0,c[13]=f,c[2]=0,c[6]=0,c[10]=p,c[14]=y,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const Xs=new L,vi=new jt,g1=new L(0,0,0),y1=new L(1,1,1),wr=new L,Hl=new L,Zn=new L,Qm=new jt,tg=new cn;class si{constructor(t=0,e=0,n=0,i=si.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(re(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-re(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(re(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-re(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(re(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-re(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Qm.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Qm,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return tg.setFromEuler(this),this.setFromQuaternion(tg,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}si.DEFAULT_ORDER="XYZ";class gl{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let _1=0;const eg=new L,$s=new cn,Qi=new jt,Gl=new L,ea=new L,v1=new L,x1=new cn,ng=new L(1,0,0),ig=new L(0,1,0),rg=new L(0,0,1),sg={type:"added"},b1={type:"removed"},Ys={type:"childadded",child:null},ad={type:"childremoved",child:null};class de extends Yi{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:_1++}),this.uuid=ri(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=de.DEFAULT_UP.clone();const t=new L,e=new si,n=new cn,i=new L(1,1,1);function s(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new jt},normalMatrix:{value:new le}}),this.matrix=new jt,this.matrixWorld=new jt,this.matrixAutoUpdate=de.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=de.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new gl,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return $s.setFromAxisAngle(t,e),this.quaternion.multiply($s),this}rotateOnWorldAxis(t,e){return $s.setFromAxisAngle(t,e),this.quaternion.premultiply($s),this}rotateX(t){return this.rotateOnAxis(ng,t)}rotateY(t){return this.rotateOnAxis(ig,t)}rotateZ(t){return this.rotateOnAxis(rg,t)}translateOnAxis(t,e){return eg.copy(t).applyQuaternion(this.quaternion),this.position.add(eg.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(ng,t)}translateY(t){return this.translateOnAxis(ig,t)}translateZ(t){return this.translateOnAxis(rg,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Qi.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Gl.copy(t):Gl.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ea.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qi.lookAt(ea,Gl,this.up):Qi.lookAt(Gl,ea,this.up),this.quaternion.setFromRotationMatrix(Qi),i&&(Qi.extractRotation(i.matrixWorld),$s.setFromRotationMatrix(Qi),this.quaternion.premultiply($s.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(sg),Ys.child=t,this.dispatchEvent(Ys),Ys.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(b1),ad.child=t,this.dispatchEvent(ad),ad.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Qi.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Qi.multiply(t.parent.matrixWorld)),t.applyMatrix4(Qi),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(sg),Ys.child=t,this.dispatchEvent(Ys),Ys.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ea,t,v1),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ea,x1,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(a=>({...a})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(t.shapes,h)}else s(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(t.materials,this.material[l]));i.material=a}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),h=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}de.DEFAULT_UP=new L(0,1,0);de.DEFAULT_MATRIX_AUTO_UPDATE=!0;de.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const xi=new L,tr=new L,ld=new L,er=new L,qs=new L,js=new L,og=new L,cd=new L,ud=new L,hd=new L,dd=new _e,fd=new _e,pd=new _e;class vn{constructor(t=new L,e=new L,n=new L){this.a=t,this.b=e,this.c=n}static getNormal(t,e,n,i){i.subVectors(n,e),xi.subVectors(t,e),i.cross(xi);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(t,e,n,i,s){xi.subVectors(i,e),tr.subVectors(n,e),ld.subVectors(t,e);const o=xi.dot(xi),a=xi.dot(tr),l=xi.dot(ld),c=tr.dot(tr),u=tr.dot(ld),h=o*c-a*a;if(h===0)return s.set(0,0,0),null;const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(t,e,n,i){return this.getBarycoord(t,e,n,i,er)===null?!1:er.x>=0&&er.y>=0&&er.x+er.y<=1}static getInterpolation(t,e,n,i,s,o,a,l){return this.getBarycoord(t,e,n,i,er)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,er.x),l.addScaledVector(o,er.y),l.addScaledVector(a,er.z),l)}static getInterpolatedAttribute(t,e,n,i,s,o){return dd.setScalar(0),fd.setScalar(0),pd.setScalar(0),dd.fromBufferAttribute(t,e),fd.fromBufferAttribute(t,n),pd.fromBufferAttribute(t,i),o.setScalar(0),o.addScaledVector(dd,s.x),o.addScaledVector(fd,s.y),o.addScaledVector(pd,s.z),o}static isFrontFacing(t,e,n,i){return xi.subVectors(n,e),tr.subVectors(t,e),xi.cross(tr).dot(i)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,i){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[i]),this}setFromAttributeAndIndices(t,e,n,i){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,n),this.c.fromBufferAttribute(t,i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return xi.subVectors(this.c,this.b),tr.subVectors(this.a,this.b),xi.cross(tr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return vn.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return vn.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,n,i,s){return vn.getInterpolation(t,this.a,this.b,this.c,e,n,i,s)}containsPoint(t){return vn.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return vn.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const n=this.a,i=this.b,s=this.c;let o,a;qs.subVectors(i,n),js.subVectors(s,n),cd.subVectors(t,n);const l=qs.dot(cd),c=js.dot(cd);if(l<=0&&c<=0)return e.copy(n);ud.subVectors(t,i);const u=qs.dot(ud),h=js.dot(ud);if(u>=0&&h<=u)return e.copy(i);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),e.copy(n).addScaledVector(qs,o);hd.subVectors(t,s);const f=qs.dot(hd),p=js.dot(hd);if(p>=0&&f<=p)return e.copy(s);const y=f*c-l*p;if(y<=0&&c>=0&&p<=0)return a=c/(c-p),e.copy(n).addScaledVector(js,a);const m=u*p-f*h;if(m<=0&&h-u>=0&&f-p>=0)return og.subVectors(s,i),a=(h-u)/(h-u+(f-p)),e.copy(i).addScaledVector(og,a);const g=1/(m+y+d);return o=y*g,a=d*g,e.copy(n).addScaledVector(qs,o).addScaledVector(js,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Mv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Tr={h:0,s:0,l:0},Wl={h:0,s:0,l:0};function md(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}class At{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Vn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,ve.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=ve.workingColorSpace){return this.r=t,this.g=e,this.b=n,ve.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=ve.workingColorSpace){if(t=bp(t,1),e=re(e,0,1),n=re(n,0,1),e===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+e):n+e-n*e,o=2*n-s;this.r=md(o,s,t+1/3),this.g=md(o,s,t),this.b=md(o,s,t-1/3)}return ve.colorSpaceToWorking(this,i),this}setStyle(t,e=Vn){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=i[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(s,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Vn){const n=Mv[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=cr(t.r),this.g=cr(t.g),this.b=cr(t.b),this}copyLinearToSRGB(t){return this.r=To(t.r),this.g=To(t.g),this.b=To(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Vn){return ve.workingToColorSpace(mn.copy(this),t),Math.round(re(mn.r*255,0,255))*65536+Math.round(re(mn.g*255,0,255))*256+Math.round(re(mn.b*255,0,255))}getHexString(t=Vn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=ve.workingColorSpace){ve.workingToColorSpace(mn.copy(this),e);const n=mn.r,i=mn.g,s=mn.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-s)/h+(i<s?6:0);break;case i:l=(s-n)/h+2;break;case s:l=(n-i)/h+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=ve.workingColorSpace){return ve.workingToColorSpace(mn.copy(this),e),t.r=mn.r,t.g=mn.g,t.b=mn.b,t}getStyle(t=Vn){ve.workingToColorSpace(mn.copy(this),t);const e=mn.r,n=mn.g,i=mn.b;return t!==Vn?"color(".concat(t," ").concat(e.toFixed(3)," ").concat(n.toFixed(3)," ").concat(i.toFixed(3),")"):"rgb(".concat(Math.round(e*255),",").concat(Math.round(n*255),",").concat(Math.round(i*255),")")}offsetHSL(t,e,n){return this.getHSL(Tr),this.setHSL(Tr.h+t,Tr.s+e,Tr.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Tr),t.getHSL(Wl);const n=La(Tr.h,Wl.h,e),i=La(Tr.s,Wl.s,e),s=La(Tr.l,Wl.l,e);return this.setHSL(n,i,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,s=t.elements;return this.r=s[0]*e+s[3]*n+s[6]*i,this.g=s[1]*e+s[4]*n+s[7]*i,this.b=s[2]*e+s[5]*n+s[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const mn=new At;At.NAMES=Mv;let M1=0;class fn extends Yi{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:M1++}),this.uuid=ri(),this.name="",this.type="Material",this.blending=bs,this.side=pr,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ru,this.blendDst=su,this.blendEquation=Lr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new At(0,0,0),this.blendAlpha=0,this.depthFunc=Cs,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=bf,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=cs,this.stencilZFail=cs,this.stencilZPass=cs,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Material: parameter '".concat(e,"' has value of undefined."));continue}const i=this[e];if(i===void 0){console.warn("THREE.Material: '".concat(e,"' is not a property of THREE.").concat(this.type,"."));continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const n={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.sheenColorMap&&this.sheenColorMap.isTexture&&(n.sheenColorMap=this.sheenColorMap.toJSON(t).uuid),this.sheenRoughnessMap&&this.sheenRoughnessMap.isTexture&&(n.sheenRoughnessMap=this.sheenRoughnessMap.toJSON(t).uuid),this.dispersion!==void 0&&(n.dispersion=this.dispersion),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapRotation!==void 0&&(n.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==bs&&(n.blending=this.blending),this.side!==pr&&(n.side=this.side),this.vertexColors===!0&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=!0),this.blendSrc!==ru&&(n.blendSrc=this.blendSrc),this.blendDst!==su&&(n.blendDst=this.blendDst),this.blendEquation!==Lr&&(n.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(n.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(n.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(n.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(n.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(n.blendAlpha=this.blendAlpha),this.depthFunc!==Cs&&(n.depthFunc=this.depthFunc),this.depthTest===!1&&(n.depthTest=this.depthTest),this.depthWrite===!1&&(n.depthWrite=this.depthWrite),this.colorWrite===!1&&(n.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(n.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==bf&&(n.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(n.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(n.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==cs&&(n.stencilFail=this.stencilFail),this.stencilZFail!==cs&&(n.stencilZFail=this.stencilZFail),this.stencilZPass!==cs&&(n.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(n.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaHash===!0&&(n.alphaHash=!0),this.alphaToCoverage===!0&&(n.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=!0),this.forceSinglePass===!0&&(n.forceSinglePass=!0),this.wireframe===!0&&(n.wireframe=!0),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=!0),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(e){const s=i(t.textures),o=i(t.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(e!==null){const i=e.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=e[s].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}}class vr extends fn{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new At(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new si,this.combine=fl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const ar=S1();function S1(){const r=new ArrayBuffer(4),t=new Float32Array(r),e=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;(c&8388608)===0;)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:t,uint32View:e,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:a}}function kn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=re(r,-65504,65504),ar.floatView[0]=r;const t=ar.uint32View[0],e=t>>23&511;return ar.baseTable[e]+((t&8388607)>>ar.shiftTable[e])}function Sa(r){const t=r>>10;return ar.uint32View[0]=ar.mantissaTable[ar.offsetTable[t]+(r&1023)]+ar.exponentTable[t],ar.floatView[0]}class w1{static toHalfFloat(t){return kn(t)}static fromHalfFloat(t){return Sa(t)}}const Ze=new L,Xl=new at;let T1=0;class Te{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:T1++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Ya,this.updateRanges=[],this.gpuType=Gn,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)Xl.fromBufferAttribute(this,e),Xl.applyMatrix3(t),this.setXY(e,Xl.x,Xl.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Ze.fromBufferAttribute(this,e),Ze.applyMatrix3(t),this.setXYZ(e,Ze.x,Ze.y,Ze.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Ze.fromBufferAttribute(this,e),Ze.applyMatrix4(t),this.setXYZ(e,Ze.x,Ze.y,Ze.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Ze.fromBufferAttribute(this,e),Ze.applyNormalMatrix(t),this.setXYZ(e,Ze.x,Ze.y,Ze.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Ze.fromBufferAttribute(this,e),Ze.transformDirection(t),this.setXYZ(e,Ze.x,Ze.y,Ze.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Rn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ue(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Rn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ue(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Rn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ue(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Rn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ue(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Rn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ue(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array),i=ue(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array),i=ue(i,this.array),s=ue(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Ya&&(t.usage=this.usage),t}}class E1 extends Te{constructor(t,e,n){super(new Int8Array(t),e,n)}}class A1 extends Te{constructor(t,e,n){super(new Uint8Array(t),e,n)}}class C1 extends Te{constructor(t,e,n){super(new Uint8ClampedArray(t),e,n)}}class R1 extends Te{constructor(t,e,n){super(new Int16Array(t),e,n)}}class Sp extends Te{constructor(t,e,n){super(new Uint16Array(t),e,n)}}class I1 extends Te{constructor(t,e,n){super(new Int32Array(t),e,n)}}class wp extends Te{constructor(t,e,n){super(new Uint32Array(t),e,n)}}class N1 extends Te{constructor(t,e,n){super(new Uint16Array(t),e,n),this.isFloat16BufferAttribute=!0}getX(t){let e=Sa(this.array[t*this.itemSize]);return this.normalized&&(e=Rn(e,this.array)),e}setX(t,e){return this.normalized&&(e=ue(e,this.array)),this.array[t*this.itemSize]=kn(e),this}getY(t){let e=Sa(this.array[t*this.itemSize+1]);return this.normalized&&(e=Rn(e,this.array)),e}setY(t,e){return this.normalized&&(e=ue(e,this.array)),this.array[t*this.itemSize+1]=kn(e),this}getZ(t){let e=Sa(this.array[t*this.itemSize+2]);return this.normalized&&(e=Rn(e,this.array)),e}setZ(t,e){return this.normalized&&(e=ue(e,this.array)),this.array[t*this.itemSize+2]=kn(e),this}getW(t){let e=Sa(this.array[t*this.itemSize+3]);return this.normalized&&(e=Rn(e,this.array)),e}setW(t,e){return this.normalized&&(e=ue(e,this.array)),this.array[t*this.itemSize+3]=kn(e),this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array)),this.array[t+0]=kn(e),this.array[t+1]=kn(n),this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array),i=ue(i,this.array)),this.array[t+0]=kn(e),this.array[t+1]=kn(n),this.array[t+2]=kn(i),this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array),i=ue(i,this.array),s=ue(s,this.array)),this.array[t+0]=kn(e),this.array[t+1]=kn(n),this.array[t+2]=kn(i),this.array[t+3]=kn(s),this}}class zt extends Te{constructor(t,e,n){super(new Float32Array(t),e,n)}}let P1=0;const li=new jt,gd=new de,Zs=new L,Jn=new bn,na=new bn,an=new L;class ce extends Yi{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:P1++}),this.uuid=ri(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(vv(t)?wp:Sp)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new le().getNormalMatrix(t);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(t),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return li.makeRotationFromQuaternion(t),this.applyMatrix4(li),this}rotateX(t){return li.makeRotationX(t),this.applyMatrix4(li),this}rotateY(t){return li.makeRotationY(t),this.applyMatrix4(li),this}rotateZ(t){return li.makeRotationZ(t),this.applyMatrix4(li),this}translate(t,e,n){return li.makeTranslation(t,e,n),this.applyMatrix4(li),this}scale(t,e,n){return li.makeScale(t,e,n),this.applyMatrix4(li),this}lookAt(t){return gd.lookAt(t),gd.updateMatrix(),this.applyMatrix4(gd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zs).negate(),this.translate(Zs.x,Zs.y,Zs.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const n=[];for(let i=0,s=t.length;i<s;i++){const o=t[i];n.push(o.x,o.y,o.z||0)}this.setAttribute("position",new zt(n,3))}else{const n=Math.min(t.length,e.count);for(let i=0;i<n;i++){const s=t[i];e.setXYZ(i,s.x,s.y,s.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new bn);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new L(-1/0,-1/0,-1/0),new L(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let n=0,i=e.length;n<i;n++){const s=e[n];Jn.setFromBufferAttribute(s),this.morphTargetsRelative?(an.addVectors(this.boundingBox.min,Jn.min),this.boundingBox.expandByPoint(an),an.addVectors(this.boundingBox.max,Jn.max),this.boundingBox.expandByPoint(an)):(this.boundingBox.expandByPoint(Jn.min),this.boundingBox.expandByPoint(Jn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new un);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new L,1/0);return}if(t){const n=this.boundingSphere.center;if(Jn.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];na.setFromBufferAttribute(a),this.morphTargetsRelative?(an.addVectors(Jn.min,na.min),Jn.expandByPoint(an),an.addVectors(Jn.max,na.max),Jn.expandByPoint(an)):(Jn.expandByPoint(na.min),Jn.expandByPoint(na.max))}Jn.getCenter(n);let i=0;for(let s=0,o=t.count;s<o;s++)an.fromBufferAttribute(t,s),i=Math.max(i,n.distanceToSquared(an));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)an.fromBufferAttribute(a,c),l&&(Zs.fromBufferAttribute(t,c),an.add(Zs)),i=Math.max(i,n.distanceToSquared(an))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.position,i=e.normal,s=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Te(new Float32Array(4*n.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let x=0;x<n.count;x++)a[x]=new L,l[x]=new L;const c=new L,u=new L,h=new L,d=new at,f=new at,p=new at,y=new L,m=new L;function g(x,v,_){c.fromBufferAttribute(n,x),u.fromBufferAttribute(n,v),h.fromBufferAttribute(n,_),d.fromBufferAttribute(s,x),f.fromBufferAttribute(s,v),p.fromBufferAttribute(s,_),u.sub(c),h.sub(c),f.sub(d),p.sub(d);const T=1/(f.x*p.y-p.x*f.y);isFinite(T)&&(y.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(T),m.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(T),a[x].add(y),a[v].add(y),a[_].add(y),l[x].add(m),l[v].add(m),l[_].add(m))}let w=this.groups;w.length===0&&(w=[{start:0,count:t.count}]);for(let x=0,v=w.length;x<v;++x){const _=w[x],T=_.start,I=_.count;for(let B=T,V=T+I;B<V;B+=3)g(t.getX(B+0),t.getX(B+1),t.getX(B+2))}const b=new L,M=new L,A=new L,S=new L;function E(x){A.fromBufferAttribute(i,x),S.copy(A);const v=a[x];b.copy(v),b.sub(A.multiplyScalar(A.dot(v))).normalize(),M.crossVectors(S,v);const T=M.dot(l[x])<0?-1:1;o.setXYZW(x,b.x,b.y,b.z,T)}for(let x=0,v=w.length;x<v;++x){const _=w[x],T=_.start,I=_.count;for(let B=T,V=T+I;B<V;B+=3)E(t.getX(B+0)),E(t.getX(B+1)),E(t.getX(B+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Te(new Float32Array(e.count*3),3),this.setAttribute("normal",n);else for(let d=0,f=n.count;d<f;d++)n.setXYZ(d,0,0,0);const i=new L,s=new L,o=new L,a=new L,l=new L,c=new L,u=new L,h=new L;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),y=t.getX(d+1),m=t.getX(d+2);i.fromBufferAttribute(e,p),s.fromBufferAttribute(e,y),o.fromBufferAttribute(e,m),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),a.fromBufferAttribute(n,p),l.fromBufferAttribute(n,y),c.fromBufferAttribute(n,m),a.add(u),l.add(u),c.add(u),n.setXYZ(p,a.x,a.y,a.z),n.setXYZ(y,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,f=e.count;d<f;d+=3)i.fromBufferAttribute(e,d+0),s.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),u.subVectors(o,s),h.subVectors(i,s),u.cross(h),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)an.fromBufferAttribute(t,e),an.normalize(),t.setXYZ(e,an.x,an.y,an.z)}toNonIndexed(){function t(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let y=0,m=l.length;y<m;y++){a.isInterleavedBufferAttribute?f=l[y]*a.data.stride+a.offset:f=l[y]*u;for(let g=0;g<u;g++)d[p++]=c[f++]}return new Te(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new ce,n=this.index.array,i=this.attributes;for(const a in i){const l=i[a],c=t(l,n);e.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=t(d,n);l.push(f)}e.morphAttributes[a]=l}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];e.addGroup(c.start,c.count,c.materialIndex)}return e}toJSON(){const t={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(t[c]=l[c]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const l in n){const c=n[l];t.data.attributes[l]=c.toJSON(t.data)}const i={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(t.data))}u.length>0&&(i[l]=u,s=!0)}s&&(t.data.morphAttributes=i,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere=a.toJSON()),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;n!==null&&this.setIndex(n.clone());const i=t.attributes;for(const c in i){const u=i[c];this.setAttribute(c,u.clone(e))}const s=t.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(e));this.morphAttributes[c]=u}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=t.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const ag=new jt,jr=new Xi,$l=new un,lg=new L,Yl=new L,ql=new L,jl=new L,yd=new L,Zl=new L,cg=new L,Jl=new L;class Ue extends de{constructor(t=new ce,e=new vr){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(t,e){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;e.fromBufferAttribute(i,t);const a=this.morphTargetInfluences;if(s&&a){Zl.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(yd.fromBufferAttribute(h,t),o?Zl.addScaledVector(yd,u):Zl.addScaledVector(yd.sub(e),u))}e.add(Zl)}return e}raycast(t,e){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),$l.copy(n.boundingSphere),$l.applyMatrix4(s),jr.copy(t.ray).recast(t.near),!($l.containsPoint(jr.origin)===!1&&(jr.intersectSphere($l,lg)===null||jr.origin.distanceToSquared(lg)>(t.far-t.near)**2))&&(ag.copy(s).invert(),jr.copy(t.ray).applyMatrix4(ag),!(n.boundingBox!==null&&jr.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(t,e,jr)))}_computeIntersections(t,e,n){let i;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,y=d.length;p<y;p++){const m=d[p],g=o[m.materialIndex],w=Math.max(m.start,f.start),b=Math.min(a.count,Math.min(m.start+m.count,f.start+f.count));for(let M=w,A=b;M<A;M+=3){const S=a.getX(M),E=a.getX(M+1),x=a.getX(M+2);i=Kl(this,g,t,n,c,u,h,S,E,x),i&&(i.faceIndex=Math.floor(M/3),i.face.materialIndex=m.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),y=Math.min(a.count,f.start+f.count);for(let m=p,g=y;m<g;m+=3){const w=a.getX(m),b=a.getX(m+1),M=a.getX(m+2);i=Kl(this,o,t,n,c,u,h,w,b,M),i&&(i.faceIndex=Math.floor(m/3),e.push(i))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,y=d.length;p<y;p++){const m=d[p],g=o[m.materialIndex],w=Math.max(m.start,f.start),b=Math.min(l.count,Math.min(m.start+m.count,f.start+f.count));for(let M=w,A=b;M<A;M+=3){const S=M,E=M+1,x=M+2;i=Kl(this,g,t,n,c,u,h,S,E,x),i&&(i.faceIndex=Math.floor(M/3),i.face.materialIndex=m.materialIndex,e.push(i))}}else{const p=Math.max(0,f.start),y=Math.min(l.count,f.start+f.count);for(let m=p,g=y;m<g;m+=3){const w=m,b=m+1,M=m+2;i=Kl(this,o,t,n,c,u,h,w,b,M),i&&(i.faceIndex=Math.floor(m/3),e.push(i))}}}}function L1(r,t,e,n,i,s,o,a){let l;if(t.side===Pn?l=n.intersectTriangle(o,s,i,!0,a):l=n.intersectTriangle(i,s,o,t.side===pr,a),l===null)return null;Jl.copy(a),Jl.applyMatrix4(r.matrixWorld);const c=e.ray.origin.distanceTo(Jl);return c<e.near||c>e.far?null:{distance:c,point:Jl.clone(),object:r}}function Kl(r,t,e,n,i,s,o,a,l,c){r.getVertexPosition(a,Yl),r.getVertexPosition(l,ql),r.getVertexPosition(c,jl);const u=L1(r,t,e,n,Yl,ql,jl,cg);if(u){const h=new L;vn.getBarycoord(cg,Yl,ql,jl,h),i&&(u.uv=vn.getInterpolatedAttribute(i,a,l,c,h,new at)),s&&(u.uv1=vn.getInterpolatedAttribute(s,a,l,c,h,new at)),o&&(u.normal=vn.getInterpolatedAttribute(o,a,l,c,h,new L),u.normal.dot(n.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new L,materialIndex:0};vn.getNormal(Yl,ql,jl,d.normal),u.face=d,u.barycoord=h}return u}class Ls extends ce{constructor(t=1,e=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,n,e,t,o,s,0),p("z","y","x",1,-1,n,e,-t,o,s,1),p("x","z","y",1,1,t,n,e,i,o,2),p("x","z","y",1,-1,t,n,-e,i,o,3),p("x","y","z",1,-1,t,e,n,i,s,4),p("x","y","z",-1,-1,t,e,-n,i,s,5),this.setIndex(l),this.setAttribute("position",new zt(c,3)),this.setAttribute("normal",new zt(u,3)),this.setAttribute("uv",new zt(h,2));function p(y,m,g,w,b,M,A,S,E,x,v){const _=M/E,T=A/x,I=M/2,B=A/2,V=S/2,H=E+1,U=x+1;let Q=0,W=0;const lt=new L;for(let ut=0;ut<U;ut++){const mt=ut*T-B;for(let Xt=0;Xt<H;Xt++){const te=Xt*_-I;lt[y]=te*w,lt[m]=mt*b,lt[g]=V,c.push(lt.x,lt.y,lt.z),lt[y]=0,lt[m]=0,lt[g]=S>0?1:-1,u.push(lt.x,lt.y,lt.z),h.push(Xt/E),h.push(1-ut/x),Q+=1}}for(let ut=0;ut<x;ut++)for(let mt=0;mt<E;mt++){const Xt=d+mt+H*ut,te=d+mt+H*(ut+1),qt=d+(mt+1)+H*(ut+1),$t=d+(mt+1)+H*ut;l.push(Xt,te,$t),l.push(te,qt,$t),W+=6}a.addGroup(f,W,v),f+=W,d+=Q}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ls(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function Uo(r){const t={};for(const e in r){t[e]={};for(const n in r[e]){const i=r[e][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][n]=null):t[e][n]=i.clone():Array.isArray(i)?t[e][n]=i.slice():t[e][n]=i}}return t}function En(r){const t={};for(let e=0;e<r.length;e++){const n=Uo(r[e]);for(const i in n)t[i]=n[i]}return t}function D1(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e].clone());return t}function Sv(r){const t=r.getRenderTarget();return t===null?r.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:ve.workingColorSpace}const ph={clone:Uo,merge:En};var O1="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",U1="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";class $n extends fn{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=O1,this.fragmentShader=U1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Uo(t.uniforms),this.uniformsGroups=D1(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?e.uniforms[i]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[i]={type:"m4",value:o.toArray()}:e.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(e.extensions=n),e}}class mh extends de{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new jt,this.projectionMatrix=new jt,this.projectionMatrixInverse=new jt,this.coordinateSystem=ii,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Er=new L,ug=new at,hg=new at;class Fe extends mh{constructor(t=50,e=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=Oo*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Ms*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Oo*2*Math.atan(Math.tan(Ms*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,n){Er.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(Er.x,Er.y).multiplyScalar(-t/Er.z),Er.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),n.set(Er.x,Er.y).multiplyScalar(-t/Er.z)}getViewSize(t,e){return this.getViewBounds(t,ug,hg),e.subVectors(hg,ug)}setViewOffset(t,e,n,i,s,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Ms*.5*this.fov)/this.zoom,n=2*e,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*i/l,e-=o.offsetY*n/c,i*=o.width/l,n*=o.height/c}const a=this.filmOffset;a!==0&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,e,e-n,t,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const Js=-90,Ks=1;class wv extends de{constructor(t,e,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null,this.activeMipmapLevel=0;const i=new Fe(Js,Ks,t,e);i.layers=this.layers,this.add(i);const s=new Fe(Js,Ks,t,e);s.layers=this.layers,this.add(s);const o=new Fe(Js,Ks,t,e);o.layers=this.layers,this.add(o);const a=new Fe(Js,Ks,t,e);a.layers=this.layers,this.add(a);const l=new Fe(Js,Ks,t,e);l.layers=this.layers,this.add(l);const c=new Fe(Js,Ks,t,e);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[n,i,s,o,a,l]=e;for(const c of e)this.remove(c);if(t===ii)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(t===Do)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const c of e)this.add(c),c.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:n,activeMipmapLevel:i}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,u]=this.children,h=t.getRenderTarget(),d=t.getActiveCubeFace(),f=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const y=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0,i),t.render(e,s),t.setRenderTarget(n,1,i),t.render(e,o),t.setRenderTarget(n,2,i),t.render(e,a),t.setRenderTarget(n,3,i),t.render(e,l),t.setRenderTarget(n,4,i),t.render(e,c),n.texture.generateMipmaps=y,t.setRenderTarget(n,5,i),t.render(e,u),t.setRenderTarget(h,d,f),t.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class yl extends Xe{constructor(t=[],e=mr,n,i,s,o,a,l,c,u){super(t,e,n,i,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Tv extends Ri{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const n={width:t,height:t,depth:1},i=[n,n,n,n,n,n];this.texture=new yl(i),this._setTextureOptions(e),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:"\n\n				varying vec3 vWorldDirection;\n\n				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n				}\n\n				void main() {\n\n					vWorldDirection = transformDirection( position, modelMatrix );\n\n					#include <begin_vertex>\n					#include <project_vertex>\n\n				}\n			",fragmentShader:"\n\n				uniform sampler2D tEquirect;\n\n				varying vec3 vWorldDirection;\n\n				#include <common>\n\n				void main() {\n\n					vec3 direction = normalize( vWorldDirection );\n\n					vec2 sampleUV = equirectUv( direction );\n\n					gl_FragColor = texture2D( tEquirect, sampleUV );\n\n				}\n			"},i=new Ls(5,5,5),s=new $n({name:"CubemapFromEquirect",uniforms:Uo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Pn,blending:lr});s.uniforms.tEquirect.value=e;const o=new Ue(i,s),a=e.minFilter;return e.minFilter===Vi&&(e.minFilter=nn),new wv(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e=!0,n=!0,i=!0){const s=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,n,i);t.setRenderTarget(s)}}class bo extends de{constructor(){super(),this.isGroup=!0,this.type="Group"}}const F1={type:"move"};class Yc{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new bo,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new bo,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new L,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new L),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new bo,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new L,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new L),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const n of t.hand.values())this._getHandJoint(e,n)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,n){let i=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(c&&t.hand){o=!0;for(const y of t.hand.values()){const m=e.getJointPose(y,n),g=this._getHandJoint(c,y);m!==null&&(g.matrix.fromArray(m.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=m.radius),g.visible=m!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else l!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,n),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(i=e.getPose(t.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(F1)))}return a!==null&&(a.visible=i!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const n=new bo;n.matrixAutoUpdate=!1,n.visible=!1,t.joints[e.jointName]=n,t.add(n)}return t.joints[e.jointName]}}class gh{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new At(t),this.density=e}clone(){return new gh(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class yh{constructor(t,e=1,n=1e3){this.isFog=!0,this.name="",this.color=new At(t),this.near=e,this.far=n}clone(){return new yh(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class _h extends de{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new si,this.environmentIntensity=1,this.environmentRotation=new si,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class _l{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Ya,this.updateRanges=[],this.version=0,this.uuid=ri()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ri()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ri()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const wn=new L;class yr{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.applyMatrix4(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.applyNormalMatrix(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)wn.fromBufferAttribute(this,e),wn.transformDirection(t),this.setXYZ(e,wn.x,wn.y,wn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Rn(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=ue(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=ue(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=ue(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=ue(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=ue(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Rn(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Rn(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Rn(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Rn(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array),i=ue(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=ue(e,this.array),n=ue(n,this.array),i=ue(i,this.array),s=ue(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return new Te(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new yr(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Tp extends fn{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new At(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let Qs;const ia=new L,to=new L,eo=new L,no=new at,ra=new at,Ev=new jt,Ql=new L,sa=new L,tc=new L,dg=new at,_d=new at,fg=new at;class Av extends de{constructor(t=new Tp){if(super(),this.isSprite=!0,this.type="Sprite",Qs===void 0){Qs=new ce;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new _l(e,5);Qs.setIndex([0,1,2,0,2,3]),Qs.setAttribute("position",new yr(n,3,0,!1)),Qs.setAttribute("uv",new yr(n,2,3,!1))}this.geometry=Qs,this.material=t,this.center=new at(.5,.5),this.count=1}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),to.setFromMatrixScale(this.matrixWorld),Ev.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),eo.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&to.multiplyScalar(-eo.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;ec(Ql.set(-.5,-.5,0),eo,o,to,i,s),ec(sa.set(.5,-.5,0),eo,o,to,i,s),ec(tc.set(.5,.5,0),eo,o,to,i,s),dg.set(0,0),_d.set(1,0),fg.set(1,1);let a=t.ray.intersectTriangle(Ql,sa,tc,!1,ia);if(a===null&&(ec(sa.set(-.5,.5,0),eo,o,to,i,s),_d.set(0,1),a=t.ray.intersectTriangle(Ql,tc,sa,!1,ia),a===null))return;const l=t.ray.origin.distanceTo(ia);l<t.near||l>t.far||e.push({distance:l,point:ia.clone(),uv:vn.getInterpolation(ia,Ql,sa,tc,dg,_d,fg,new at),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function ec(r,t,e,n,i,s){no.subVectors(r,e).addScalar(.5).multiply(n),i!==void 0?(ra.x=s*no.x-i*no.y,ra.y=i*no.x+s*no.y):ra.copy(no),r.copy(t),r.x+=ra.x,r.y+=ra.y,r.applyMatrix4(Ev)}const nc=new L,pg=new L;class Cv extends de{constructor(){super(),this.isLOD=!0,this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let n=0,i=e.length;n<i;n++){const s=e[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,n=0){e=Math.abs(e);const i=this.levels;let s;for(s=0;s<i.length&&!(e<i[s].distance);s++);return i.splice(s,0,{distance:e,hysteresis:n,object:t}),this.add(t),this}removeLevel(t){const e=this.levels;for(let n=0;n<e.length;n++)if(e[n].distance===t){const i=e.splice(n,1);return this.remove(i[0].object),!0}return!1}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let n,i;for(n=1,i=e.length;n<i;n++){let s=e[n].distance;if(e[n].object.visible&&(s-=s*e[n].hysteresis),t<s)break}return e[n-1].object}return null}raycast(t,e){if(this.levels.length>0){nc.setFromMatrixPosition(this.matrixWorld);const i=t.ray.origin.distanceTo(nc);this.getObjectForDistance(i).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){nc.setFromMatrixPosition(t.matrixWorld),pg.setFromMatrixPosition(this.matrixWorld);const n=nc.distanceTo(pg)/t.zoom;e[0].object.visible=!0;let i,s;for(i=1,s=e.length;i<s;i++){let o=e[i].distance;if(e[i].object.visible&&(o-=o*e[i].hysteresis),n>=o)e[i-1].object.visible=!1,e[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)e[i].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];e.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return e}}const mg=new L,gg=new _e,yg=new _e,B1=new L,_g=new jt,ic=new L,vd=new un,vg=new jt,xd=new Xi;class Rv extends Ue{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=xf,this.bindMatrix=new jt,this.bindMatrixInverse=new jt,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new bn),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,ic),this.boundingBox.expandByPoint(ic)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new un),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let n=0;n<e.count;n++)this.getVertexPosition(n,ic),this.boundingSphere.expandByPoint(ic)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),vd.copy(this.boundingSphere),vd.applyMatrix4(i),t.ray.intersectsSphere(vd)!==!1&&(vg.copy(i).invert(),xd.copy(t.ray).applyMatrix4(vg),!(this.boundingBox!==null&&xd.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,xd)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new _e,e=this.geometry.attributes.skinWeight;for(let n=0,i=e.count;n<i;n++){t.fromBufferAttribute(e,n);const s=1/t.manhattanLength();s!==1/0?t.multiplyScalar(s):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===xf?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===sv?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const n=this.skeleton,i=this.geometry;gg.fromBufferAttribute(i.attributes.skinIndex,t),yg.fromBufferAttribute(i.attributes.skinWeight,t),mg.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let s=0;s<4;s++){const o=yg.getComponent(s);if(o!==0){const a=gg.getComponent(s);_g.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),e.addScaledVector(B1.copy(mg).applyMatrix4(_g),o)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Ep extends de{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Wi extends Xe{constructor(t=null,e=1,n=1,i,s,o,a,l,c=hn,u=hn,h,d){super(null,o,a,l,c,u,i,s,h,d),this.isDataTexture=!0,this.image={data:t,width:e,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const xg=new jt,z1=new jt;class vh{constructor(t=[],e=[]){this.uuid=ri(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new jt)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const n=new jt;this.bones[t]&&n.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&n.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const n=this.bones[t];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=t.length;s<o;s++){const a=t[s]?t[s].matrixWorld:z1;xg.multiplyMatrices(a,e[s]),xg.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new vh(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const n=new Wi(e,t,t,Nn,Gn);return n.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=n,this}getBoneByName(t){for(let e=0,n=this.bones.length;e<n;e++){const i=this.bones[e];if(i.name===t)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let n=0,i=t.bones.length;n<i;n++){const s=t.bones[n];let o=e[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Ep),this.bones.push(o),this.boneInverses.push(new jt().fromArray(t.boneInverses[n]))}return this.init(),this}toJSON(){const t={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let i=0,s=e.length;i<s;i++){const o=e[i];t.bones.push(o.uuid);const a=n[i];t.boneInverses.push(a.toArray())}return t}}class Fo extends Te{constructor(t,e,n,i=1){super(t,e,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const io=new jt,bg=new jt,rc=[],Mg=new bn,k1=new jt,oa=new Ue,aa=new un;class Iv extends Ue{constructor(t,e,n){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new Fo(new Float32Array(n*16),16),this.instanceColor=null,this.morphTexture=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,k1)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new bn),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,io),Mg.copy(t.boundingBox).applyMatrix4(io),this.boundingBox.union(Mg)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new un),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<e;n++)this.getMatrixAt(n,io),aa.copy(t.boundingSphere).applyMatrix4(io),this.boundingSphere.union(aa)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const n=e.morphTargetInfluences,i=this.morphTexture.source.data.data,s=n.length+1,o=t*s+1;for(let a=0;a<n.length;a++)n[a]=i[o+a]}raycast(t,e){const n=this.matrixWorld,i=this.count;if(oa.geometry=this.geometry,oa.material=this.material,oa.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),aa.copy(this.boundingSphere),aa.applyMatrix4(n),t.ray.intersectsSphere(aa)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,io),bg.multiplyMatrices(n,io),oa.matrixWorld=bg,oa.raycast(t,rc);for(let o=0,a=rc.length;o<a;o++){const l=rc[o];l.instanceId=s,l.object=this,e.push(l)}rc.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new Fo(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const n=e.morphTargetInfluences,i=n.length+1;this.morphTexture===null&&(this.morphTexture=new Wi(new Float32Array(i*this.count),i,this.count,lh,Gn));const s=this.morphTexture.source.data.data;let o=0;for(let c=0;c<n.length;c++)o+=n[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=i*t;s[l]=a,s.set(n,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const bd=new L,V1=new L,H1=new le;class Hn{constructor(t=new L(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=bd.subVectors(n,e).cross(V1.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(bd),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(t.start).addScaledVector(n,s)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||H1.getNormalMatrix(t),i=this.coplanarPoint(bd).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Zr=new un,G1=new at(.5,.5),sc=new L;class $o{constructor(t=new Hn,e=new Hn,n=new Hn,i=new Hn,s=new Hn,o=new Hn){this.planes=[t,e,n,i,s,o]}set(t,e,n,i,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t,e=ii,n=!1){const i=this.planes,s=t.elements,o=s[0],a=s[1],l=s[2],c=s[3],u=s[4],h=s[5],d=s[6],f=s[7],p=s[8],y=s[9],m=s[10],g=s[11],w=s[12],b=s[13],M=s[14],A=s[15];if(i[0].setComponents(c-o,f-u,g-p,A-w).normalize(),i[1].setComponents(c+o,f+u,g+p,A+w).normalize(),i[2].setComponents(c+a,f+h,g+y,A+b).normalize(),i[3].setComponents(c-a,f-h,g-y,A-b).normalize(),n)i[4].setComponents(l,d,m,M).normalize(),i[5].setComponents(c-l,f-d,g-m,A-M).normalize();else if(i[4].setComponents(c-l,f-d,g-m,A-M).normalize(),e===ii)i[5].setComponents(c+l,f+d,g+m,A+M).normalize();else if(e===Do)i[5].setComponents(l,d,m,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Zr.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),Zr.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Zr)}intersectsSprite(t){Zr.center.set(0,0,0);const e=G1.distanceTo(t.center);return Zr.radius=.7071067811865476+e,Zr.applyMatrix4(t.matrixWorld),this.intersectsSphere(Zr)}intersectsSphere(t){const e=this.planes,n=t.center,i=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const i=e[n];if(sc.x=i.normal.x>0?t.max.x:t.min.x,sc.y=i.normal.y>0?t.max.y:t.min.y,sc.z=i.normal.z>0?t.max.z:t.min.z,i.distanceToPoint(sc)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}const Li=new jt,Di=new $o;class xh{constructor(){this.coordinateSystem=ii}intersectsObject(t,e){if(!e.isArrayCamera||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(Li.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Di.setFromProjectionMatrix(Li,i.coordinateSystem,i.reversedDepth),Di.intersectsObject(t))return!0}return!1}intersectsSprite(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(Li.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Di.setFromProjectionMatrix(Li,i.coordinateSystem,i.reversedDepth),Di.intersectsSprite(t))return!0}return!1}intersectsSphere(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(Li.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Di.setFromProjectionMatrix(Li,i.coordinateSystem,i.reversedDepth),Di.intersectsSphere(t))return!0}return!1}intersectsBox(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(Li.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Di.setFromProjectionMatrix(Li,i.coordinateSystem,i.reversedDepth),Di.intersectsBox(t))return!0}return!1}containsPoint(t,e){if(!e||!e.cameras||e.cameras.length===0)return!1;for(let n=0;n<e.cameras.length;n++){const i=e.cameras[n];if(Li.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),Di.setFromProjectionMatrix(Li,i.coordinateSystem,i.reversedDepth),Di.containsPoint(t))return!0}return!1}clone(){return new xh}}function Md(r,t){return r-t}function W1(r,t){return r.z-t.z}function X1(r,t){return t.z-r.z}class $1{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,n,i){const s=this.pool,o=this.list;this.index>=s.length&&s.push({start:-1,count:-1,z:-1,index:-1});const a=s[this.index];o.push(a),this.index++,a.start=t,a.count=e,a.z=n,a.index=i}reset(){this.list.length=0,this.index=0}}const Un=new jt,Y1=new At(1,1,1),Sg=new $o,q1=new xh,oc=new bn,Jr=new un,la=new L,wg=new L,j1=new L,Sd=new $1,gn=new Ue,ac=[];function Z1(r,t,e=0){const n=t.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==t.array.constructor){const i=r.count;for(let s=0;s<i;s++)for(let o=0;o<n;o++)t.setComponent(s+e,o,r.getComponent(s,o))}else t.array.set(r.array,e*n);t.needsUpdate=!0}function Kr(r,t){if(r.constructor!==t.constructor){const e=Math.min(r.length,t.length);for(let n=0;n<e;n++)t[n]=r[n]}else{const e=Math.min(r.length,t.length);t.set(new r.constructor(r.buffer,0,e))}}class Nv extends Ue{constructor(t,e,n=e*2,i){super(new ce,i),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._instanceInfo=[],this._geometryInfo=[],this._availableInstanceIds=[],this._availableGeometryIds=[],this._nextIndexStart=0,this._nextVertexStart=0,this._geometryCount=0,this._visibilityChanged=!0,this._geometryInitialized=!1,this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=n,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}get maxInstanceCount(){return this._maxInstanceCount}get instanceCount(){return this._instanceInfo.length-this._availableInstanceIds.length}get unusedVertexCount(){return this._maxVertexCount-this._nextVertexStart}get unusedIndexCount(){return this._maxIndexCount-this._nextIndexStart}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),n=new Wi(e,t,t,Nn,Gn);this._matricesTexture=n}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),n=new Wi(e,t,t,pl,gr);this._indirectTexture=n}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),n=new Wi(e,t,t,Nn,Gn);n.colorSpace=ve.workingColorSpace,this._colorsTexture=n}_initializeGeometry(t){const e=this.geometry,n=this._maxVertexCount,i=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in t.attributes){const o=t.getAttribute(s),{array:a,itemSize:l,normalized:c}=o,u=new a.constructor(n*l),h=new Te(u,l,c);e.setAttribute(s,h)}if(t.getIndex()!==null){const s=n>65535?new Uint32Array(i):new Uint16Array(i);e.setIndex(new Te(s,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('THREE.BatchedMesh: All geometries must consistently have "index".');for(const n in e.attributes){if(!t.hasAttribute(n))throw new Error('THREE.BatchedMesh: Added geometry missing "'.concat(n,'". All geometries must have consistent attributes.'));const i=t.getAttribute(n),s=e.getAttribute(n);if(i.itemSize!==s.itemSize||i.normalized!==s.normalized)throw new Error("THREE.BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}validateInstanceId(t){const e=this._instanceInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error("THREE.BatchedMesh: Invalid instanceId ".concat(t,". Instance is either out of range or has been deleted."))}validateGeometryId(t){const e=this._geometryInfo;if(t<0||t>=e.length||e[t].active===!1)throw new Error("THREE.BatchedMesh: Invalid geometryId ".concat(t,". Geometry is either out of range or has been deleted."))}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new bn);const t=this.boundingBox,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const s=e[n].geometryIndex;this.getMatrixAt(n,Un),this.getBoundingBoxAt(s,oc).applyMatrix4(Un),t.union(oc)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new un);const t=this.boundingSphere,e=this._instanceInfo;t.makeEmpty();for(let n=0,i=e.length;n<i;n++){if(e[n].active===!1)continue;const s=e[n].geometryIndex;this.getMatrixAt(n,Un),this.getBoundingSphereAt(s,Jr).applyMatrix4(Un),t.union(Jr)}}addInstance(t){if(this._instanceInfo.length>=this.maxInstanceCount&&this._availableInstanceIds.length===0)throw new Error("THREE.BatchedMesh: Maximum item count reached.");const n={visible:!0,active:!0,geometryIndex:t};let i=null;this._availableInstanceIds.length>0?(this._availableInstanceIds.sort(Md),i=this._availableInstanceIds.shift(),this._instanceInfo[i]=n):(i=this._instanceInfo.length,this._instanceInfo.push(n));const s=this._matricesTexture;Un.identity().toArray(s.image.data,i*16),s.needsUpdate=!0;const o=this._colorsTexture;return o&&(Y1.toArray(o.image.data,i*4),o.needsUpdate=!0),this._visibilityChanged=!0,i}addGeometry(t,e=-1,n=-1){this._initializeGeometry(t),this._validateGeometry(t);const i={vertexStart:-1,vertexCount:-1,reservedVertexCount:-1,indexStart:-1,indexCount:-1,reservedIndexCount:-1,start:-1,count:-1,boundingBox:null,boundingSphere:null,active:!0},s=this._geometryInfo;i.vertexStart=this._nextVertexStart,i.reservedVertexCount=e===-1?t.getAttribute("position").count:e;const o=t.getIndex();if(o!==null&&(i.indexStart=this._nextIndexStart,i.reservedIndexCount=n===-1?o.count:n),i.indexStart!==-1&&i.indexStart+i.reservedIndexCount>this._maxIndexCount||i.vertexStart+i.reservedVertexCount>this._maxVertexCount)throw new Error("THREE.BatchedMesh: Reserved space request exceeds the maximum buffer size.");let l;return this._availableGeometryIds.length>0?(this._availableGeometryIds.sort(Md),l=this._availableGeometryIds.shift(),s[l]=i):(l=this._geometryCount,this._geometryCount++,s.push(i)),this.setGeometryAt(l,t),this._nextIndexStart=i.indexStart+i.reservedIndexCount,this._nextVertexStart=i.vertexStart+i.reservedVertexCount,l}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("THREE.BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const n=this.geometry,i=n.getIndex()!==null,s=n.getIndex(),o=e.getIndex(),a=this._geometryInfo[t];if(i&&o.count>a.reservedIndexCount||e.attributes.position.count>a.reservedVertexCount)throw new Error("THREE.BatchedMesh: Reserved space not large enough for provided geometry.");const l=a.vertexStart,c=a.reservedVertexCount;a.vertexCount=e.getAttribute("position").count;for(const u in n.attributes){const h=e.getAttribute(u),d=n.getAttribute(u);Z1(h,d,l);const f=h.itemSize;for(let p=h.count,y=c;p<y;p++){const m=l+p;for(let g=0;g<f;g++)d.setComponent(m,g,0)}d.needsUpdate=!0,d.addUpdateRange(l*f,c*f)}if(i){const u=a.indexStart,h=a.reservedIndexCount;a.indexCount=e.getIndex().count;for(let d=0;d<o.count;d++)s.setX(u+d,l+o.getX(d));for(let d=o.count,f=h;d<f;d++)s.setX(u+d,l);s.needsUpdate=!0,s.addUpdateRange(u,a.reservedIndexCount)}return a.start=i?a.indexStart:a.vertexStart,a.count=i?a.indexCount:a.vertexCount,a.boundingBox=null,e.boundingBox!==null&&(a.boundingBox=e.boundingBox.clone()),a.boundingSphere=null,e.boundingSphere!==null&&(a.boundingSphere=e.boundingSphere.clone()),this._visibilityChanged=!0,t}deleteGeometry(t){const e=this._geometryInfo;if(t>=e.length||e[t].active===!1)return this;const n=this._instanceInfo;for(let i=0,s=n.length;i<s;i++)n[i].active&&n[i].geometryIndex===t&&this.deleteInstance(i);return e[t].active=!1,this._availableGeometryIds.push(t),this._visibilityChanged=!0,this}deleteInstance(t){return this.validateInstanceId(t),this._instanceInfo[t].active=!1,this._availableInstanceIds.push(t),this._visibilityChanged=!0,this}optimize(){let t=0,e=0;const n=this._geometryInfo,i=n.map((o,a)=>a).sort((o,a)=>n[o].vertexStart-n[a].vertexStart),s=this.geometry;for(let o=0,a=n.length;o<a;o++){const l=i[o],c=n[l];if(c.active!==!1){if(s.index!==null){if(c.indexStart!==e){const{indexStart:u,vertexStart:h,reservedIndexCount:d}=c,f=s.index,p=f.array,y=t-h;for(let m=u;m<u+d;m++)p[m]=p[m]+y;f.array.copyWithin(e,u,u+d),f.addUpdateRange(e,d),c.indexStart=e}e+=c.reservedIndexCount}if(c.vertexStart!==t){const{vertexStart:u,reservedVertexCount:h}=c,d=s.attributes;for(const f in d){const p=d[f],{array:y,itemSize:m}=p;y.copyWithin(t*m,u*m,(u+h)*m),p.addUpdateRange(t*m,h*m)}c.vertexStart=t}t+=c.reservedVertexCount,c.start=s.index?c.indexStart:c.vertexStart,this._nextIndexStart=s.index?c.indexStart+c.reservedIndexCount:0,this._nextVertexStart=c.vertexStart+c.reservedVertexCount}}return this}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingBox===null){const s=new bn,o=n.index,a=n.attributes.position;for(let l=i.start,c=i.start+i.count;l<c;l++){let u=l;o&&(u=o.getX(u)),s.expandByPoint(la.fromBufferAttribute(a,u))}i.boundingBox=s}return e.copy(i.boundingBox),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const n=this.geometry,i=this._geometryInfo[t];if(i.boundingSphere===null){const s=new un;this.getBoundingBoxAt(t,oc),oc.getCenter(s.center);const o=n.index,a=n.attributes.position;let l=0;for(let c=i.start,u=i.start+i.count;c<u;c++){let h=c;o&&(h=o.getX(h)),la.fromBufferAttribute(a,h),l=Math.max(l,s.center.distanceToSquared(la))}s.radius=Math.sqrt(l),i.boundingSphere=s}return e.copy(i.boundingSphere),e}setMatrixAt(t,e){this.validateInstanceId(t);const n=this._matricesTexture,i=this._matricesTexture.image.data;return e.toArray(i,t*16),n.needsUpdate=!0,this}getMatrixAt(t,e){return this.validateInstanceId(t),e.fromArray(this._matricesTexture.image.data,t*16)}setColorAt(t,e){return this.validateInstanceId(t),this._colorsTexture===null&&this._initColorsTexture(),e.toArray(this._colorsTexture.image.data,t*4),this._colorsTexture.needsUpdate=!0,this}getColorAt(t,e){return this.validateInstanceId(t),e.fromArray(this._colorsTexture.image.data,t*4)}setVisibleAt(t,e){return this.validateInstanceId(t),this._instanceInfo[t].visible===e?this:(this._instanceInfo[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){return this.validateInstanceId(t),this._instanceInfo[t].visible}setGeometryIdAt(t,e){return this.validateInstanceId(t),this.validateGeometryId(e),this._instanceInfo[t].geometryIndex=e,this}getGeometryIdAt(t){return this.validateInstanceId(t),this._instanceInfo[t].geometryIndex}getGeometryRangeAt(t,e={}){this.validateGeometryId(t);const n=this._geometryInfo[t];return e.vertexStart=n.vertexStart,e.vertexCount=n.vertexCount,e.reservedVertexCount=n.reservedVertexCount,e.indexStart=n.indexStart,e.indexCount=n.indexCount,e.reservedIndexCount=n.reservedIndexCount,e.start=n.start,e.count=n.count,e}setInstanceCount(t){const e=this._availableInstanceIds,n=this._instanceInfo;for(e.sort(Md);e[e.length-1]===n.length-1;)n.pop(),e.pop();if(t<n.length)throw new Error("BatchedMesh: Instance ids outside the range ".concat(t," are being used. Cannot shrink instance count."));const i=new Int32Array(t),s=new Int32Array(t);Kr(this._multiDrawCounts,i),Kr(this._multiDrawStarts,s),this._multiDrawCounts=i,this._multiDrawStarts=s,this._maxInstanceCount=t;const o=this._indirectTexture,a=this._matricesTexture,l=this._colorsTexture;o.dispose(),this._initIndirectTexture(),Kr(o.image.data,this._indirectTexture.image.data),a.dispose(),this._initMatricesTexture(),Kr(a.image.data,this._matricesTexture.image.data),l&&(l.dispose(),this._initColorsTexture(),Kr(l.image.data,this._colorsTexture.image.data))}setGeometrySize(t,e){const n=[...this._geometryInfo].filter(a=>a.active);if(Math.max(...n.map(a=>a.vertexStart+a.reservedVertexCount))>t)throw new Error("BatchedMesh: Geometry vertex values are being used outside the range ".concat(e,". Cannot shrink further."));if(this.geometry.index&&Math.max(...n.map(l=>l.indexStart+l.reservedIndexCount))>e)throw new Error("BatchedMesh: Geometry index values are being used outside the range ".concat(e,". Cannot shrink further."));const s=this.geometry;s.dispose(),this._maxVertexCount=t,this._maxIndexCount=e,this._geometryInitialized&&(this._geometryInitialized=!1,this.geometry=new ce,this._initializeGeometry(s));const o=this.geometry;s.index&&Kr(s.index.array,o.index.array);for(const a in s.attributes)Kr(s.attributes[a].array,o.attributes[a].array)}raycast(t,e){const n=this._instanceInfo,i=this._geometryInfo,s=this.matrixWorld,o=this.geometry;gn.material=this.material,gn.geometry.index=o.index,gn.geometry.attributes=o.attributes,gn.geometry.boundingBox===null&&(gn.geometry.boundingBox=new bn),gn.geometry.boundingSphere===null&&(gn.geometry.boundingSphere=new un);for(let a=0,l=n.length;a<l;a++){if(!n[a].visible||!n[a].active)continue;const c=n[a].geometryIndex,u=i[c];gn.geometry.setDrawRange(u.start,u.count),this.getMatrixAt(a,gn.matrixWorld).premultiply(s),this.getBoundingBoxAt(c,gn.geometry.boundingBox),this.getBoundingSphereAt(c,gn.geometry.boundingSphere),gn.raycast(t,ac);for(let h=0,d=ac.length;h<d;h++){const f=ac[h];f.object=this,f.batchId=a,e.push(f)}ac.length=0}gn.material=null,gn.geometry.index=null,gn.geometry.attributes={},gn.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._geometryInfo=t._geometryInfo.map(e=>({...e,boundingBox:e.boundingBox!==null?e.boundingBox.clone():null,boundingSphere:e.boundingSphere!==null?e.boundingSphere.clone():null})),this._instanceInfo=t._instanceInfo.map(e=>({...e})),this._availableInstanceIds=t._availableInstanceIds.slice(),this._availableGeometryIds=t._availableGeometryIds.slice(),this._nextIndexStart=t._nextIndexStart,this._nextVertexStart=t._nextVertexStart,this._geometryCount=t._geometryCount,this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._indirectTexture=t._indirectTexture.clone(),this._indirectTexture.image.data=this._indirectTexture.image.data.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null)}onBeforeRender(t,e,n,i,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=i.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,l=this._instanceInfo,c=this._multiDrawStarts,u=this._multiDrawCounts,h=this._geometryInfo,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data,y=n.isArrayCamera?q1:Sg;d&&!n.isArrayCamera&&(Un.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse).multiply(this.matrixWorld),Sg.setFromProjectionMatrix(Un,n.coordinateSystem,n.reversedDepth));let m=0;if(this.sortObjects){Un.copy(this.matrixWorld).invert(),la.setFromMatrixPosition(n.matrixWorld).applyMatrix4(Un),wg.set(0,0,-1).transformDirection(n.matrixWorld).transformDirection(Un);for(let b=0,M=l.length;b<M;b++)if(l[b].visible&&l[b].active){const A=l[b].geometryIndex;this.getMatrixAt(b,Un),this.getBoundingSphereAt(A,Jr).applyMatrix4(Un);let S=!1;if(d&&(S=!y.intersectsSphere(Jr,n)),!S){const E=h[A],x=j1.subVectors(Jr.center,la).dot(wg);Sd.push(E.start,E.count,x,b)}}const g=Sd.list,w=this.customSort;w===null?g.sort(s.transparent?X1:W1):w.call(this,g,n);for(let b=0,M=g.length;b<M;b++){const A=g[b];c[m]=A.start*a,u[m]=A.count,p[m]=A.index,m++}Sd.reset()}else for(let g=0,w=l.length;g<w;g++)if(l[g].visible&&l[g].active){const b=l[g].geometryIndex;let M=!1;if(d&&(this.getMatrixAt(g,Un),this.getBoundingSphereAt(b,Jr).applyMatrix4(Un),M=!y.intersectsSphere(Jr,n)),!M){const A=h[b];c[m]=A.start*a,u[m]=A.count,p[m]=g,m++}}f.needsUpdate=!0,this._multiDrawCount=m,this._visibilityChanged=!1}onBeforeShadow(t,e,n,i,s,o){this.onBeforeRender(t,null,i,s,o)}}class Ln extends fn{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new At(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Hu=new L,Gu=new L,Tg=new jt,ca=new Xi,lc=new un,wd=new L,Eg=new L;class zr extends de{constructor(t=new ce,e=new Ln){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[0];for(let i=1,s=e.count;i<s;i++)Hu.fromBufferAttribute(e,i-1),Gu.fromBufferAttribute(e,i),n[i]=n[i-1],n[i]+=Hu.distanceTo(Gu);t.setAttribute("lineDistance",new zt(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),lc.copy(n.boundingSphere),lc.applyMatrix4(i),lc.radius+=s,t.ray.intersectsSphere(lc)===!1)return;Tg.copy(i).invert(),ca.copy(t.ray).applyMatrix4(Tg);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,u=n.index,d=n.attributes.position;if(u!==null){const f=Math.max(0,o.start),p=Math.min(u.count,o.start+o.count);for(let y=f,m=p-1;y<m;y+=c){const g=u.getX(y),w=u.getX(y+1),b=cc(this,t,ca,l,g,w,y);b&&e.push(b)}if(this.isLineLoop){const y=u.getX(p-1),m=u.getX(f),g=cc(this,t,ca,l,y,m,p-1);g&&e.push(g)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let y=f,m=p-1;y<m;y+=c){const g=cc(this,t,ca,l,y,y+1,y);g&&e.push(g)}if(this.isLineLoop){const y=cc(this,t,ca,l,p-1,f,p-1);y&&e.push(y)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function cc(r,t,e,n,i,s,o){const a=r.geometry.attributes.position;if(Hu.fromBufferAttribute(a,i),Gu.fromBufferAttribute(a,s),e.distanceSqToSegment(Hu,Gu,wd,Eg)>n)return;wd.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(wd);if(!(c<t.near||c>t.far))return{distance:c,point:Eg.clone().applyMatrix4(r.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:r}}const Ag=new L,Cg=new L;class qi extends zr{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,n=[];for(let i=0,s=e.count;i<s;i+=2)Ag.fromBufferAttribute(e,i),Cg.fromBufferAttribute(e,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Ag.distanceTo(Cg);t.setAttribute("lineDistance",new zt(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Pv extends zr{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Ap extends fn{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new At(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const Rg=new jt,Sf=new Xi,uc=new un,hc=new L;class Lv extends de{constructor(t=new ce,e=new Ap){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const n=this.geometry,i=this.matrixWorld,s=t.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),uc.copy(n.boundingSphere),uc.applyMatrix4(i),uc.radius+=s,t.ray.intersectsSphere(uc)===!1)return;Rg.copy(i).invert(),Sf.copy(t.ray).applyMatrix4(Rg);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=n.index,h=n.attributes.position;if(c!==null){const d=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let p=d,y=f;p<y;p++){const m=c.getX(p);hc.fromBufferAttribute(h,m),Ig(hc,m,l,i,t,e,this)}}else{const d=Math.max(0,o.start),f=Math.min(h.count,o.start+o.count);for(let p=d,y=f;p<y;p++)hc.fromBufferAttribute(h,p),Ig(hc,p,l,i,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,n=Object.keys(e);if(n.length>0){const i=e[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Ig(r,t,e,n,i,s,o){const a=Sf.distanceSqToPoint(r);if(a<e){const l=new L;Sf.closestPointToPoint(r,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:t,face:null,faceIndex:null,barycoord:null,object:o})}}class Dv extends Xe{constructor(t,e,n,i,s=nn,o=nn,a,l,c){super(t,e,n,i,s,o,a,l,c),this.isVideoTexture=!0,this.generateMipmaps=!1,this._requestVideoFrameCallbackId=0;const u=this;function h(){u.needsUpdate=!0,u._requestVideoFrameCallbackId=t.requestVideoFrameCallback(h)}"requestVideoFrameCallback"in t&&(this._requestVideoFrameCallbackId=t.requestVideoFrameCallback(h))}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}dispose(){this._requestVideoFrameCallbackId!==0&&this.source.data.cancelVideoFrameCallback(this._requestVideoFrameCallbackId),super.dispose()}}class J1 extends Dv{constructor(t,e,n,i,s,o,a,l){super({},t,e,n,i,s,o,a,l),this.isVideoFrameTexture=!0}update(){}clone(){return new this.constructor().copy(this)}setFrame(t){this.image=t,this.needsUpdate=!0}}class K1 extends Xe{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=hn,this.minFilter=hn,this.generateMipmaps=!1,this.needsUpdate=!0}}class bh extends Xe{constructor(t,e,n,i,s,o,a,l,c,u,h,d){super(null,o,a,l,c,u,i,s,h,d),this.isCompressedTexture=!0,this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class Q1 extends bh{constructor(t,e,n,i,s,o){super(t,e,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=hi,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class tw extends bh{constructor(t,e,n){super(void 0,t[0].width,t[0].height,e,n,mr),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class ew extends Xe{constructor(t,e,n,i,s,o,a,l,c){super(t,e,n,i,s,o,a,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Cp extends Xe{constructor(t,e,n=gr,i,s,o,a=hn,l=hn,c,u=Po,h=1){if(u!==Po&&u!==Lo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const d={width:t,height:e,depth:h};super(d,i,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new Or(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class Rp extends Xe{constructor(t=null){super(),this.sourceTexture=t,this.isExternalTexture=!0}copy(t){return super.copy(t),this.sourceTexture=t.sourceTexture,this}}class Mh extends ce{constructor(t=1,e=1,n=4,i=8,s=1){super(),this.type="CapsuleGeometry",this.parameters={radius:t,height:e,capSegments:n,radialSegments:i,heightSegments:s},e=Math.max(0,e),n=Math.max(1,Math.floor(n)),i=Math.max(3,Math.floor(i)),s=Math.max(1,Math.floor(s));const o=[],a=[],l=[],c=[],u=e/2,h=Math.PI/2*t,d=e,f=2*h+d,p=n*2+s,y=i+1,m=new L,g=new L;for(let w=0;w<=p;w++){let b=0,M=0,A=0,S=0;if(w<=n){const v=w/n,_=v*Math.PI/2;M=-u-t*Math.cos(_),A=t*Math.sin(_),S=-t*Math.cos(_),b=v*h}else if(w<=n+s){const v=(w-n)/s;M=-u+v*e,A=t,S=0,b=h+v*d}else{const v=(w-n-s)/n,_=v*Math.PI/2;M=u+t*Math.sin(_),A=t*Math.cos(_),S=t*Math.sin(_),b=h+d+v*h}const E=Math.max(0,Math.min(1,b/f));let x=0;w===0?x=.5/i:w===p&&(x=-.5/i);for(let v=0;v<=i;v++){const _=v/i,T=_*Math.PI*2,I=Math.sin(T),B=Math.cos(T);g.x=-A*B,g.y=M,g.z=A*I,a.push(g.x,g.y,g.z),m.set(-A*B,S,A*I),m.normalize(),l.push(m.x,m.y,m.z),c.push(_+x,E)}if(w>0){const v=(w-1)*y;for(let _=0;_<i;_++){const T=v+_,I=v+_+1,B=w*y+_,V=w*y+_+1;o.push(T,I,B),o.push(I,V,B)}}}this.setIndex(o),this.setAttribute("position",new zt(a,3)),this.setAttribute("normal",new zt(l,3)),this.setAttribute("uv",new zt(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Mh(t.radius,t.height,t.capSegments,t.radialSegments,t.heightSegments)}}class Sh extends ce{constructor(t=1,e=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:n,thetaLength:i},e=Math.max(3,e);const s=[],o=[],a=[],l=[],c=new L,u=new at;o.push(0,0,0),a.push(0,0,1),l.push(.5,.5);for(let h=0,d=3;h<=e;h++,d+=3){const f=n+h/e*i;c.x=t*Math.cos(f),c.y=t*Math.sin(f),o.push(c.x,c.y,c.z),a.push(0,0,1),u.x=(o[d]/t+1)/2,u.y=(o[d+1]/t+1)/2,l.push(u.x,u.y)}for(let h=1;h<=e;h++)s.push(h,h+1,0);this.setIndex(s),this.setAttribute("position",new zt(o,3)),this.setAttribute("normal",new zt(a,3)),this.setAttribute("uv",new zt(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Sh(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class vl extends ce{constructor(t=1,e=1,n=1,i=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;i=Math.floor(i),s=Math.floor(s);const u=[],h=[],d=[],f=[];let p=0;const y=[],m=n/2;let g=0;w(),o===!1&&(t>0&&b(!0),e>0&&b(!1)),this.setIndex(u),this.setAttribute("position",new zt(h,3)),this.setAttribute("normal",new zt(d,3)),this.setAttribute("uv",new zt(f,2));function w(){const M=new L,A=new L;let S=0;const E=(e-t)/n;for(let x=0;x<=s;x++){const v=[],_=x/s,T=_*(e-t)+t;for(let I=0;I<=i;I++){const B=I/i,V=B*l+a,H=Math.sin(V),U=Math.cos(V);A.x=T*H,A.y=-_*n+m,A.z=T*U,h.push(A.x,A.y,A.z),M.set(H,E,U).normalize(),d.push(M.x,M.y,M.z),f.push(B,1-_),v.push(p++)}y.push(v)}for(let x=0;x<i;x++)for(let v=0;v<s;v++){const _=y[v][x],T=y[v+1][x],I=y[v+1][x+1],B=y[v][x+1];(t>0||v!==0)&&(u.push(_,T,B),S+=3),(e>0||v!==s-1)&&(u.push(T,I,B),S+=3)}c.addGroup(g,S,0),g+=S}function b(M){const A=p,S=new at,E=new L;let x=0;const v=M===!0?t:e,_=M===!0?1:-1;for(let I=1;I<=i;I++)h.push(0,m*_,0),d.push(0,_,0),f.push(.5,.5),p++;const T=p;for(let I=0;I<=i;I++){const V=I/i*l+a,H=Math.cos(V),U=Math.sin(V);E.x=v*U,E.y=m*_,E.z=v*H,h.push(E.x,E.y,E.z),d.push(0,_,0),S.x=H*.5+.5,S.y=U*.5*_+.5,f.push(S.x,S.y),p++}for(let I=0;I<i;I++){const B=A+I,V=T+I;M===!0?u.push(V,V+1,B):u.push(V+1,V,B),x+=3}c.addGroup(g,x,M===!0?1:2),g+=x}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new vl(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class xl extends vl{constructor(t=1,e=1,n=32,i=1,s=!1,o=0,a=Math.PI*2){super(0,t,e,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(t){return new xl(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Gr extends ce{constructor(t=[],e=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:n,detail:i};const s=[],o=[];a(i),c(n),u(),this.setAttribute("position",new zt(s,3)),this.setAttribute("normal",new zt(s.slice(),3)),this.setAttribute("uv",new zt(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(w){const b=new L,M=new L,A=new L;for(let S=0;S<e.length;S+=3)f(e[S+0],b),f(e[S+1],M),f(e[S+2],A),l(b,M,A,w)}function l(w,b,M,A){const S=A+1,E=[];for(let x=0;x<=S;x++){E[x]=[];const v=w.clone().lerp(M,x/S),_=b.clone().lerp(M,x/S),T=S-x;for(let I=0;I<=T;I++)I===0&&x===S?E[x][I]=v:E[x][I]=v.clone().lerp(_,I/T)}for(let x=0;x<S;x++)for(let v=0;v<2*(S-x)-1;v++){const _=Math.floor(v/2);v%2===0?(d(E[x][_+1]),d(E[x+1][_]),d(E[x][_])):(d(E[x][_+1]),d(E[x+1][_+1]),d(E[x+1][_]))}}function c(w){const b=new L;for(let M=0;M<s.length;M+=3)b.x=s[M+0],b.y=s[M+1],b.z=s[M+2],b.normalize().multiplyScalar(w),s[M+0]=b.x,s[M+1]=b.y,s[M+2]=b.z}function u(){const w=new L;for(let b=0;b<s.length;b+=3){w.x=s[b+0],w.y=s[b+1],w.z=s[b+2];const M=m(w)/2/Math.PI+.5,A=g(w)/Math.PI+.5;o.push(M,1-A)}p(),h()}function h(){for(let w=0;w<o.length;w+=6){const b=o[w+0],M=o[w+2],A=o[w+4],S=Math.max(b,M,A),E=Math.min(b,M,A);S>.9&&E<.1&&(b<.2&&(o[w+0]+=1),M<.2&&(o[w+2]+=1),A<.2&&(o[w+4]+=1))}}function d(w){s.push(w.x,w.y,w.z)}function f(w,b){const M=w*3;b.x=t[M+0],b.y=t[M+1],b.z=t[M+2]}function p(){const w=new L,b=new L,M=new L,A=new L,S=new at,E=new at,x=new at;for(let v=0,_=0;v<s.length;v+=9,_+=6){w.set(s[v+0],s[v+1],s[v+2]),b.set(s[v+3],s[v+4],s[v+5]),M.set(s[v+6],s[v+7],s[v+8]),S.set(o[_+0],o[_+1]),E.set(o[_+2],o[_+3]),x.set(o[_+4],o[_+5]),A.copy(w).add(b).add(M).divideScalar(3);const T=m(A);y(S,_+0,w,T),y(E,_+2,b,T),y(x,_+4,M,T)}}function y(w,b,M,A){A<0&&w.x===1&&(o[b]=w.x-1),M.x===0&&M.z===0&&(o[b]=A/2/Math.PI+.5)}function m(w){return Math.atan2(w.z,-w.x)}function g(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Gr(t.vertices,t.indices,t.radius,t.details)}}class wh extends Gr{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new wh(t.radius,t.detail)}}const dc=new L,fc=new L,Td=new L,pc=new vn;class Ov extends ce{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const i=Math.pow(10,4),s=Math.cos(Ms*e),o=t.getIndex(),a=t.getAttribute("position"),l=o?o.count:a.count,c=[0,0,0],u=["a","b","c"],h=new Array(3),d={},f=[];for(let p=0;p<l;p+=3){o?(c[0]=o.getX(p),c[1]=o.getX(p+1),c[2]=o.getX(p+2)):(c[0]=p,c[1]=p+1,c[2]=p+2);const{a:y,b:m,c:g}=pc;if(y.fromBufferAttribute(a,c[0]),m.fromBufferAttribute(a,c[1]),g.fromBufferAttribute(a,c[2]),pc.getNormal(Td),h[0]="".concat(Math.round(y.x*i),",").concat(Math.round(y.y*i),",").concat(Math.round(y.z*i)),h[1]="".concat(Math.round(m.x*i),",").concat(Math.round(m.y*i),",").concat(Math.round(m.z*i)),h[2]="".concat(Math.round(g.x*i),",").concat(Math.round(g.y*i),",").concat(Math.round(g.z*i)),!(h[0]===h[1]||h[1]===h[2]||h[2]===h[0]))for(let w=0;w<3;w++){const b=(w+1)%3,M=h[w],A=h[b],S=pc[u[w]],E=pc[u[b]],x="".concat(M,"_").concat(A),v="".concat(A,"_").concat(M);v in d&&d[v]?(Td.dot(d[v].normal)<=s&&(f.push(S.x,S.y,S.z),f.push(E.x,E.y,E.z)),d[v]=null):x in d||(d[x]={index0:c[w],index1:c[b],normal:Td.clone()})}}for(const p in d)if(d[p]){const{index0:y,index1:m}=d[p];dc.fromBufferAttribute(a,y),fc.fromBufferAttribute(a,m),f.push(dc.x,dc.y,dc.z),f.push(fc.x,fc.y,fc.z)}this.setAttribute("position",new zt(f,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}class Ii{constructor(){this.type="Curve",this.arcLengthDivisions=200,this.needsUpdate=!1,this.cacheArcLengths=null}getPoint(){console.warn("THREE.Curve: .getPoint() not implemented.")}getPointAt(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)}getPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e}getSpacedPoints(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,i=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),s+=n.distanceTo(i),e.push(s),i=n;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e=null){const n=this.getLengths();let i=0;const s=n.length;let o;e?o=e:o=t*n[s-1];let a=0,l=s-1,c;for(;a<=l;)if(i=Math.floor(a+(l-a)/2),c=n[i]-o,c<0)a=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===o)return i/(s-1);const u=n[i],d=n[i+1]-u,f=(o-u)/d;return(i+f)/(s-1)}getTangent(t,e){let i=t-1e-4,s=t+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),l=e||(o.isVector2?new at:new L);return l.copy(a).sub(o).normalize(),l}getTangentAt(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)}computeFrenetFrames(t,e=!1){const n=new L,i=[],s=[],o=[],a=new L,l=new jt;for(let f=0;f<=t;f++){const p=f/t;i[f]=this.getTangentAt(p,new L)}s[0]=new L,o[0]=new L;let c=Number.MAX_VALUE;const u=Math.abs(i[0].x),h=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=c&&(c=u,n.set(1,0,0)),h<=c&&(c=h,n.set(0,1,0)),d<=c&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let f=1;f<=t;f++){if(s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(i[f-1],i[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(re(i[f-1].dot(i[f]),-1,1));s[f].applyMatrix4(l.makeRotationAxis(a,p))}o[f].crossVectors(i[f],s[f])}if(e===!0){let f=Math.acos(re(s[0].dot(s[t]),-1,1));f/=t,i[0].dot(a.crossVectors(s[0],s[t]))>0&&(f=-f);for(let p=1;p<=t;p++)s[p].applyMatrix4(l.makeRotationAxis(i[p],f*p)),o[p].crossVectors(i[p],s[p])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.7,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class Th extends Ii{constructor(t=0,e=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=l}getPoint(t,e=new at){const n=e,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+t*s;let l=this.aX+this.xRadius*Math.cos(a),c=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),d=l-this.aX,f=c-this.aY;l=d*u-f*h+this.aX,c=d*h+f*u+this.aY}return n.set(l,c)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class Uv extends Th{constructor(t,e,n,i,s,o){super(t,e,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function Ip(){let r=0,t=0,e=0,n=0;function i(s,o,a,l){r=s,t=a,e=-3*s+3*o-2*a-l,n=2*s-2*o+a+l}return{initCatmullRom:function(s,o,a,l,c){i(o,a,c*(a-s),c*(l-o))},initNonuniformCatmullRom:function(s,o,a,l,c,u,h){let d=(o-s)/c-(a-s)/(c+u)+(a-o)/u,f=(a-o)/u-(l-o)/(u+h)+(l-a)/h;d*=u,f*=u,i(o,a,d,f)},calc:function(s){const o=s*s,a=o*s;return r+t*s+e*o+n*a}}}const mc=new L,Ed=new Ip,Ad=new Ip,Cd=new Ip;class Fv extends Ii{constructor(t=[],e=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=i}getPoint(t,e=new L){const n=e,i=this.points,s=i.length,o=(s-(this.closed?0:1))*t;let a=Math.floor(o),l=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:l===0&&a===s-1&&(a=s-2,l=1);let c,u;this.closed||a>0?c=i[(a-1)%s]:(mc.subVectors(i[0],i[1]).add(i[0]),c=mc);const h=i[a%s],d=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(mc.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=mc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(c.distanceToSquared(h),f),y=Math.pow(h.distanceToSquared(d),f),m=Math.pow(d.distanceToSquared(u),f);y<1e-4&&(y=1),p<1e-4&&(p=y),m<1e-4&&(m=y),Ed.initNonuniformCatmullRom(c.x,h.x,d.x,u.x,p,y,m),Ad.initNonuniformCatmullRom(c.y,h.y,d.y,u.y,p,y,m),Cd.initNonuniformCatmullRom(c.z,h.z,d.z,u.z,p,y,m)}else this.curveType==="catmullrom"&&(Ed.initCatmullRom(c.x,h.x,d.x,u.x,this.tension),Ad.initCatmullRom(c.y,h.y,d.y,u.y,this.tension),Cd.initCatmullRom(c.z,h.z,d.z,u.z,this.tension));return n.set(Ed.calc(l),Ad.calc(l),Cd.calc(l)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new L().fromArray(i))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Ng(r,t,e,n,i){const s=(n-t)*.5,o=(i-e)*.5,a=r*r,l=r*a;return(2*e-2*n+s+o)*l+(-3*e+3*n-2*s-o)*a+s*r+e}function nw(r,t){const e=1-r;return e*e*t}function iw(r,t){return 2*(1-r)*r*t}function rw(r,t){return r*r*t}function Da(r,t,e,n){return nw(r,t)+iw(r,e)+rw(r,n)}function sw(r,t){const e=1-r;return e*e*e*t}function ow(r,t){const e=1-r;return 3*e*e*r*t}function aw(r,t){return 3*(1-r)*r*r*t}function lw(r,t){return r*r*r*t}function Oa(r,t,e,n,i){return sw(r,t)+ow(r,e)+aw(r,n)+lw(r,i)}class Np extends Ii{constructor(t=new at,e=new at,n=new at,i=new at){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new at){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Oa(t,i.x,s.x,o.x,a.x),Oa(t,i.y,s.y,o.y,a.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Bv extends Ii{constructor(t=new L,e=new L,n=new L,i=new L){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=i}getPoint(t,e=new L){const n=e,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(Oa(t,i.x,s.x,o.x,a.x),Oa(t,i.y,s.y,o.y,a.y),Oa(t,i.z,s.z,o.z,a.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Pp extends Ii{constructor(t=new at,e=new at){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new at){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new at){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class zv extends Ii{constructor(t=new L,e=new L){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new L){const n=e;return t===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new L){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Lp extends Ii{constructor(t=new at,e=new at,n=new at){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new at){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(Da(t,i.x,s.x,o.x),Da(t,i.y,s.y,o.y)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Dp extends Ii{constructor(t=new L,e=new L,n=new L){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}getPoint(t,e=new L){const n=e,i=this.v0,s=this.v1,o=this.v2;return n.set(Da(t,i.x,s.x,o.x),Da(t,i.y,s.y,o.y),Da(t,i.z,s.z,o.z)),n}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Op extends Ii{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new at){const n=e,i=this.points,s=(i.length-1)*t,o=Math.floor(s),a=s-o,l=i[o===0?o:o-1],c=i[o],u=i[o>i.length-2?i.length-1:o+1],h=i[o>i.length-3?i.length-1:o+2];return n.set(Ng(a,l.x,c.x,u.x,h.x),Ng(a,l.y,c.y,u.y,h.y)),n}copy(t){super.copy(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,n=this.points.length;e<n;e++){const i=this.points[e];t.points.push(i.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const i=t.points[e];this.points.push(new at().fromArray(i))}return this}}var Wu=Object.freeze({__proto__:null,ArcCurve:Uv,CatmullRomCurve3:Fv,CubicBezierCurve:Np,CubicBezierCurve3:Bv,EllipseCurve:Th,LineCurve:Pp,LineCurve3:zv,QuadraticBezierCurve:Lp,QuadraticBezierCurve3:Dp,SplineCurve:Op});class kv extends Ii{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const n=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Wu[n](e,t))}return this}getPoint(t,e){const n=t*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],l=a.getLength(),c=l===0?0:1-o/l;return a.getPointAt(c,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,i=this.curves.length;n<i;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,l=o.getPoints(a);for(let c=0;c<l.length;c++){const u=l[c];n&&n.equals(u)||(e.push(u),n=u)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(i.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const i=this.curves[e];t.curves.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const i=t.curves[e];this.curves.push(new Wu[i.type]().fromJSON(i))}return this}}class Xu extends kv{constructor(t){super(),this.type="Path",this.currentPoint=new at,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const n=new Pp(this.currentPoint.clone(),new at(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,n,i){const s=new Lp(this.currentPoint.clone(),new at(t,e),new at(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(t,e,n,i,s,o){const a=new Np(this.currentPoint.clone(),new at(t,e),new at(n,i),new at(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),n=new Op(e);return this.curves.push(n),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,n,i,s,o){const a=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(t+a,e+l,n,i,s,o),this}absarc(t,e,n,i,s,o){return this.absellipse(t,e,n,n,i,s,o),this}ellipse(t,e,n,i,s,o,a,l){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(t+c,e+u,n,i,s,o,a,l),this}absellipse(t,e,n,i,s,o,a,l){const c=new Th(t,e,n,i,s,o,a,l);if(this.curves.length>0){const h=c.getPoint(0);h.equals(this.currentPoint)||this.lineTo(h.x,h.y)}this.curves.push(c);const u=c.getPoint(1);return this.currentPoint.copy(u),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class Ss extends Xu{constructor(t){super(t),this.uuid=ri(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let n=0,i=this.holes.length;n<i;n++)e[n]=this.holes[n].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(i.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const i=this.holes[e];t.holes.push(i.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const i=t.holes[e];this.holes.push(new Xu().fromJSON(i))}return this}}function cw(r,t,e=2){const n=t&&t.length,i=n?t[0]*e:r.length;let s=Vv(r,0,i,e,!0);const o=[];if(!s||s.next===s.prev)return o;let a,l,c;if(n&&(s=pw(r,t,s,e)),r.length>80*e){a=1/0,l=1/0;let u=-1/0,h=-1/0;for(let d=e;d<i;d+=e){const f=r[d],p=r[d+1];f<a&&(a=f),p<l&&(l=p),f>u&&(u=f),p>h&&(h=p)}c=Math.max(u-a,h-l),c=c!==0?32767/c:0}return Za(s,o,e,a,l,c,0),o}function Vv(r,t,e,n,i){let s;if(i===Tw(r,t,e,n)>0)for(let o=t;o<e;o+=n)s=Pg(o/n|0,r[o],r[o+1],s);else for(let o=e-n;o>=t;o-=n)s=Pg(o/n|0,r[o],r[o+1],s);return s&&Bo(s,s.next)&&(Ka(s),s=s.next),s}function Is(r,t){if(!r)return r;t||(t=r);let e=r,n;do if(n=!1,!e.steiner&&(Bo(e,e.next)||Ve(e.prev,e,e.next)===0)){if(Ka(e),e=t=e.prev,e===e.next)break;n=!0}else e=e.next;while(n||e!==t);return t}function Za(r,t,e,n,i,s,o){if(!r)return;!o&&s&&vw(r,n,i,s);let a=r;for(;r.prev!==r.next;){const l=r.prev,c=r.next;if(s?hw(r,n,i,s):uw(r)){t.push(l.i,r.i,c.i),Ka(r),r=c.next,a=c.next;continue}if(r=c,r===a){o?o===1?(r=dw(Is(r),t),Za(r,t,e,n,i,s,2)):o===2&&fw(r,t,e,n,i,s):Za(Is(r),t,e,n,i,s,1);break}}}function uw(r){const t=r.prev,e=r,n=r.next;if(Ve(t,e,n)>=0)return!1;const i=t.x,s=e.x,o=n.x,a=t.y,l=e.y,c=n.y,u=Math.min(i,s,o),h=Math.min(a,l,c),d=Math.max(i,s,o),f=Math.max(a,l,c);let p=n.next;for(;p!==t;){if(p.x>=u&&p.x<=d&&p.y>=h&&p.y<=f&&wa(i,a,s,l,o,c,p.x,p.y)&&Ve(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function hw(r,t,e,n){const i=r.prev,s=r,o=r.next;if(Ve(i,s,o)>=0)return!1;const a=i.x,l=s.x,c=o.x,u=i.y,h=s.y,d=o.y,f=Math.min(a,l,c),p=Math.min(u,h,d),y=Math.max(a,l,c),m=Math.max(u,h,d),g=wf(f,p,t,e,n),w=wf(y,m,t,e,n);let b=r.prevZ,M=r.nextZ;for(;b&&b.z>=g&&M&&M.z<=w;){if(b.x>=f&&b.x<=y&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&wa(a,u,l,h,c,d,b.x,b.y)&&Ve(b.prev,b,b.next)>=0||(b=b.prevZ,M.x>=f&&M.x<=y&&M.y>=p&&M.y<=m&&M!==i&&M!==o&&wa(a,u,l,h,c,d,M.x,M.y)&&Ve(M.prev,M,M.next)>=0))return!1;M=M.nextZ}for(;b&&b.z>=g;){if(b.x>=f&&b.x<=y&&b.y>=p&&b.y<=m&&b!==i&&b!==o&&wa(a,u,l,h,c,d,b.x,b.y)&&Ve(b.prev,b,b.next)>=0)return!1;b=b.prevZ}for(;M&&M.z<=w;){if(M.x>=f&&M.x<=y&&M.y>=p&&M.y<=m&&M!==i&&M!==o&&wa(a,u,l,h,c,d,M.x,M.y)&&Ve(M.prev,M,M.next)>=0)return!1;M=M.nextZ}return!0}function dw(r,t){let e=r;do{const n=e.prev,i=e.next.next;!Bo(n,i)&&Gv(n,e,e.next,i)&&Ja(n,i)&&Ja(i,n)&&(t.push(n.i,e.i,i.i),Ka(e),Ka(e.next),e=r=i),e=e.next}while(e!==r);return Is(e)}function fw(r,t,e,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&Mw(o,a)){let l=Wv(o,a);o=Is(o,o.next),l=Is(l,l.next),Za(o,t,e,n,i,s,0),Za(l,t,e,n,i,s,0);return}a=a.next}o=o.next}while(o!==r)}function pw(r,t,e,n){const i=[];for(let s=0,o=t.length;s<o;s++){const a=t[s]*n,l=s<o-1?t[s+1]*n:r.length,c=Vv(r,a,l,n,!1);c===c.next&&(c.steiner=!0),i.push(bw(c))}i.sort(mw);for(let s=0;s<i.length;s++)e=gw(i[s],e);return e}function mw(r,t){let e=r.x-t.x;if(e===0&&(e=r.y-t.y,e===0)){const n=(r.next.y-r.y)/(r.next.x-r.x),i=(t.next.y-t.y)/(t.next.x-t.x);e=n-i}return e}function gw(r,t){const e=yw(r,t);if(!e)return t;const n=Wv(e,r);return Is(n,n.next),Is(e,e.next)}function yw(r,t){let e=t;const n=r.x,i=r.y;let s=-1/0,o;if(Bo(r,e))return e;do{if(Bo(r,e.next))return e.next;if(i<=e.y&&i>=e.next.y&&e.next.y!==e.y){const h=e.x+(i-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(h<=n&&h>s&&(s=h,o=e.x<e.next.x?e:e.next,h===n))return o}e=e.next}while(e!==t);if(!o)return null;const a=o,l=o.x,c=o.y;let u=1/0;e=o;do{if(n>=e.x&&e.x>=l&&n!==e.x&&Hv(i<c?n:s,i,l,c,i<c?s:n,i,e.x,e.y)){const h=Math.abs(i-e.y)/(n-e.x);Ja(e,r)&&(h<u||h===u&&(e.x>o.x||e.x===o.x&&_w(o,e)))&&(o=e,u=h)}e=e.next}while(e!==a);return o}function _w(r,t){return Ve(r.prev,r,t.prev)<0&&Ve(t.next,r,r.next)<0}function vw(r,t,e,n){let i=r;do i.z===0&&(i.z=wf(i.x,i.y,t,e,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,xw(i)}function xw(r){let t,e=1;do{let n=r,i;r=null;let s=null;for(t=0;n;){t++;let o=n,a=0;for(let c=0;c<e&&(a++,o=o.nextZ,!!o);c++);let l=e;for(;a>0||l>0&&o;)a!==0&&(l===0||!o||n.z<=o.z)?(i=n,n=n.nextZ,a--):(i=o,o=o.nextZ,l--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;n=o}s.nextZ=null,e*=2}while(t>1);return r}function wf(r,t,e,n,i){return r=(r-e)*i|0,t=(t-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,r|t<<1}function bw(r){let t=r,e=r;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==r);return e}function Hv(r,t,e,n,i,s,o,a){return(i-o)*(t-a)>=(r-o)*(s-a)&&(r-o)*(n-a)>=(e-o)*(t-a)&&(e-o)*(s-a)>=(i-o)*(n-a)}function wa(r,t,e,n,i,s,o,a){return!(r===o&&t===a)&&Hv(r,t,e,n,i,s,o,a)}function Mw(r,t){return r.next.i!==t.i&&r.prev.i!==t.i&&!Sw(r,t)&&(Ja(r,t)&&Ja(t,r)&&ww(r,t)&&(Ve(r.prev,r,t.prev)||Ve(r,t.prev,t))||Bo(r,t)&&Ve(r.prev,r,r.next)>0&&Ve(t.prev,t,t.next)>0)}function Ve(r,t,e){return(t.y-r.y)*(e.x-t.x)-(t.x-r.x)*(e.y-t.y)}function Bo(r,t){return r.x===t.x&&r.y===t.y}function Gv(r,t,e,n){const i=yc(Ve(r,t,e)),s=yc(Ve(r,t,n)),o=yc(Ve(e,n,r)),a=yc(Ve(e,n,t));return!!(i!==s&&o!==a||i===0&&gc(r,e,t)||s===0&&gc(r,n,t)||o===0&&gc(e,r,n)||a===0&&gc(e,t,n))}function gc(r,t,e){return t.x<=Math.max(r.x,e.x)&&t.x>=Math.min(r.x,e.x)&&t.y<=Math.max(r.y,e.y)&&t.y>=Math.min(r.y,e.y)}function yc(r){return r>0?1:r<0?-1:0}function Sw(r,t){let e=r;do{if(e.i!==r.i&&e.next.i!==r.i&&e.i!==t.i&&e.next.i!==t.i&&Gv(e,e.next,r,t))return!0;e=e.next}while(e!==r);return!1}function Ja(r,t){return Ve(r.prev,r,r.next)<0?Ve(r,t,r.next)>=0&&Ve(r,r.prev,t)>=0:Ve(r,t,r.prev)<0||Ve(r,r.next,t)<0}function ww(r,t){let e=r,n=!1;const i=(r.x+t.x)/2,s=(r.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&i<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(n=!n),e=e.next;while(e!==r);return n}function Wv(r,t){const e=Tf(r.i,r.x,r.y),n=Tf(t.i,t.x,t.y),i=r.next,s=t.prev;return r.next=t,t.prev=r,e.next=i,i.prev=e,n.next=e,e.prev=n,s.next=n,n.prev=s,n}function Pg(r,t,e,n){const i=Tf(r,t,e);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Ka(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Tf(r,t,e){return{i:r,x:t,y:e,prev:null,next:null,z:0,prevZ:null,nextZ:null,steiner:!1}}function Tw(r,t,e,n){let i=0;for(let s=t,o=e-n;s<e;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Ew{static triangulate(t,e,n=2){return cw(t,e,n)}}class Ai{static area(t){const e=t.length;let n=0;for(let i=e-1,s=0;s<e;i=s++)n+=t[i].x*t[s].y-t[s].x*t[i].y;return n*.5}static isClockWise(t){return Ai.area(t)<0}static triangulateShape(t,e){const n=[],i=[],s=[];Lg(t),Dg(n,t);let o=t.length;e.forEach(Lg);for(let l=0;l<e.length;l++)i.push(o),o+=e[l].length,Dg(n,e[l]);const a=Ew.triangulate(n,i);for(let l=0;l<a.length;l+=3)s.push(a.slice(l,l+3));return s}}function Lg(r){const t=r.length;t>2&&r[t-1].equals(r[0])&&r.pop()}function Dg(r,t){for(let e=0;e<t.length;e++)r.push(t[e].x),r.push(t[e].y)}class Eh extends ce{constructor(t=new Ss([new at(.5,.5),new at(-.5,.5),new at(-.5,-.5),new at(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,i=[],s=[];for(let a=0,l=t.length;a<l;a++){const c=t[a];o(c)}this.setAttribute("position",new zt(i,3)),this.setAttribute("uv",new zt(s,2)),this.computeVertexNormals();function o(a){const l=[],c=e.curveSegments!==void 0?e.curveSegments:12,u=e.steps!==void 0?e.steps:1,h=e.depth!==void 0?e.depth:1;let d=e.bevelEnabled!==void 0?e.bevelEnabled:!0,f=e.bevelThickness!==void 0?e.bevelThickness:.2,p=e.bevelSize!==void 0?e.bevelSize:f-.1,y=e.bevelOffset!==void 0?e.bevelOffset:0,m=e.bevelSegments!==void 0?e.bevelSegments:3;const g=e.extrudePath,w=e.UVGenerator!==void 0?e.UVGenerator:Aw;let b,M=!1,A,S,E,x;g&&(b=g.getSpacedPoints(u),M=!0,d=!1,A=g.computeFrenetFrames(u,!1),S=new L,E=new L,x=new L),d||(m=0,f=0,p=0,y=0);const v=a.extractPoints(c);let _=v.shape;const T=v.holes;if(!Ai.isClockWise(_)){_=_.reverse();for(let G=0,Z=T.length;G<Z;G++){const tt=T[G];Ai.isClockWise(tt)&&(T[G]=tt.reverse())}}function B(G){const tt=10000000000000001e-36;let nt=G[0];for(let ht=1;ht<=G.length;ht++){const dt=ht%G.length,yt=G[dt],It=yt.x-nt.x,Pt=yt.y-nt.y,O=It*It+Pt*Pt,C=Math.max(Math.abs(yt.x),Math.abs(yt.y),Math.abs(nt.x),Math.abs(nt.y)),q=tt*C*C;if(O<=q){G.splice(dt,1),ht--;continue}nt=yt}}B(_),T.forEach(B);const V=T.length,H=_;for(let G=0;G<V;G++){const Z=T[G];_=_.concat(Z)}function U(G,Z,tt){return Z||console.error("THREE.ExtrudeGeometry: vec does not exist"),G.clone().addScaledVector(Z,tt)}const Q=_.length;function W(G,Z,tt){let nt,ht,dt;const yt=G.x-Z.x,It=G.y-Z.y,Pt=tt.x-G.x,O=tt.y-G.y,C=yt*yt+It*It,q=yt*O-It*Pt;if(Math.abs(q)>Number.EPSILON){const st=Math.sqrt(C),gt=Math.sqrt(Pt*Pt+O*O),it=Z.x-It/st,Ft=Z.y+yt/st,Et=tt.x-O/gt,kt=tt.y+Pt/gt,Vt=((Et-it)*O-(kt-Ft)*Pt)/(yt*O-It*Pt);nt=it+yt*Vt-G.x,ht=Ft+It*Vt-G.y;const bt=nt*nt+ht*ht;if(bt<=2)return new at(nt,ht);dt=Math.sqrt(bt/2)}else{let st=!1;yt>Number.EPSILON?Pt>Number.EPSILON&&(st=!0):yt<-Number.EPSILON?Pt<-Number.EPSILON&&(st=!0):Math.sign(It)===Math.sign(O)&&(st=!0),st?(nt=-It,ht=yt,dt=Math.sqrt(C)):(nt=yt,ht=It,dt=Math.sqrt(C/2))}return new at(nt/dt,ht/dt)}const lt=[];for(let G=0,Z=H.length,tt=Z-1,nt=G+1;G<Z;G++,tt++,nt++)tt===Z&&(tt=0),nt===Z&&(nt=0),lt[G]=W(H[G],H[tt],H[nt]);const ut=[];let mt,Xt=lt.concat();for(let G=0,Z=V;G<Z;G++){const tt=T[G];mt=[];for(let nt=0,ht=tt.length,dt=ht-1,yt=nt+1;nt<ht;nt++,dt++,yt++)dt===ht&&(dt=0),yt===ht&&(yt=0),mt[nt]=W(tt[nt],tt[dt],tt[yt]);ut.push(mt),Xt=Xt.concat(mt)}let te;if(m===0)te=Ai.triangulateShape(H,T);else{const G=[],Z=[];for(let tt=0;tt<m;tt++){const nt=tt/m,ht=f*Math.cos(nt*Math.PI/2),dt=p*Math.sin(nt*Math.PI/2)+y;for(let yt=0,It=H.length;yt<It;yt++){const Pt=U(H[yt],lt[yt],dt);R(Pt.x,Pt.y,-ht),nt===0&&G.push(Pt)}for(let yt=0,It=V;yt<It;yt++){const Pt=T[yt];mt=ut[yt];const O=[];for(let C=0,q=Pt.length;C<q;C++){const st=U(Pt[C],mt[C],dt);R(st.x,st.y,-ht),nt===0&&O.push(st)}nt===0&&Z.push(O)}}te=Ai.triangulateShape(G,Z)}const qt=te.length,$t=p+y;for(let G=0;G<Q;G++){const Z=d?U(_[G],Xt[G],$t):_[G];M?(E.copy(A.normals[0]).multiplyScalar(Z.x),S.copy(A.binormals[0]).multiplyScalar(Z.y),x.copy(b[0]).add(E).add(S),R(x.x,x.y,x.z)):R(Z.x,Z.y,0)}for(let G=1;G<=u;G++)for(let Z=0;Z<Q;Z++){const tt=d?U(_[Z],Xt[Z],$t):_[Z];M?(E.copy(A.normals[G]).multiplyScalar(tt.x),S.copy(A.binormals[G]).multiplyScalar(tt.y),x.copy(b[G]).add(E).add(S),R(x.x,x.y,x.z)):R(tt.x,tt.y,h/u*G)}for(let G=m-1;G>=0;G--){const Z=G/m,tt=f*Math.cos(Z*Math.PI/2),nt=p*Math.sin(Z*Math.PI/2)+y;for(let ht=0,dt=H.length;ht<dt;ht++){const yt=U(H[ht],lt[ht],nt);R(yt.x,yt.y,h+tt)}for(let ht=0,dt=T.length;ht<dt;ht++){const yt=T[ht];mt=ut[ht];for(let It=0,Pt=yt.length;It<Pt;It++){const O=U(yt[It],mt[It],nt);M?R(O.x,O.y+b[u-1].y,b[u-1].x+tt):R(O.x,O.y,h+tt)}}}ct(),pt();function ct(){const G=i.length/3;if(d){let Z=0,tt=Q*Z;for(let nt=0;nt<qt;nt++){const ht=te[nt];D(ht[2]+tt,ht[1]+tt,ht[0]+tt)}Z=u+m*2,tt=Q*Z;for(let nt=0;nt<qt;nt++){const ht=te[nt];D(ht[0]+tt,ht[1]+tt,ht[2]+tt)}}else{for(let Z=0;Z<qt;Z++){const tt=te[Z];D(tt[2],tt[1],tt[0])}for(let Z=0;Z<qt;Z++){const tt=te[Z];D(tt[0]+Q*u,tt[1]+Q*u,tt[2]+Q*u)}}n.addGroup(G,i.length/3-G,0)}function pt(){const G=i.length/3;let Z=0;K(H,Z),Z+=H.length;for(let tt=0,nt=T.length;tt<nt;tt++){const ht=T[tt];K(ht,Z),Z+=ht.length}n.addGroup(G,i.length/3-G,1)}function K(G,Z){let tt=G.length;for(;--tt>=0;){const nt=tt;let ht=tt-1;ht<0&&(ht=G.length-1);for(let dt=0,yt=u+m*2;dt<yt;dt++){const It=Q*dt,Pt=Q*(dt+1),O=Z+nt+It,C=Z+ht+It,q=Z+ht+Pt,st=Z+nt+Pt;z(O,C,q,st)}}}function R(G,Z,tt){l.push(G),l.push(Z),l.push(tt)}function D(G,Z,tt){J(G),J(Z),J(tt);const nt=i.length/3,ht=w.generateTopUV(n,i,nt-3,nt-2,nt-1);N(ht[0]),N(ht[1]),N(ht[2])}function z(G,Z,tt,nt){J(G),J(Z),J(nt),J(Z),J(tt),J(nt);const ht=i.length/3,dt=w.generateSideWallUV(n,i,ht-6,ht-3,ht-2,ht-1);N(dt[0]),N(dt[1]),N(dt[3]),N(dt[1]),N(dt[2]),N(dt[3])}function J(G){i.push(l[G*3+0]),i.push(l[G*3+1]),i.push(l[G*3+2])}function N(G){s.push(G.x),s.push(G.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,n=this.parameters.options;return Cw(e,n,t)}static fromJSON(t,e){const n=[];for(let s=0,o=t.shapes.length;s<o;s++){const a=e[t.shapes[s]];n.push(a)}const i=t.options.extrudePath;return i!==void 0&&(t.options.extrudePath=new Wu[i.type]().fromJSON(i)),new Eh(n,t.options)}}const Aw={generateTopUV:function(r,t,e,n,i){const s=t[e*3],o=t[e*3+1],a=t[n*3],l=t[n*3+1],c=t[i*3],u=t[i*3+1];return[new at(s,o),new at(a,l),new at(c,u)]},generateSideWallUV:function(r,t,e,n,i,s){const o=t[e*3],a=t[e*3+1],l=t[e*3+2],c=t[n*3],u=t[n*3+1],h=t[n*3+2],d=t[i*3],f=t[i*3+1],p=t[i*3+2],y=t[s*3],m=t[s*3+1],g=t[s*3+2];return Math.abs(a-u)<Math.abs(o-c)?[new at(o,1-l),new at(c,1-h),new at(d,1-p),new at(y,1-g)]:[new at(a,1-l),new at(u,1-h),new at(f,1-p),new at(m,1-g)]}};function Cw(r,t,e){if(e.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];e.shapes.push(s.uuid)}else e.shapes.push(r.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Ah extends Gr{constructor(t=1,e=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Ah(t.radius,t.detail)}}class Ch extends ce{constructor(t=[new at(0,-.5),new at(.5,0),new at(0,.5)],e=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:n,phiLength:i},e=Math.floor(e),i=re(i,0,Math.PI*2);const s=[],o=[],a=[],l=[],c=[],u=1/e,h=new L,d=new at,f=new L,p=new L,y=new L;let m=0,g=0;for(let w=0;w<=t.length-1;w++)switch(w){case 0:m=t[w+1].x-t[w].x,g=t[w+1].y-t[w].y,f.x=g*1,f.y=-m,f.z=g*0,y.copy(f),f.normalize(),l.push(f.x,f.y,f.z);break;case t.length-1:l.push(y.x,y.y,y.z);break;default:m=t[w+1].x-t[w].x,g=t[w+1].y-t[w].y,f.x=g*1,f.y=-m,f.z=g*0,p.copy(f),f.x+=y.x,f.y+=y.y,f.z+=y.z,f.normalize(),l.push(f.x,f.y,f.z),y.copy(p)}for(let w=0;w<=e;w++){const b=n+w*u*i,M=Math.sin(b),A=Math.cos(b);for(let S=0;S<=t.length-1;S++){h.x=t[S].x*M,h.y=t[S].y,h.z=t[S].x*A,o.push(h.x,h.y,h.z),d.x=w/e,d.y=S/(t.length-1),a.push(d.x,d.y);const E=l[3*S+0]*M,x=l[3*S+1],v=l[3*S+0]*A;c.push(E,x,v)}}for(let w=0;w<e;w++)for(let b=0;b<t.length-1;b++){const M=b+w*t.length,A=M,S=M+t.length,E=M+t.length+1,x=M+1;s.push(A,S,x),s.push(E,x,S)}this.setIndex(s),this.setAttribute("position",new zt(o,3)),this.setAttribute("uv",new zt(a,2)),this.setAttribute("normal",new zt(c,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ch(t.points,t.segments,t.phiStart,t.phiLength)}}class bl extends Gr{constructor(t=1,e=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new bl(t.radius,t.detail)}}class Ds extends ce{constructor(t=1,e=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:i};const s=t/2,o=e/2,a=Math.floor(n),l=Math.floor(i),c=a+1,u=l+1,h=t/a,d=e/l,f=[],p=[],y=[],m=[];for(let g=0;g<u;g++){const w=g*d-o;for(let b=0;b<c;b++){const M=b*h-s;p.push(M,-w,0),y.push(0,0,1),m.push(b/a),m.push(1-g/l)}}for(let g=0;g<l;g++)for(let w=0;w<a;w++){const b=w+c*g,M=w+c*(g+1),A=w+1+c*(g+1),S=w+1+c*g;f.push(b,M,S),f.push(M,A,S)}this.setIndex(f),this.setAttribute("position",new zt(p,3)),this.setAttribute("normal",new zt(y,3)),this.setAttribute("uv",new zt(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ds(t.width,t.height,t.widthSegments,t.heightSegments)}}class Rh extends ce{constructor(t=.5,e=1,n=32,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],l=[],c=[],u=[];let h=t;const d=(e-t)/i,f=new L,p=new at;for(let y=0;y<=i;y++){for(let m=0;m<=n;m++){const g=s+m/n*o;f.x=h*Math.cos(g),f.y=h*Math.sin(g),l.push(f.x,f.y,f.z),c.push(0,0,1),p.x=(f.x/e+1)/2,p.y=(f.y/e+1)/2,u.push(p.x,p.y)}h+=d}for(let y=0;y<i;y++){const m=y*(n+1);for(let g=0;g<n;g++){const w=g+m,b=w,M=w+n+1,A=w+n+2,S=w+1;a.push(b,M,S),a.push(M,A,S)}}this.setIndex(a),this.setAttribute("position",new zt(l,3)),this.setAttribute("normal",new zt(c,3)),this.setAttribute("uv",new zt(u,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Rh(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}class Ih extends ce{constructor(t=new Ss([new at(0,.5),new at(-.5,-.5),new at(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],i=[],s=[],o=[];let a=0,l=0;if(Array.isArray(t)===!1)c(t);else for(let u=0;u<t.length;u++)c(t[u]),this.addGroup(a,l,u),a+=l,l=0;this.setIndex(n),this.setAttribute("position",new zt(i,3)),this.setAttribute("normal",new zt(s,3)),this.setAttribute("uv",new zt(o,2));function c(u){const h=i.length/3,d=u.extractPoints(e);let f=d.shape;const p=d.holes;Ai.isClockWise(f)===!1&&(f=f.reverse());for(let m=0,g=p.length;m<g;m++){const w=p[m];Ai.isClockWise(w)===!0&&(p[m]=w.reverse())}const y=Ai.triangulateShape(f,p);for(let m=0,g=p.length;m<g;m++){const w=p[m];f=f.concat(w)}for(let m=0,g=f.length;m<g;m++){const w=f[m];i.push(w.x,w.y,0),s.push(0,0,1),o.push(w.x,w.y)}for(let m=0,g=y.length;m<g;m++){const w=y[m],b=w[0]+h,M=w[1]+h,A=w[2]+h;n.push(b,M,A),l+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return Rw(e,t)}static fromJSON(t,e){const n=[];for(let i=0,s=t.shapes.length;i<s;i++){const o=e[t.shapes[i]];n.push(o)}return new Ih(n,t.curveSegments)}}function Rw(r,t){if(t.shapes=[],Array.isArray(r))for(let e=0,n=r.length;e<n;e++){const i=r[e];t.shapes.push(i.uuid)}else t.shapes.push(r.uuid);return t}class Yo extends ce{constructor(t=1,e=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),n=Math.max(2,Math.floor(n));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new L,d=new L,f=[],p=[],y=[],m=[];for(let g=0;g<=n;g++){const w=[],b=g/n;let M=0;g===0&&o===0?M=.5/e:g===n&&l===Math.PI&&(M=-.5/e);for(let A=0;A<=e;A++){const S=A/e;h.x=-t*Math.cos(i+S*s)*Math.sin(o+b*a),h.y=t*Math.cos(o+b*a),h.z=t*Math.sin(i+S*s)*Math.sin(o+b*a),p.push(h.x,h.y,h.z),d.copy(h).normalize(),y.push(d.x,d.y,d.z),m.push(S+M,1-b),w.push(c++)}u.push(w)}for(let g=0;g<n;g++)for(let w=0;w<e;w++){const b=u[g][w+1],M=u[g][w],A=u[g+1][w],S=u[g+1][w+1];(g!==0||o>0)&&f.push(b,M,S),(g!==n-1||l<Math.PI)&&f.push(M,A,S)}this.setIndex(f),this.setAttribute("position",new zt(p,3)),this.setAttribute("normal",new zt(y,3)),this.setAttribute("uv",new zt(m,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Yo(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}class Nh extends Gr{constructor(t=1,e=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Nh(t.radius,t.detail)}}class Ph extends ce{constructor(t=1,e=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],l=[],c=[],u=new L,h=new L,d=new L;for(let f=0;f<=n;f++)for(let p=0;p<=i;p++){const y=p/i*s,m=f/n*Math.PI*2;h.x=(t+e*Math.cos(m))*Math.cos(y),h.y=(t+e*Math.cos(m))*Math.sin(y),h.z=e*Math.sin(m),a.push(h.x,h.y,h.z),u.x=t*Math.cos(y),u.y=t*Math.sin(y),d.subVectors(h,u).normalize(),l.push(d.x,d.y,d.z),c.push(p/i),c.push(f/n)}for(let f=1;f<=n;f++)for(let p=1;p<=i;p++){const y=(i+1)*f+p-1,m=(i+1)*(f-1)+p-1,g=(i+1)*(f-1)+p,w=(i+1)*f+p;o.push(y,m,w),o.push(m,g,w)}this.setIndex(o),this.setAttribute("position",new zt(a,3)),this.setAttribute("normal",new zt(l,3)),this.setAttribute("uv",new zt(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ph(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Lh extends ce{constructor(t=1,e=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],l=[],c=[],u=[],h=new L,d=new L,f=new L,p=new L,y=new L,m=new L,g=new L;for(let b=0;b<=n;++b){const M=b/n*s*Math.PI*2;w(M,s,o,t,f),w(M+.01,s,o,t,p),m.subVectors(p,f),g.addVectors(p,f),y.crossVectors(m,g),g.crossVectors(y,m),y.normalize(),g.normalize();for(let A=0;A<=i;++A){const S=A/i*Math.PI*2,E=-e*Math.cos(S),x=e*Math.sin(S);h.x=f.x+(E*g.x+x*y.x),h.y=f.y+(E*g.y+x*y.y),h.z=f.z+(E*g.z+x*y.z),l.push(h.x,h.y,h.z),d.subVectors(h,f).normalize(),c.push(d.x,d.y,d.z),u.push(b/n),u.push(A/i)}}for(let b=1;b<=n;b++)for(let M=1;M<=i;M++){const A=(i+1)*(b-1)+(M-1),S=(i+1)*b+(M-1),E=(i+1)*b+M,x=(i+1)*(b-1)+M;a.push(A,S,x),a.push(S,E,x)}this.setIndex(a),this.setAttribute("position",new zt(l,3)),this.setAttribute("normal",new zt(c,3)),this.setAttribute("uv",new zt(u,2));function w(b,M,A,S,E){const x=Math.cos(b),v=Math.sin(b),_=A/M*b,T=Math.cos(_);E.x=S*(2+T)*.5*x,E.y=S*(2+T)*v*.5,E.z=S*Math.sin(_)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Lh(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Dh extends ce{constructor(t=new Dp(new L(-1,-1,0),new L(-1,1,0),new L(1,1,0)),e=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:n,radialSegments:i,closed:s};const o=t.computeFrenetFrames(e,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new L,l=new L,c=new at;let u=new L;const h=[],d=[],f=[],p=[];y(),this.setIndex(p),this.setAttribute("position",new zt(h,3)),this.setAttribute("normal",new zt(d,3)),this.setAttribute("uv",new zt(f,2));function y(){for(let b=0;b<e;b++)m(b);m(s===!1?e:0),w(),g()}function m(b){u=t.getPointAt(b/e,u);const M=o.normals[b],A=o.binormals[b];for(let S=0;S<=i;S++){const E=S/i*Math.PI*2,x=Math.sin(E),v=-Math.cos(E);l.x=v*M.x+x*A.x,l.y=v*M.y+x*A.y,l.z=v*M.z+x*A.z,l.normalize(),d.push(l.x,l.y,l.z),a.x=u.x+n*l.x,a.y=u.y+n*l.y,a.z=u.z+n*l.z,h.push(a.x,a.y,a.z)}}function g(){for(let b=1;b<=e;b++)for(let M=1;M<=i;M++){const A=(i+1)*(b-1)+(M-1),S=(i+1)*b+(M-1),E=(i+1)*b+M,x=(i+1)*(b-1)+M;p.push(A,S,x),p.push(S,E,x)}}function w(){for(let b=0;b<=e;b++)for(let M=0;M<=i;M++)c.x=b/e,c.y=M/i,f.push(c.x,c.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Dh(new Wu[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Xv extends ce{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],n=new Set,i=new L,s=new L;if(t.index!==null){const o=t.attributes.position,a=t.index;let l=t.groups;l.length===0&&(l=[{start:0,count:a.count,materialIndex:0}]);for(let c=0,u=l.length;c<u;++c){const h=l[c],d=h.start,f=h.count;for(let p=d,y=d+f;p<y;p+=3)for(let m=0;m<3;m++){const g=a.getX(p+m),w=a.getX(p+(m+1)%3);i.fromBufferAttribute(o,g),s.fromBufferAttribute(o,w),Og(i,s,n)===!0&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}}else{const o=t.attributes.position;for(let a=0,l=o.count/3;a<l;a++)for(let c=0;c<3;c++){const u=3*a+c,h=3*a+(c+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,h),Og(i,s,n)===!0&&(e.push(i.x,i.y,i.z),e.push(s.x,s.y,s.z))}}this.setAttribute("position",new zt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function Og(r,t,e){const n="".concat(r.x,",").concat(r.y,",").concat(r.z,"-").concat(t.x,",").concat(t.y,",").concat(t.z),i="".concat(t.x,",").concat(t.y,",").concat(t.z,"-").concat(r.x,",").concat(r.y,",").concat(r.z);return e.has(n)===!0||e.has(i)===!0?!1:(e.add(n),e.add(i),!0)}var Ug=Object.freeze({__proto__:null,BoxGeometry:Ls,CapsuleGeometry:Mh,CircleGeometry:Sh,ConeGeometry:xl,CylinderGeometry:vl,DodecahedronGeometry:wh,EdgesGeometry:Ov,ExtrudeGeometry:Eh,IcosahedronGeometry:Ah,LatheGeometry:Ch,OctahedronGeometry:bl,PlaneGeometry:Ds,PolyhedronGeometry:Gr,RingGeometry:Rh,ShapeGeometry:Ih,SphereGeometry:Yo,TetrahedronGeometry:Nh,TorusGeometry:Ph,TorusKnotGeometry:Lh,TubeGeometry:Dh,WireframeGeometry:Xv});class $v extends fn{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new At(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class Yv extends $n{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Up extends fn{constructor(t){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new At(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new At(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new at(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new si,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class qv extends Up{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new at(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return re(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new At(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new At(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new At(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class jv extends fn{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new At(16777215),this.specular=new At(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new At(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new at(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new si,this.combine=fl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Zv extends fn{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new At(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new At(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new at(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class Jv extends fn{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new at(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class Kv extends fn{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new At(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new At(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new at(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new si,this.combine=fl,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class Fp extends fn{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=cv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Bp extends fn{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}class Qv extends fn{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new At(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Hr,this.normalScale=new at(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class tx extends Ln{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function ys(r,t){return!r||r.constructor===t?r:typeof t.BYTES_PER_ELEMENT=="number"?new t(r):Array.prototype.slice.call(r)}function ex(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function nx(r){function t(i,s){return r[i]-r[s]}const e=r.length,n=new Array(e);for(let i=0;i!==e;++i)n[i]=i;return n.sort(t),n}function Ef(r,t,e){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=e[s]*t;for(let l=0;l!==t;++l)i[o++]=r[a+l]}return i}function zp(r,t,e,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(t.push(s.time),e.push(...o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(t.push(s.time),o.toArray(e,e.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(t.push(s.time),e.push(o)),s=r[i++];while(s!==void 0)}function Iw(r,t,e,n,i=30){const s=r.clone();s.name=t;const o=[];for(let l=0;l<s.tracks.length;++l){const c=s.tracks[l],u=c.getValueSize(),h=[],d=[];for(let f=0;f<c.times.length;++f){const p=c.times[f]*i;if(!(p<e||p>=n)){h.push(c.times[f]);for(let y=0;y<u;++y)d.push(c.values[f*u+y])}}h.length!==0&&(c.times=ys(h,c.times.constructor),c.values=ys(d,c.values.constructor),o.push(c))}s.tracks=o;let a=1/0;for(let l=0;l<s.tracks.length;++l)a>s.tracks[l].times[0]&&(a=s.tracks[l].times[0]);for(let l=0;l<s.tracks.length;++l)s.tracks[l].shift(-1*a);return s.resetDuration(),s}function Nw(r,t=0,e=r,n=30){n<=0&&(n=30);const i=e.tracks.length,s=t/n;for(let o=0;o<i;++o){const a=e.tracks[o],l=a.ValueTypeName;if(l==="bool"||l==="string")continue;const c=r.tracks.find(function(g){return g.name===a.name&&g.ValueTypeName===l});if(c===void 0)continue;let u=0;const h=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);let d=0;const f=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let y;if(s<=a.times[0]){const g=u,w=h-u;y=a.values.slice(g,w)}else if(s>=a.times[p]){const g=p*h+u,w=g+h-u;y=a.values.slice(g,w)}else{const g=a.createInterpolant(),w=u,b=h-u;g.evaluate(s),y=g.resultBuffer.slice(w,b)}l==="quaternion"&&new cn().fromArray(y).normalize().conjugate().toArray(y);const m=c.times.length;for(let g=0;g<m;++g){const w=g*f+d;if(l==="quaternion")cn.multiplyQuaternionsFlat(c.values,w,y,0,c.values,w);else{const b=f-d*2;for(let M=0;M<b;++M)c.values[w+M]-=y[M]}}}return r.blendMode=vp,r}class Pw{static convertArray(t,e){return ys(t,e)}static isTypedArray(t){return ex(t)}static getKeyframeOrder(t){return nx(t)}static sortedArray(t,e,n){return Ef(t,e,n)}static flattenJSON(t,e,n,i){zp(t,e,n,i)}static subclip(t,e,n,i,s=30){return Iw(t,e,n,i,s)}static makeClipAdditive(t,e=0,n=t,i=30){return Nw(t,e,n,i)}}class Ml{constructor(t,e,n,i){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new e.constructor(n),this.sampleValues=e,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let n=this._cachedIndex,i=e[n],s=e[n-1];t:{e:{let o;n:{i:if(!(t<i)){for(let a=n+2;;){if(i===void 0){if(t<s)break i;return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(s=i,i=e[++n],t<i)break e}o=e.length;break n}if(!(t>=s)){const a=e[1];t<a&&(n=2,s=a);for(let l=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=s,s=e[--n-1],t>=s)break e}o=n,n=0;break n}break t}for(;n<o;){const a=n+o>>>1;t<e[a]?o=a:n=a+1}if(i=e[n],s=e[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=e.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,t,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=t*i;for(let o=0;o!==i;++o)e[o]=n[s+o];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class ix extends Ml{constructor(t,e,n,i){super(t,e,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:ms,endingEnd:ms}}intervalChanged_(t,e,n){const i=this.parameterPositions;let s=t-2,o=t+1,a=i[s],l=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case gs:s=t,a=2*e-n;break;case Xa:s=i.length-2,a=e+i[s]-i[s+1];break;default:s=t,a=n}if(l===void 0)switch(this.getSettings_().endingEnd){case gs:o=t,l=2*n-e;break;case Xa:o=1,l=n+i[1]-i[0];break;default:o=t-1,l=e}const c=(n-e)*.5,u=this.valueSize;this._weightPrev=c/(e-a),this._weightNext=c/(l-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(n-e)/(i-e),y=p*p,m=y*p,g=-d*m+2*d*y-d*p,w=(1+d)*m+(-1.5-2*d)*y+(-.5+d)*p+1,b=(-1-f)*m+(1.5+f)*y+.5*p,M=f*m-f*y;for(let A=0;A!==a;++A)s[A]=g*o[u+A]+w*o[c+A]+b*o[l+A]+M*o[h+A];return s}}class kp extends Ml{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=t*a,c=l-a,u=(n-e)/(i-e),h=1-u;for(let d=0;d!==a;++d)s[d]=o[c+d]*h+o[l+d]*u;return s}}class rx extends Ml{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t){return this.copySampleValue_(t-1)}}class gi{constructor(t,e,n,i){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ys(e,this.TimeBufferType),this.values=ys(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let n;if(e.toJSON!==this.toJSON)n=e.toJSON(t);else{n={name:t.name,times:ys(t.times,Array),values:ys(t.values,Array)};const i=t.getInterpolation();i!==t.DefaultInterpolation&&(n.interpolation=i)}return n.type=t.ValueTypeName,n}InterpolantFactoryMethodDiscrete(t){return new rx(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new kp(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new ix(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case Wa:e=this.InterpolantFactoryMethodDiscrete;break;case Vu:e=this.InterpolantFactoryMethodLinear;break;case $c:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Wa;case this.InterpolantFactoryMethodLinear:return Vu;case this.InterpolantFactoryMethodSmooth:return $c}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let n=0,i=e.length;n!==i;++n)e[n]*=t}return this}trim(t,e){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<t;)++s;for(;o!==-1&&n[o]>e;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=n.slice(s,o),this.values=this.values.slice(s*a,o*a)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let a=0;a!==s;a++){const l=n[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),t=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),t=!1;break}o=l}if(i!==void 0&&ex(i))for(let a=0,l=i.length;a!==l;++a){const c=i[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),n=this.getValueSize(),i=this.getInterpolation()===$c,s=t.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=t[a],u=t[a+1];if(c!==u&&(a!==1||c!==t[0]))if(i)l=!0;else{const h=a*n,d=h-n,f=h+n;for(let p=0;p!==n;++p){const y=e[h+p];if(y!==e[d+p]||y!==e[f+p]){l=!0;break}}}if(l){if(a!==o){t[o]=t[a];const h=a*n,d=o*n;for(let f=0;f!==n;++f)e[d+f]=e[h+f]}++o}}if(s>0){t[o]=t[s];for(let a=s*n,l=o*n,c=0;c!==n;++c)e[l+c]=e[a+c];++o}return o!==t.length?(this.times=t.slice(0,o),this.values=e.slice(0,o*n)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),n=this.constructor,i=new n(this.name,t,e);return i.createInterpolant=this.createInterpolant,i}}gi.prototype.ValueTypeName="";gi.prototype.TimeBufferType=Float32Array;gi.prototype.ValueBufferType=Float32Array;gi.prototype.DefaultInterpolation=Vu;class Os extends gi{constructor(t,e,n){super(t,e,n)}}Os.prototype.ValueTypeName="bool";Os.prototype.ValueBufferType=Array;Os.prototype.DefaultInterpolation=Wa;Os.prototype.InterpolantFactoryMethodLinear=void 0;Os.prototype.InterpolantFactoryMethodSmooth=void 0;class Vp extends gi{constructor(t,e,n,i){super(t,e,n,i)}}Vp.prototype.ValueTypeName="color";class Qa extends gi{constructor(t,e,n,i){super(t,e,n,i)}}Qa.prototype.ValueTypeName="number";class sx extends Ml{constructor(t,e,n,i){super(t,e,n,i)}interpolate_(t,e,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(n-e)/(i-e);let c=t*a;for(let u=c+a;c!==u;c+=4)cn.slerpFlat(s,0,o,c-a,o,c,l);return s}}class Sl extends gi{constructor(t,e,n,i){super(t,e,n,i)}InterpolantFactoryMethodLinear(t){return new sx(this.times,this.values,this.getValueSize(),t)}}Sl.prototype.ValueTypeName="quaternion";Sl.prototype.InterpolantFactoryMethodSmooth=void 0;class Us extends gi{constructor(t,e,n){super(t,e,n)}}Us.prototype.ValueTypeName="string";Us.prototype.ValueBufferType=Array;Us.prototype.DefaultInterpolation=Wa;Us.prototype.InterpolantFactoryMethodLinear=void 0;Us.prototype.InterpolantFactoryMethodSmooth=void 0;class tl extends gi{constructor(t,e,n,i){super(t,e,n,i)}}tl.prototype.ValueTypeName="vector";class el{constructor(t="",e=-1,n=[],i=hh){this.name=t,this.tracks=n,this.duration=e,this.blendMode=i,this.uuid=ri(),this.userData={},this.duration<0&&this.resetDuration()}static parse(t){const e=[],n=t.tracks,i=1/(t.fps||1);for(let o=0,a=n.length;o!==a;++o)e.push(Dw(n[o]).scale(i));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s.userData=JSON.parse(t.userData||"{}"),s}static toJSON(t){const e=[],n=t.tracks,i={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode,userData:JSON.stringify(t.userData)};for(let s=0,o=n.length;s!==o;++s)e.push(gi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(t,e,n,i){const s=e.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=nx(l);l=Ef(l,1,u),c=Ef(c,1,u),!i&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Qa(".morphTargetInfluences["+e[a].name+"]",l,c).scale(1/n))}return new this(t,-1,o)}static findByName(t,e){let n=t;if(!Array.isArray(t)){const i=t;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===e)return n[i];return null}static CreateClipsFromMorphTargetSequences(t,e,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=t.length;a<l;a++){const c=t[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let d=i[h];d||(i[h]=d=[]),d.push(c)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],e,n));return o}static parseAnimation(t,e){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(h,d,f,p,y){if(f.length!==0){const m=[],g=[];zp(f,m,g,p),m.length!==0&&y.push(new h(d,m,g))}},i=[],s=t.name||"default",o=t.fps||30,a=t.blendMode;let l=t.length||-1;const c=t.hierarchy||[];for(let h=0;h<c.length;h++){const d=c[h].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let y=0;y<d[p].morphTargets.length;y++)f[d[p].morphTargets[y]]=-1;for(const y in f){const m=[],g=[];for(let w=0;w!==d[p].morphTargets.length;++w){const b=d[p];m.push(b.time),g.push(b.morphTarget===y?1:0)}i.push(new Qa(".morphTargetInfluence["+y+"]",m,g))}l=f.length*o}else{const f=".bones["+e[h].name+"]";n(tl,f+".position",d,"pos",i),n(Sl,f+".quaternion",d,"rot",i),n(tl,f+".scale",d,"scl",i)}}return i.length===0?null:new this(s,l,i,a)}resetDuration(){const t=this.tracks;let e=0;for(let n=0,i=t.length;n!==i;++n){const s=this.tracks[n];e=Math.max(e,s.times[s.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let n=0;n<this.tracks.length;n++)t.push(this.tracks[n].clone());const e=new this.constructor(this.name,this.duration,t,this.blendMode);return e.userData=JSON.parse(JSON.stringify(this.userData)),e}toJSON(){return this.constructor.toJSON(this)}}function Lw(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Qa;case"vector":case"vector2":case"vector3":case"vector4":return tl;case"color":return Vp;case"quaternion":return Sl;case"bool":case"boolean":return Os;case"string":return Us}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function Dw(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=Lw(r.type);if(r.times===void 0){const e=[],n=[];zp(r.keys,e,n,"value"),r.times=e,r.values=n}return t.parse!==void 0?t.parse(r):new t(r.name,r.times,r.values,r.interpolation)}const Hi={enabled:!1,files:{},add:function(r,t){this.enabled!==!1&&(this.files[r]=t)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class Hp{constructor(t,e,n){const i=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.abortController=new AbortController,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=c.length;h<d;h+=2){const f=c[h],p=c[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const ox=new Hp;class Yn{constructor(t){this.manager=t!==void 0?t:ox,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const n=this;return new Promise(function(i,s){n.load(t,i,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}abort(){return this}}Yn.DEFAULT_MATERIAL_NAME="__DEFAULT";const nr={};class Ow extends Error{constructor(t,e){super(t),this.response=e}}class _r extends Yn{constructor(t){super(t),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=Hi.get("file:".concat(t));if(s!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(s),this.manager.itemEnd(t)},0),s;if(nr[t]!==void 0){nr[t].push({onLoad:e,onProgress:n,onError:i});return}nr[t]=[],nr[t].push({onLoad:e,onProgress:n,onError:i});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=nr[t],h=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let y=0;const m=new ReadableStream({start(g){w();function w(){h.read().then(({done:b,value:M})=>{if(b)g.close();else{y+=M.byteLength;const A=new ProgressEvent("progress",{lengthComputable:p,loaded:y,total:f});for(let S=0,E=u.length;S<E;S++){const x=u[S];x.onProgress&&x.onProgress(A)}g.enqueue(M),w()}},b=>{g.error(b)})}}});return new Response(m)}else throw new Ow('fetch for "'.concat(c.url,'" responded with ').concat(c.status,": ").concat(c.statusText),c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a==="")return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),d=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{Hi.add("file:".concat(t),c);const u=nr[t];delete nr[t];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onLoad&&f.onLoad(c)}}).catch(c=>{const u=nr[t];if(u===void 0)throw this.manager.itemError(t),c;delete nr[t];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(c)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}class Uw extends Yn{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new _r(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e=[];for(let n=0;n<t.length;n++){const i=el.parse(t[n]);e.push(i)}return e}}class Fw extends Yn{constructor(t){super(t)}load(t,e,n,i){const s=this,o=[],a=new bh,l=new _r(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(s.withCredentials);let c=0;function u(h){l.load(t[h],function(d){const f=s.parse(d,!0);o[h]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},c+=1,c===6&&(f.mipmapCount===1&&(a.minFilter=nn),a.image=o,a.format=f.format,a.needsUpdate=!0,e&&e(a))},n,i)}if(Array.isArray(t))for(let h=0,d=t.length;h<d;++h)u(h);else l.load(t,function(h){const d=s.parse(h,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let y=0;y<d.mipmapCount;y++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+y]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=nn),a.format=d.format,a.needsUpdate=!0,e&&e(a)},n,i);return a}}const ro=new WeakMap;class nl extends Yn{constructor(t){super(t)}load(t,e,n,i){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=Hi.get("image:".concat(t));if(o!==void 0){if(o.complete===!0)s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0);else{let h=ro.get(o);h===void 0&&(h=[],ro.set(o,h)),h.push({onLoad:e,onError:i})}return o}const a=qa("img");function l(){u(),e&&e(this);const h=ro.get(this)||[];for(let d=0;d<h.length;d++){const f=h[d];f.onLoad&&f.onLoad(this)}ro.delete(this),s.manager.itemEnd(t)}function c(h){u(),i&&i(h),Hi.remove("image:".concat(t));const d=ro.get(this)||[];for(let f=0;f<d.length;f++){const p=d[f];p.onError&&p.onError(h)}ro.delete(this),s.manager.itemError(t),s.manager.itemEnd(t)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),Hi.add("image:".concat(t),a),s.manager.itemStart(t),a.src=t,a}}class Bw extends Yn{constructor(t){super(t)}load(t,e,n,i){const s=new yl;s.colorSpace=Vn;const o=new nl(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function l(c){o.load(t[c],function(u){s.images[c]=u,a++,a===6&&(s.needsUpdate=!0,e&&e(s))},void 0,i)}for(let c=0;c<t.length;++c)l(c);return s}}class zw extends Yn{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new Wi,a=new _r(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(t,function(l){let c;try{c=s.parse(l)}catch(u){if(i!==void 0)i(u);else{console.error(u);return}}c.image!==void 0?o.image=c.image:c.data!==void 0&&(o.image.width=c.width,o.image.height=c.height,o.image.data=c.data),o.wrapS=c.wrapS!==void 0?c.wrapS:hi,o.wrapT=c.wrapT!==void 0?c.wrapT:hi,o.magFilter=c.magFilter!==void 0?c.magFilter:nn,o.minFilter=c.minFilter!==void 0?c.minFilter:nn,o.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.colorSpace!==void 0&&(o.colorSpace=c.colorSpace),c.flipY!==void 0&&(o.flipY=c.flipY),c.format!==void 0&&(o.format=c.format),c.type!==void 0&&(o.type=c.type),c.mipmaps!==void 0&&(o.mipmaps=c.mipmaps,o.minFilter=Vi),c.mipmapCount===1&&(o.minFilter=nn),c.generateMipmaps!==void 0&&(o.generateMipmaps=c.generateMipmaps),o.needsUpdate=!0,e&&e(o,c)},n,i),o}}class kw extends Yn{constructor(t){super(t)}load(t,e,n,i){const s=new Xe,o=new nl(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){s.image=a,s.needsUpdate=!0,e!==void 0&&e(s)},n,i),s}}class Wr extends de{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new At(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class ax extends Wr{constructor(t,e,n){super(t,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(de.DEFAULT_UP),this.updateMatrix(),this.groundColor=new At(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Rd=new jt,Fg=new L,Bg=new L;class Gp{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new at(512,512),this.mapType=Ci,this.map=null,this.mapPass=null,this.matrix=new jt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new $o,this._frameExtents=new at(1,1),this._viewportCount=1,this._viewports=[new _e(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,n=this.matrix;Fg.setFromMatrixPosition(t.matrixWorld),e.position.copy(Fg),Bg.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(Bg),e.updateMatrixWorld(),Rd.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rd,e.coordinateSystem,e.reversedDepth),e.reversedDepth?n.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Rd)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.autoUpdate=t.autoUpdate,this.needsUpdate=t.needsUpdate,this.normalBias=t.normalBias,this.blurSamples=t.blurSamples,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class Vw extends Gp{constructor(){super(new Fe(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(t){const e=this.camera,n=Oo*2*t.angle*this.focus,i=this.mapSize.width/this.mapSize.height*this.aspect,s=t.distance||e.far;(n!==e.fov||i!==e.aspect||s!==e.far)&&(e.fov=n,e.aspect=i,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class lx extends Wr{constructor(t,e,n=0,i=Math.PI/3,s=0,o=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(de.DEFAULT_UP),this.updateMatrix(),this.target=new de,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new Vw}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const zg=new jt,ua=new L,Id=new L;class Hw extends Gp{constructor(){super(new Fe(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new at(4,2),this._viewportCount=6,this._viewports=[new _e(2,1,1,1),new _e(0,1,1,1),new _e(3,1,1,1),new _e(1,1,1,1),new _e(3,0,1,1),new _e(1,0,1,1)],this._cubeDirections=[new L(1,0,0),new L(-1,0,0),new L(0,0,1),new L(0,0,-1),new L(0,1,0),new L(0,-1,0)],this._cubeUps=[new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,1,0),new L(0,0,1),new L(0,0,-1)]}updateMatrices(t,e=0){const n=this.camera,i=this.matrix,s=t.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),ua.setFromMatrixPosition(t.matrixWorld),n.position.copy(ua),Id.copy(n.position),Id.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(Id),n.updateMatrixWorld(),i.makeTranslation(-ua.x,-ua.y,-ua.z),zg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(zg,n.coordinateSystem,n.reversedDepth)}}class cx extends Wr{constructor(t,e,n=0,i=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Hw}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class ur extends mh{constructor(t=-1,e=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-t,o=n+t,a=i+e,l=i-e;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}class Gw extends Gp{constructor(){super(new ur(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class ux extends Wr{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(de.DEFAULT_UP),this.updateMatrix(),this.target=new de,this.shadow=new Gw}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class hx extends Wr{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class dx extends Wr{constructor(t,e,n=10,i=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class fx{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new L)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*i),e.addScaledVector(o[2],.488603*s),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],1.092548*(n*i)),e.addScaledVector(o[5],1.092548*(i*s)),e.addScaledVector(o[6],.315392*(3*s*s-1)),e.addScaledVector(o[7],1.092548*(n*s)),e.addScaledVector(o[8],.546274*(n*n-i*i)),e}getIrradianceAt(t,e){const n=t.x,i=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],2*.511664*i),e.addScaledVector(o[2],2*.511664*s),e.addScaledVector(o[3],2*.511664*n),e.addScaledVector(o[4],2*.429043*n*i),e.addScaledVector(o[5],2*.429043*i*s),e.addScaledVector(o[6],.743125*s*s-.247708),e.addScaledVector(o[7],2*.429043*n*s),e.addScaledVector(o[8],.429043*(n*n-i*i)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(t,e+i*3);return this}toArray(t=[],e=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(t,e+i*3);return t}static getBasisAt(t,e){const n=t.x,i=t.y,s=t.z;e[0]=.282095,e[1]=.488603*i,e[2]=.488603*s,e[3]=.488603*n,e[4]=1.092548*n*i,e[5]=1.092548*i*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*n*s,e[8]=.546274*(n*n-i*i)}}class px extends Wr{constructor(t=new fx,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Oh extends Yn{constructor(t){super(t),this.textures={}}load(t,e,n,i){const s=this,o=new _r(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e=this.textures;function n(s){return e[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),e[s]}const i=this.createMaterialFromType(t.type);if(t.uuid!==void 0&&(i.uuid=t.uuid),t.name!==void 0&&(i.name=t.name),t.color!==void 0&&i.color!==void 0&&i.color.setHex(t.color),t.roughness!==void 0&&(i.roughness=t.roughness),t.metalness!==void 0&&(i.metalness=t.metalness),t.sheen!==void 0&&(i.sheen=t.sheen),t.sheenColor!==void 0&&(i.sheenColor=new At().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(i.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(t.emissive),t.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(t.specular),t.specularIntensity!==void 0&&(i.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(i.shininess=t.shininess),t.clearcoat!==void 0&&(i.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(i.dispersion=t.dispersion),t.iridescence!==void 0&&(i.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(i.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(i.transmission=t.transmission),t.thickness!==void 0&&(i.thickness=t.thickness),t.attenuationDistance!==void 0&&(i.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(i.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(i.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(i.fog=t.fog),t.flatShading!==void 0&&(i.flatShading=t.flatShading),t.blending!==void 0&&(i.blending=t.blending),t.combine!==void 0&&(i.combine=t.combine),t.side!==void 0&&(i.side=t.side),t.shadowSide!==void 0&&(i.shadowSide=t.shadowSide),t.opacity!==void 0&&(i.opacity=t.opacity),t.transparent!==void 0&&(i.transparent=t.transparent),t.alphaTest!==void 0&&(i.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(i.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(i.depthFunc=t.depthFunc),t.depthTest!==void 0&&(i.depthTest=t.depthTest),t.depthWrite!==void 0&&(i.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(i.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(i.blendSrc=t.blendSrc),t.blendDst!==void 0&&(i.blendDst=t.blendDst),t.blendEquation!==void 0&&(i.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(i.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(i.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(i.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&i.blendColor!==void 0&&i.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(i.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(i.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(i.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(i.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(i.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(i.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(i.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(i.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(i.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(i.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(i.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(i.rotation=t.rotation),t.linewidth!==void 0&&(i.linewidth=t.linewidth),t.dashSize!==void 0&&(i.dashSize=t.dashSize),t.gapSize!==void 0&&(i.gapSize=t.gapSize),t.scale!==void 0&&(i.scale=t.scale),t.polygonOffset!==void 0&&(i.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(i.dithering=t.dithering),t.alphaToCoverage!==void 0&&(i.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(i.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(i.visible=t.visible),t.toneMapped!==void 0&&(i.toneMapped=t.toneMapped),t.userData!==void 0&&(i.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?i.vertexColors=t.vertexColors>0:i.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const s in t.uniforms){const o=t.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new At().setHex(o.value);break;case"v2":i.uniforms[s].value=new at().fromArray(o.value);break;case"v3":i.uniforms[s].value=new L().fromArray(o.value);break;case"v4":i.uniforms[s].value=new _e().fromArray(o.value);break;case"m3":i.uniforms[s].value=new le().fromArray(o.value);break;case"m4":i.uniforms[s].value=new jt().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(t.defines!==void 0&&(i.defines=t.defines),t.vertexShader!==void 0&&(i.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(i.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(i.glslVersion=t.glslVersion),t.extensions!==void 0)for(const s in t.extensions)i.extensions[s]=t.extensions[s];if(t.lights!==void 0&&(i.lights=t.lights),t.clipping!==void 0&&(i.clipping=t.clipping),t.size!==void 0&&(i.size=t.size),t.sizeAttenuation!==void 0&&(i.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(i.map=n(t.map)),t.matcap!==void 0&&(i.matcap=n(t.matcap)),t.alphaMap!==void 0&&(i.alphaMap=n(t.alphaMap)),t.bumpMap!==void 0&&(i.bumpMap=n(t.bumpMap)),t.bumpScale!==void 0&&(i.bumpScale=t.bumpScale),t.normalMap!==void 0&&(i.normalMap=n(t.normalMap)),t.normalMapType!==void 0&&(i.normalMapType=t.normalMapType),t.normalScale!==void 0){let s=t.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new at().fromArray(s)}return t.displacementMap!==void 0&&(i.displacementMap=n(t.displacementMap)),t.displacementScale!==void 0&&(i.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(i.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(i.roughnessMap=n(t.roughnessMap)),t.metalnessMap!==void 0&&(i.metalnessMap=n(t.metalnessMap)),t.emissiveMap!==void 0&&(i.emissiveMap=n(t.emissiveMap)),t.emissiveIntensity!==void 0&&(i.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(i.specularMap=n(t.specularMap)),t.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(t.specularIntensityMap)),t.specularColorMap!==void 0&&(i.specularColorMap=n(t.specularColorMap)),t.envMap!==void 0&&(i.envMap=n(t.envMap)),t.envMapRotation!==void 0&&i.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(i.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(i.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(i.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(i.lightMap=n(t.lightMap)),t.lightMapIntensity!==void 0&&(i.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(i.aoMap=n(t.aoMap)),t.aoMapIntensity!==void 0&&(i.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(i.gradientMap=n(t.gradientMap)),t.clearcoatMap!==void 0&&(i.clearcoatMap=n(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new at().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(i.iridescenceMap=n(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(i.transmissionMap=n(t.transmissionMap)),t.thicknessMap!==void 0&&(i.thicknessMap=n(t.thicknessMap)),t.anisotropyMap!==void 0&&(i.anisotropyMap=n(t.anisotropyMap)),t.sheenColorMap!==void 0&&(i.sheenColorMap=n(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(t.sheenRoughnessMap)),i}setTextures(t){return this.textures=t,this}createMaterialFromType(t){return Oh.createMaterialFromType(t)}static createMaterialFromType(t){const e={ShadowMaterial:$v,SpriteMaterial:Tp,RawShaderMaterial:Yv,ShaderMaterial:$n,PointsMaterial:Ap,MeshPhysicalMaterial:qv,MeshStandardMaterial:Up,MeshPhongMaterial:jv,MeshToonMaterial:Zv,MeshNormalMaterial:Jv,MeshLambertMaterial:Kv,MeshDepthMaterial:Fp,MeshDistanceMaterial:Bp,MeshBasicMaterial:vr,MeshMatcapMaterial:Qv,LineDashedMaterial:tx,LineBasicMaterial:Ln,Material:fn};return new e[t]}}class Af{static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class mx extends ce{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class gx extends Yn{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new _r(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(l){i?i(l):console.error(l),s.manager.itemError(t)}},n,i)}parse(t){const e={},n={};function i(f,p){if(e[p]!==void 0)return e[p];const m=f.interleavedBuffers[p],g=s(f,m.buffer),w=xo(m.type,g),b=new _l(w,m.stride);return b.uuid=m.uuid,e[p]=b,b}function s(f,p){if(n[p]!==void 0)return n[p];const m=f.arrayBuffers[p],g=new Uint32Array(m).buffer;return n[p]=g,g}const o=t.isInstancedBufferGeometry?new mx:new ce,a=t.data.index;if(a!==void 0){const f=xo(a.type,a.array);o.setIndex(new Te(f,1))}const l=t.data.attributes;for(const f in l){const p=l[f];let y;if(p.isInterleavedBufferAttribute){const m=i(t.data,p.data);y=new yr(m,p.itemSize,p.offset,p.normalized)}else{const m=xo(p.type,p.array),g=p.isInstancedBufferAttribute?Fo:Te;y=new g(m,p.itemSize,p.normalized)}p.name!==void 0&&(y.name=p.name),p.usage!==void 0&&y.setUsage(p.usage),o.setAttribute(f,y)}const c=t.data.morphAttributes;if(c)for(const f in c){const p=c[f],y=[];for(let m=0,g=p.length;m<g;m++){const w=p[m];let b;if(w.isInterleavedBufferAttribute){const M=i(t.data,w.data);b=new yr(M,w.itemSize,w.offset,w.normalized)}else{const M=xo(w.type,w.array);b=new Te(M,w.itemSize,w.normalized)}w.name!==void 0&&(b.name=w.name),y.push(b)}o.morphAttributes[f]=y}t.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const h=t.data.groups||t.data.drawcalls||t.data.offsets;if(h!==void 0)for(let f=0,p=h.length;f!==p;++f){const y=h[f];o.addGroup(y.start,y.count,y.materialIndex)}const d=t.data.boundingSphere;return d!==void 0&&(o.boundingSphere=new un().fromJSON(d)),t.name&&(o.name=t.name),t.userData&&(o.userData=t.userData),o}}class Ww extends Yn{constructor(t){super(t)}load(t,e,n,i){const s=this,o=this.path===""?Af.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||o;const a=new _r(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(l){let c=null;try{c=JSON.parse(l)}catch(h){i!==void 0&&i(h),console.error("THREE:ObjectLoader: Can't parse "+t+".",h.message);return}const u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}s.parse(c,e)},n,i)}async loadAsync(t,e){const n=this,i=this.path===""?Af.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||i;const s=new _r(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(t,e),a=JSON.parse(o),l=a.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await n.parseAsync(a)}parse(t,e){const n=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,i),o=this.parseImages(t.images,function(){e!==void 0&&e(c)}),a=this.parseTextures(t.textures,o),l=this.parseMaterials(t.materials,a),c=this.parseObject(t.object,s,l,a,n),u=this.parseSkeletons(t.skeletons,c);if(this.bindSkeletons(c,u),this.bindLightTargets(c),e!==void 0){let h=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){h=!0;break}h===!1&&e(c)}return c}async parseAsync(t){const e=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),i=this.parseGeometries(t.geometries,n),s=await this.parseImagesAsync(t.images),o=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,o),l=this.parseObject(t.object,i,a,o,e),c=this.parseSkeletons(t.skeletons,l);return this.bindSkeletons(l,c),this.bindLightTargets(l),l}parseShapes(t){const e={};if(t!==void 0)for(let n=0,i=t.length;n<i;n++){const s=new Ss().fromJSON(t[n]);e[s.uuid]=s}return e}parseSkeletons(t,e){const n={},i={};if(e.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=new vh().fromJSON(t[s],i);n[a.uuid]=a}return n}parseGeometries(t,e){const n={};if(t!==void 0){const i=new gx;for(let s=0,o=t.length;s<o;s++){let a;const l=t[s];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(l);break;default:l.type in Ug?a=Ug[l.type].fromJSON(l,e):console.warn('THREE.ObjectLoader: Unsupported geometry type "'.concat(l.type,'"'))}a.uuid=l.uuid,l.name!==void 0&&(a.name=l.name),l.userData!==void 0&&(a.userData=l.userData),n[l.uuid]=a}}return n}parseMaterials(t,e){const n={},i={};if(t!==void 0){const s=new Oh;s.setTextures(e);for(let o=0,a=t.length;o<a;o++){const l=t[o];n[l.uuid]===void 0&&(n[l.uuid]=s.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(t){const e={};if(t!==void 0)for(let n=0;n<t.length;n++){const i=t[n],s=el.parse(i);e[s.uuid]=s}return e}parseImages(t,e){const n=this,i={};let s;function o(l){return n.manager.itemStart(l),s.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}function a(l){if(typeof l=="string"){const c=l,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return o(u)}else return l.data?{data:xo(l.type,l.data),width:l.width,height:l.height}:null}if(t!==void 0&&t.length>0){const l=new Hp(e);s=new nl(l),s.setCrossOrigin(this.crossOrigin);for(let c=0,u=t.length;c<u;c++){const h=t[c],d=h.url;if(Array.isArray(d)){const f=[];for(let p=0,y=d.length;p<y;p++){const m=d[p],g=a(m);g!==null&&(g instanceof HTMLImageElement?f.push(g):f.push(new Wi(g.data,g.width,g.height)))}i[h.uuid]=new Or(f)}else{const f=a(h.url);i[h.uuid]=new Or(f)}}}return i}async parseImagesAsync(t){const e=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:e.resourcePath+a;return await i.loadAsync(l)}else return o.data?{data:xo(o.type,o.data),width:o.width,height:o.height}:null}if(t!==void 0&&t.length>0){i=new nl(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=t.length;o<a;o++){const l=t[o],c=l.url;if(Array.isArray(c)){const u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h],p=await s(f);p!==null&&(p instanceof HTMLImageElement?u.push(p):u.push(new Wi(p.data,p.width,p.height)))}n[l.uuid]=new Or(u)}else{const u=await s(l.url);n[l.uuid]=new Or(u)}}}return n}parseTextures(t,e){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=t[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),e[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const l=e[a.image],c=l.data;let u;Array.isArray(c)?(u=new yl,c.length===6&&(u.needsUpdate=!0)):(c&&c.data?u=new Wi:u=new Xe,c&&(u.needsUpdate=!0)),u.source=l,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,Xw)),a.channel!==void 0&&(u.channel=a.channel),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],kg),u.wrapT=n(a.wrap[1],kg)),a.format!==void 0&&(u.format=a.format),a.internalFormat!==void 0&&(u.internalFormat=a.internalFormat),a.type!==void 0&&(u.type=a.type),a.colorSpace!==void 0&&(u.colorSpace=a.colorSpace),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,Vg)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,Vg)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.generateMipmaps!==void 0&&(u.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(u.compareFunction=a.compareFunction),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(t,e,n,i,s){let o;function a(d){return e[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),e[d]}function l(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,y=d.length;p<y;p++){const m=d[p];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),f.push(n[m])}return f}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function c(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let u,h;switch(t.type){case"Scene":o=new _h,t.background!==void 0&&(Number.isInteger(t.background)?o.background=new At(t.background):o.background=c(t.background)),t.environment!==void 0&&(o.environment=c(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?o.fog=new yh(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(o.fog=new gh(t.fog.color,t.fog.density)),t.fog.name!==""&&(o.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(o.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(o.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&o.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":o=new Fe(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(o.focus=t.focus),t.zoom!==void 0&&(o.zoom=t.zoom),t.filmGauge!==void 0&&(o.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(o.filmOffset=t.filmOffset),t.view!==void 0&&(o.view=Object.assign({},t.view));break;case"OrthographicCamera":o=new ur(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(o.zoom=t.zoom),t.view!==void 0&&(o.view=Object.assign({},t.view));break;case"AmbientLight":o=new hx(t.color,t.intensity);break;case"DirectionalLight":o=new ux(t.color,t.intensity),o.target=t.target||"";break;case"PointLight":o=new cx(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":o=new dx(t.color,t.intensity,t.width,t.height);break;case"SpotLight":o=new lx(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),o.target=t.target||"";break;case"HemisphereLight":o=new ax(t.color,t.groundColor,t.intensity);break;case"LightProbe":o=new px().fromJSON(t);break;case"SkinnedMesh":u=a(t.geometry),h=l(t.material),o=new Rv(u,h),t.bindMode!==void 0&&(o.bindMode=t.bindMode),t.bindMatrix!==void 0&&o.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(o.skeleton=t.skeleton);break;case"Mesh":u=a(t.geometry),h=l(t.material),o=new Ue(u,h);break;case"InstancedMesh":u=a(t.geometry),h=l(t.material);const d=t.count,f=t.instanceMatrix,p=t.instanceColor;o=new Iv(u,h,d),o.instanceMatrix=new Fo(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new Fo(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":u=a(t.geometry),h=l(t.material),o=new Nv(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,h),o.geometry=u,o.perObjectFrustumCulled=t.perObjectFrustumCulled,o.sortObjects=t.sortObjects,o._drawRanges=t.drawRanges,o._reservedRanges=t.reservedRanges,o._geometryInfo=t.geometryInfo.map(y=>{let m=null,g=null;return y.boundingBox!==void 0&&(m=new bn().fromJSON(y.boundingBox)),y.boundingSphere!==void 0&&(g=new un().fromJSON(y.boundingSphere)),{...y,boundingBox:m,boundingSphere:g}}),o._instanceInfo=t.instanceInfo,o._availableInstanceIds=t._availableInstanceIds,o._availableGeometryIds=t._availableGeometryIds,o._nextIndexStart=t.nextIndexStart,o._nextVertexStart=t.nextVertexStart,o._geometryCount=t.geometryCount,o._maxInstanceCount=t.maxInstanceCount,o._maxVertexCount=t.maxVertexCount,o._maxIndexCount=t.maxIndexCount,o._geometryInitialized=t.geometryInitialized,o._matricesTexture=c(t.matricesTexture.uuid),o._indirectTexture=c(t.indirectTexture.uuid),t.colorsTexture!==void 0&&(o._colorsTexture=c(t.colorsTexture.uuid)),t.boundingSphere!==void 0&&(o.boundingSphere=new un().fromJSON(t.boundingSphere)),t.boundingBox!==void 0&&(o.boundingBox=new bn().fromJSON(t.boundingBox));break;case"LOD":o=new Cv;break;case"Line":o=new zr(a(t.geometry),l(t.material));break;case"LineLoop":o=new Pv(a(t.geometry),l(t.material));break;case"LineSegments":o=new qi(a(t.geometry),l(t.material));break;case"PointCloud":case"Points":o=new Lv(a(t.geometry),l(t.material));break;case"Sprite":o=new Av(l(t.material));break;case"Group":o=new bo;break;case"Bone":o=new Ep;break;default:o=new de}if(o.uuid=t.uuid,t.name!==void 0&&(o.name=t.name),t.matrix!==void 0?(o.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=t.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(t.position!==void 0&&o.position.fromArray(t.position),t.rotation!==void 0&&o.rotation.fromArray(t.rotation),t.quaternion!==void 0&&o.quaternion.fromArray(t.quaternion),t.scale!==void 0&&o.scale.fromArray(t.scale)),t.up!==void 0&&o.up.fromArray(t.up),t.castShadow!==void 0&&(o.castShadow=t.castShadow),t.receiveShadow!==void 0&&(o.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(o.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(o.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(o.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(o.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(o.visible=t.visible),t.frustumCulled!==void 0&&(o.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(o.renderOrder=t.renderOrder),t.userData!==void 0&&(o.userData=t.userData),t.layers!==void 0&&(o.layers.mask=t.layers),t.children!==void 0){const d=t.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],e,n,i,s))}if(t.animations!==void 0){const d=t.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(s[p])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(o.autoUpdate=t.autoUpdate);const d=t.levels;for(let f=0;f<d.length;f++){const p=d[f],y=o.getObjectByProperty("uuid",p.object);y!==void 0&&o.addLevel(y,p.distance,p.hysteresis)}}return o}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=e[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const n=e.target,i=t.getObjectByProperty("uuid",n);i!==void 0?e.target=i:e.target=new de}})}}const Xw={UVMapping:rh,CubeReflectionMapping:mr,CubeRefractionMapping:Br,EquirectangularReflectionMapping:ka,EquirectangularRefractionMapping:Va,CubeUVReflectionMapping:Xo},kg={RepeatWrapping:Ha,ClampToEdgeWrapping:hi,MirroredRepeatWrapping:Ga},Vg={NearestFilter:hn,NearestMipmapNearestFilter:hp,NearestMipmapLinearFilter:vo,LinearFilter:nn,LinearMipmapNearestFilter:Ca,LinearMipmapLinearFilter:Vi},Nd=new WeakMap;class $w extends Yn{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(t){return this.options=t,this}load(t,e,n,i){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=Hi.get("image-bitmap:".concat(t));if(o!==void 0){if(s.manager.itemStart(t),o.then){o.then(c=>{if(Nd.has(o)===!0)i&&i(Nd.get(o)),s.manager.itemError(t),s.manager.itemEnd(t);else return e&&e(c),s.manager.itemEnd(t),c});return}return setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,a.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const l=fetch(t,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return Hi.add("image-bitmap:".concat(t),c),e&&e(c),s.manager.itemEnd(t),c}).catch(function(c){i&&i(c),Nd.set(l,c),Hi.remove("image-bitmap:".concat(t)),s.manager.itemError(t),s.manager.itemEnd(t)});Hi.add("image-bitmap:".concat(t),l),s.manager.itemStart(t)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}let _c;class Wp{static getContext(){return _c===void 0&&(_c=new(window.AudioContext||window.webkitAudioContext)),_c}static setContext(t){_c=t}}class Yw extends Yn{constructor(t){super(t)}load(t,e,n,i){const s=this,o=new _r(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(l){try{const c=l.slice(0);Wp.getContext().decodeAudioData(c,function(h){e(h)}).catch(a)}catch(c){a(c)}},n,i);function a(l){i?i(l):console.error(l),s.manager.itemError(t)}}}const Hg=new jt,Gg=new jt,Qr=new jt;class qw{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Fe,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Fe,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,Qr.copy(t.projectionMatrix);const i=e.eyeSep/2,s=i*e.near/e.focus,o=e.near*Math.tan(Ms*e.fov*.5)/e.zoom;let a,l;Gg.elements[12]=-i,Hg.elements[12]=i,a=-o*e.aspect+s,l=o*e.aspect+s,Qr.elements[0]=2*e.near/(l-a),Qr.elements[8]=(l+a)/(l-a),this.cameraL.projectionMatrix.copy(Qr),a=-o*e.aspect-s,l=o*e.aspect-s,Qr.elements[0]=2*e.near/(l-a),Qr.elements[8]=(l+a)/(l-a),this.cameraR.projectionMatrix.copy(Qr)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(Gg),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(Hg)}}class yx extends Fe{constructor(t=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=t}}class Xp{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=performance.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=performance.now();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}const ts=new L,Pd=new cn,jw=new L,es=new L,ns=new L;class Zw extends de{constructor(){super(),this.type="AudioListener",this.context=Wp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Xp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(ts,Pd,jw),es.set(0,0,-1).applyQuaternion(Pd),ns.set(0,1,0).applyQuaternion(Pd),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(ts.x,n),e.positionY.linearRampToValueAtTime(ts.y,n),e.positionZ.linearRampToValueAtTime(ts.z,n),e.forwardX.linearRampToValueAtTime(es.x,n),e.forwardY.linearRampToValueAtTime(es.y,n),e.forwardZ.linearRampToValueAtTime(es.z,n),e.upX.linearRampToValueAtTime(ns.x,n),e.upY.linearRampToValueAtTime(ns.y,n),e.upZ.linearRampToValueAtTime(ns.z,n)}else e.setPosition(ts.x,ts.y,ts.z),e.setOrientation(es.x,es.y,es.z,ns.x,ns.y,ns.z)}}class _x extends de{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(t=0){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(this.context.currentTime+t),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1,this._progress=0}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}copy(t,e){return super.copy(t,e),t.sourceType!=="buffer"?(console.warn("THREE.Audio: Audio source type cannot be copied."),this):(this.autoplay=t.autoplay,this.buffer=t.buffer,this.detune=t.detune,this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this.offset=t.offset,this.duration=t.duration,this.playbackRate=t.playbackRate,this.hasPlaybackControl=t.hasPlaybackControl,this.sourceType=t.sourceType,this.filters=t.filters.slice(),this)}clone(t){return new this.constructor(this.listener).copy(this,t)}}const is=new L,Wg=new cn,Jw=new L,rs=new L;class Kw extends _x{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){return super.connect(),this.panner.connect(this.gain),this}disconnect(){return super.disconnect(),this.panner.disconnect(this.gain),this}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,n){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=n,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(is,Wg,Jw),rs.set(0,0,1).applyQuaternion(Wg);const e=this.panner;if(e.positionX){const n=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(is.x,n),e.positionY.linearRampToValueAtTime(is.y,n),e.positionZ.linearRampToValueAtTime(is.z,n),e.orientationX.linearRampToValueAtTime(rs.x,n),e.orientationY.linearRampToValueAtTime(rs.y,n),e.orientationZ.linearRampToValueAtTime(rs.z,n)}else e.setPosition(is.x,is.y,is.z),e.setOrientation(rs.x,rs.y,rs.z)}}class Qw{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}class vx{constructor(t,e,n){this.binding=t,this.valueSize=n;let i,s,o;switch(e){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const n=this.buffer,i=this.valueSize,s=t*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=e}else{o+=e;const a=e/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(t){const e=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,i,0,t,n),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,n=this.buffer,i=t*e+e,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const l=e*this._origIndex;this._mixBufferRegion(n,i,l,1-s,e)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*e,1,e);for(let l=e,c=e+e;l!==c;++l)if(n[l]!==n[l+e]){a.setValue(n,i);break}}saveOriginalState(){const t=this.binding,e=this.buffer,n=this.valueSize,i=n*this._origIndex;t.getValue(e,i);for(let s=n,o=i;s!==o;++s)e[s]=e[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]}_select(t,e,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)t[e+o]=t[n+o]}_slerp(t,e,n,i){cn.slerpFlat(t,e,t,e,t,n,i)}_slerpAdditive(t,e,n,i,s){const o=this._workIndex*s;cn.multiplyQuaternionsFlat(t,o,t,e,t,n),cn.slerpFlat(t,e,t,e,t,o,i)}_lerp(t,e,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const l=e+a;t[l]=t[l]*o+t[n+a]*i}}_lerpAdditive(t,e,n,i,s){for(let o=0;o!==s;++o){const a=e+o;t[a]=t[a]+t[n+o]*i}}}const $p="\\[\\]\\.:\\/",tT=new RegExp("["+$p+"]","g"),Yp="[^"+$p+"]",eT="[^"+$p.replace("\\.","")+"]",nT=/((?:WC+[\/:])*)/.source.replace("WC",Yp),iT=/(WCOD+)?/.source.replace("WCOD",eT),rT=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Yp),sT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Yp),oT=new RegExp("^"+nT+iT+rT+sT+"$"),aT=["material","materials","bones","map"];class lT{constructor(t,e,n){const i=n||be.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,i)}getValue(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(t,e)}setValue(t,e){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}class be{constructor(t,e,n){this.path=e,this.parsedPath=n||be.parseTrackName(e),this.node=be.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,n){return t&&t.isAnimationObjectGroup?new be.Composite(t,e,n):new be(t,e,n)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(tT,"")}static parseTrackName(t){const e=oT.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);aT.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(n!==void 0)return n}if(t.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===e||a.uuid===e)return a;const l=n(a.children);if(l)return l}return null},i=n(t.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)t[e++]=n[i]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,n=e.objectName,i=e.propertyName;let s=e.propertyIndex;if(t||(t=be.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(n){let c=e.objectIndex;switch(n){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let u=0;u<t.length;u++)if(t[u].name===c){c=u;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[n]}if(c!==void 0){if(t[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[c]}}const o=t[i];if(o===void 0){const c=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,t.isMaterial===!0?a=this.Versioning.NeedsUpdate:t.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[s]!==void 0&&(s=t.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}be.Composite=lT;be.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};be.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};be.prototype.GetterByBindingType=[be.prototype._getValue_direct,be.prototype._getValue_array,be.prototype._getValue_arrayElement,be.prototype._getValue_toArray];be.prototype.SetterByBindingTypeAndVersioning=[[be.prototype._setValue_direct,be.prototype._setValue_direct_setNeedsUpdate,be.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[be.prototype._setValue_array,be.prototype._setValue_array_setNeedsUpdate,be.prototype._setValue_array_setMatrixWorldNeedsUpdate],[be.prototype._setValue_arrayElement,be.prototype._setValue_arrayElement_setNeedsUpdate,be.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[be.prototype._setValue_fromArray,be.prototype._setValue_fromArray_setNeedsUpdate,be.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class cT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=ri(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,l=t.length,c=this.nCachedObjects_;for(let u=0,h=arguments.length;u!==h;++u){const d=arguments[u],f=d.uuid;let p=e[f];if(p===void 0){p=l++,e[f]=p,t.push(d);for(let y=0,m=o;y!==m;++y)s[y].push(new be(d,n[y],i[y]))}else if(p<c){a=t[p];const y=--c,m=t[y];e[m.uuid]=p,t[p]=m,e[f]=y,t[y]=d;for(let g=0,w=o;g!==w;++g){const b=s[g],M=b[y];let A=b[p];b[p]=M,A===void 0&&(A=new be(d,n[g],i[g])),b[y]=A}}else t[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const l=arguments[o],c=l.uuid,u=e[c];if(u!==void 0&&u>=s){const h=s++,d=t[h];e[d.uuid]=u,t[u]=d,e[c]=h,t[h]=l;for(let f=0,p=i;f!==p;++f){const y=n[f],m=y[h],g=y[u];y[u]=m,y[h]=g}}}this.nCachedObjects_=s}uncache(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=t.length;for(let a=0,l=arguments.length;a!==l;++a){const c=arguments[a],u=c.uuid,h=e[u];if(h!==void 0)if(delete e[u],h<s){const d=--s,f=t[d],p=--o,y=t[p];e[f.uuid]=h,t[h]=f,e[y.uuid]=d,t[d]=y,t.pop();for(let m=0,g=i;m!==g;++m){const w=n[m],b=w[d],M=w[p];w[h]=b,w[d]=M,w.pop()}}else{const d=--o,f=t[d];d>0&&(e[f.uuid]=h),t[h]=f,t.pop();for(let p=0,y=i;p!==y;++p){const m=n[p];m[h]=m[d],m.pop()}}}this.nCachedObjects_=s}subscribe_(t,e){const n=this._bindingsIndicesByPath;let i=n[t];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,l=this._objects,c=l.length,u=this.nCachedObjects_,h=new Array(c);i=s.length,n[t]=i,o.push(t),a.push(e),s.push(h);for(let d=u,f=l.length;d!==f;++d){const p=l[d];h[d]=new be(p,t,e)}return h}unsubscribe_(t){const e=this._bindingsIndicesByPath,n=e[t];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,l=o[a],c=t[a];e[c]=n,o[n]=l,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}class xx{constructor(t,e,n=null,i=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=i;const s=e.tracks,o=s.length,a=new Array(o),l={endingStart:ms,endingEnd:ms};for(let c=0;c!==o;++c){const u=s[c].createInterpolant(null);a[c]=u,u.settings=l}this._interpolantSettings=l,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=av,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n=!1){if(t.fadeOut(e),this.fadeIn(e),n===!0){const i=this._clip.duration,s=t._clip.duration,o=s/i,a=i/s;t.warp(1,o,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,n=!1){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const l=a.parameterPositions,c=a.sampleValues;return l[0]=s,l[1]=s+n,c[0]=t/o,c[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,i){if(!this.enabled){this._updateWeight(t);return}const s=this._startTime;if(s!==null){const l=(t-s)*n;l<0||n===0?e=0:(this._startTime=null,e=n*l)}e*=this._updateTimeScale(t);const o=this._updateTime(e),a=this._updateWeight(t);if(a>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case vp:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulateAdditive(a);break;case hh:default:for(let u=0,h=l.length;u!==h;++u)l[u].evaluate(o),c[u].accumulate(i,a)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(t)[0];e*=i,t>n.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let i=this.time+t,s=this._loopCount;const o=n===lv;if(t===0)return s===-1?i:o&&(s&1)===1?e-i:i;if(n===ov){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(i>=e)i=e;else if(i<0)i=0;else{this.time=i;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(s===-1&&(t>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=e||i<0){const a=Math.floor(i/e);i-=e*a,s+=Math.abs(a);const l=this.repetitions-s;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=t>0?e:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(l===1){const c=t<0;this._setEndings(c,!c,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return e-i}return i}_setEndings(t,e,n){const i=this._interpolantSettings;n?(i.endingStart=gs,i.endingEnd=gs):(t?i.endingStart=this.zeroSlopeAtStart?gs:ms:i.endingStart=Xa,e?i.endingEnd=this.zeroSlopeAtEnd?gs:ms:i.endingEnd=Xa)}_scheduleFading(t,e,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,l=o.sampleValues;return a[0]=s,l[0]=e,a[1]=s+t,l[1]=n,this}}const uT=new Float32Array(1);class hT extends Yi{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const n=t._localRoot||this._root,i=t._clip.tracks,s=i.length,o=t._propertyBindings,a=t._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let u=c[l];u===void 0&&(u={},c[l]=u);for(let h=0;h!==s;++h){const d=i[h],f=d.name;let p=u[f];if(p!==void 0)++p.referenceCount,o[h]=p;else{if(p=o[h],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,l,f));continue}const y=e&&e._propertyBindings[h].binding.parsedPath;p=new vx(be.create(n,f,y),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,l,f),o[h]=p}a[h].resultBuffer=p.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const n=(t._localRoot||this._root).uuid,i=t._clip.uuid,s=this._actionsByClip[i];this._bindAction(t,s&&s.knownActions[0]),this._addInactiveAction(t,i,n)}const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,n){const i=this._actions,s=this._actionsByClip;let o=s[e];if(o===void 0)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=o;else{const a=o.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=i.length,i.push(t),o.actionByRoot[n]=t}_removeInactiveAction(t){const e=this._actions,n=e[e.length-1],i=t._cacheIndex;n._cacheIndex=i,e[i]=n,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,o=this._actionsByClip,a=o[s],l=a.knownActions,c=l[l.length-1],u=t._byClipCacheIndex;c._byClipCacheIndex=u,l[u]=c,l.pop(),t._byClipCacheIndex=null;const h=a.actionByRoot,d=(t._localRoot||this._root).uuid;delete h[d],l.length===0&&delete o[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let n=0,i=e.length;n!==i;++n){const s=e[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(t){const e=this._actions,n=t._cacheIndex,i=this._nActiveActions++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackAction(t){const e=this._actions,n=t._cacheIndex,i=--this._nActiveActions,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_addInactiveBinding(t,e,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[e];o===void 0&&(o={},i[e]=o),o[n]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,n=t.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],l=e[e.length-1],c=t._cacheIndex;l._cacheIndex=c,e[c]=l,e.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(t){const e=this._bindings,n=t._cacheIndex,i=this._nActiveBindings++,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_takeBackBinding(t){const e=this._bindings,n=t._cacheIndex,i=--this._nActiveBindings,s=e[i];t._cacheIndex=i,e[i]=t,s._cacheIndex=n,e[n]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return n===void 0&&(n=new kp(new Float32Array(2),new Float32Array(2),1,uT),n.__cacheIndex=e,t[e]=n),n}_takeBackControlInterpolant(t){const e=this._controlInterpolants,n=t.__cacheIndex,i=--this._nActiveControlInterpolants,s=e[i];t.__cacheIndex=i,e[i]=t,s.__cacheIndex=n,e[n]=s}clipAction(t,e,n){const i=e||this._root,s=i.uuid;let o=typeof t=="string"?el.findByName(i,t):t;const a=o!==null?o.uuid:t,l=this._actionsByClip[a];let c=null;if(n===void 0&&(o!==null?n=o.blendMode:n=hh),l!==void 0){const h=l.actionByRoot[s];if(h!==void 0&&h.blendMode===n)return h;c=l.knownActions[0],o===null&&(o=c._clip)}if(o===null)return null;const u=new xx(this,o,e,n);return this._bindAction(u,c),this._addInactiveAction(u,a,s),u}existingAction(t,e){const n=e||this._root,i=n.uuid,s=typeof t=="string"?el.findByName(n,t):t,o=s?s.uuid:t,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let n=e-1;n>=0;--n)t[n].stop();return this}update(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,i=this.time+=t,s=Math.sign(t),o=this._accuIndex^=1;for(let c=0;c!==n;++c)e[c]._update(i,t,s,o);const a=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)a[c].apply(o);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,n=t.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,l=o.length;a!==l;++a){const c=o[a];this._deactivateAction(c);const u=c._cacheIndex,h=e[e.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,h._cacheIndex=u,e[u]=h,e.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(t){const e=t.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,l=a[e];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,s=i[e];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(t,e){const n=this.existingAction(t,e);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class dT extends Mp{constructor(t=1,e=1,n=1,i={}){super(t,e,i),this.isRenderTarget3D=!0,this.depth=n,this.texture=new fh(null,t,e,n),this._setTextureOptions(i),this.texture.isRenderTargetTexture=!0}}class qp{constructor(t){this.value=t}clone(){return new qp(this.value.clone===void 0?this.value:this.value.clone())}}let fT=0;class pT extends Yi{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:fT++}),this.name="",this.usage=Ya,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){this.dispatchEvent({type:"dispose"})}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let n=0,i=e.length;n<i;n++){const s=Array.isArray(e[n])?e[n]:[e[n]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class mT extends _l{constructor(t,e,n=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class gT{constructor(t,e,n,i,s,o=!1){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=i,this.count=s,this.normalized=o,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const Xg=new jt;class jp{constructor(t,e,n=0,i=1/0){this.ray=new Xi(t,e),this.near=n,this.far=i,this.camera=null,this.layers=new gl,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return Xg.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(Xg),this}intersectObject(t,e=!0,n=[]){return Cf(t,this,n,e),n.sort($g),n}intersectObjects(t,e=!0,n=[]){for(let i=0,s=t.length;i<s;i++)Cf(t[i],this,n,e);return n.sort($g),n}}function $g(r,t){return r.distance-t.distance}function Cf(r,t,e,n){let i=!0;if(r.layers.test(t.layers)&&r.raycast(t,e)===!1&&(i=!1),i===!0&&n===!0){const s=r.children;for(let o=0,a=s.length;o<a;o++)Cf(s[o],t,e,!0)}}class yT{constructor(){this._previousTime=0,this._currentTime=0,this._startTime=performance.now(),this._delta=0,this._elapsed=0,this._timescale=1,this._document=null,this._pageVisibilityHandler=null}connect(t){this._document=t,t.hidden!==void 0&&(this._pageVisibilityHandler=_T.bind(this),t.addEventListener("visibilitychange",this._pageVisibilityHandler,!1))}disconnect(){this._pageVisibilityHandler!==null&&(this._document.removeEventListener("visibilitychange",this._pageVisibilityHandler),this._pageVisibilityHandler=null),this._document=null}getDelta(){return this._delta/1e3}getElapsed(){return this._elapsed/1e3}getTimescale(){return this._timescale}setTimescale(t){return this._timescale=t,this}reset(){return this._currentTime=performance.now()-this._startTime,this}dispose(){this.disconnect()}update(t){return this._pageVisibilityHandler!==null&&this._document.hidden===!0?this._delta=0:(this._previousTime=this._currentTime,this._currentTime=(t!==void 0?t:performance.now())-this._startTime,this._delta=(this._currentTime-this._previousTime)*this._timescale,this._elapsed+=this._delta),this}}function _T(){this._document.hidden===!1&&this.reset()}class Rf{constructor(t=1,e=0,n=0){this.radius=t,this.phi=e,this.theta=n}set(t,e,n){return this.radius=t,this.phi=e,this.theta=n,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=re(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+e*e+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,n),this.phi=Math.acos(re(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class vT{constructor(t=1,e=0,n=0){this.radius=t,this.theta=e,this.y=n}set(t,e,n){return this.radius=t,this.theta=e,this.y=n,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,n){return this.radius=Math.sqrt(t*t+n*n),this.theta=Math.atan2(t,n),this.y=e,this}clone(){return new this.constructor().copy(this)}}class Zp{constructor(t,e,n,i){Zp.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const s=this.elements;return s[0]=t,s[2]=e,s[1]=n,s[3]=i,this}}const Yg=new at;class xT{constructor(t=new at(1/0,1/0),e=new at(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Yg.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Yg).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const qg=new L,vc=new L,so=new L,oo=new L,Ld=new L,bT=new L,MT=new L;class bx{constructor(t=new L,e=new L){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){qg.subVectors(t,this.start),vc.subVectors(this.end,this.start);const n=vc.dot(vc);let s=vc.dot(qg)/n;return e&&(s=re(s,0,1)),s}closestPointToPoint(t,e,n){const i=this.closestPointToPointParameter(t,e);return this.delta(n).multiplyScalar(i).add(this.start)}distanceSqToLine3(t,e=bT,n=MT){const i=10000000000000001e-32;let s,o;const a=this.start,l=t.start,c=this.end,u=t.end;so.subVectors(c,a),oo.subVectors(u,l),Ld.subVectors(a,l);const h=so.dot(so),d=oo.dot(oo),f=oo.dot(Ld);if(h<=i&&d<=i)return e.copy(a),n.copy(l),e.sub(n),e.dot(e);if(h<=i)s=0,o=f/d,o=re(o,0,1);else{const p=so.dot(Ld);if(d<=i)o=0,s=re(-p/h,0,1);else{const y=so.dot(oo),m=h*d-y*y;m!==0?s=re((y*f-p*d)/m,0,1):s=0,o=(y*s+f)/d,o<0?(o=0,s=re(-p/h,0,1)):o>1&&(o=1,s=re((y-p)/h,0,1))}}return e.copy(a).add(so.multiplyScalar(s)),n.copy(l).add(oo.multiplyScalar(o)),e.sub(n),e.dot(e)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const jg=new L;class ST extends de{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const n=new ce,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,l=32;o<l;o++,a++){const c=o/l*Math.PI*2,u=a/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new zt(i,3));const s=new Ln({fog:!1,toneMapped:!1});this.cone=new qi(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),jg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(jg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Ar=new L,xc=new jt,Dd=new jt;class wT extends qi{constructor(t){const e=Mx(t),n=new ce,i=[],s=[];for(let c=0;c<e.length;c++){const u=e[c];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(0,0,0),s.push(0,0,0))}n.setAttribute("position",new zt(i,3)),n.setAttribute("color",new zt(s,3));const o=new Ln({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,o),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1;const a=new At(255),l=new At(65280);this.setColors(a,l)}updateMatrixWorld(t){const e=this.bones,n=this.geometry,i=n.getAttribute("position");Dd.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<e.length;s++){const a=e[s];a.parent&&a.parent.isBone&&(xc.multiplyMatrices(Dd,a.matrixWorld),Ar.setFromMatrixPosition(xc),i.setXYZ(o,Ar.x,Ar.y,Ar.z),xc.multiplyMatrices(Dd,a.parent.matrixWorld),Ar.setFromMatrixPosition(xc),i.setXYZ(o+1,Ar.x,Ar.y,Ar.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}setColors(t,e){const i=this.geometry.getAttribute("color");for(let s=0;s<i.count;s+=2)i.setXYZ(s,t.r,t.g,t.b),i.setXYZ(s+1,e.r,e.g,e.b);return i.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}function Mx(r){const t=[];r.isBone===!0&&t.push(r);for(let e=0;e<r.children.length;e++)t.push(...Mx(r.children[e]));return t}class TT extends Ue{constructor(t,e,n){const i=new Yo(e,4,2),s=new vr({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=t,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const ET=new L,Zg=new At,Jg=new At;class AT extends de{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new bl(e);i.rotateY(Math.PI*.5),this.material=new vr({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new Te(o,3)),this.add(new Ue(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Zg.copy(this.light.color),Jg.copy(this.light.groundColor);for(let n=0,i=e.count;n<i;n++){const s=n<i/2?Zg:Jg;e.setXYZ(n,s.r,s.g,s.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(ET.setFromMatrixPosition(this.light.matrixWorld).negate())}}class CT extends qi{constructor(t=10,e=10,n=4473924,i=8947848){n=new At(n),i=new At(i);const s=e/2,o=t/e,a=t/2,l=[],c=[];for(let d=0,f=0,p=-a;d<=e;d++,p+=o){l.push(-a,0,p,a,0,p),l.push(p,0,-a,p,0,a);const y=d===s?n:i;y.toArray(c,f),f+=3,y.toArray(c,f),f+=3,y.toArray(c,f),f+=3,y.toArray(c,f),f+=3}const u=new ce;u.setAttribute("position",new zt(l,3)),u.setAttribute("color",new zt(c,3));const h=new Ln({vertexColors:!0,toneMapped:!1});super(u,h),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class RT extends qi{constructor(t=10,e=16,n=8,i=64,s=4473924,o=8947848){s=new At(s),o=new At(o);const a=[],l=[];if(e>1)for(let h=0;h<e;h++){const d=h/e*(Math.PI*2),f=Math.sin(d)*t,p=Math.cos(d)*t;a.push(0,0,0),a.push(f,0,p);const y=h&1?s:o;l.push(y.r,y.g,y.b),l.push(y.r,y.g,y.b)}for(let h=0;h<n;h++){const d=h&1?s:o,f=t-t/n*h;for(let p=0;p<i;p++){let y=p/i*(Math.PI*2),m=Math.sin(y)*f,g=Math.cos(y)*f;a.push(m,0,g),l.push(d.r,d.g,d.b),y=(p+1)/i*(Math.PI*2),m=Math.sin(y)*f,g=Math.cos(y)*f,a.push(m,0,g),l.push(d.r,d.g,d.b)}}const c=new ce;c.setAttribute("position",new zt(a,3)),c.setAttribute("color",new zt(l,3));const u=new Ln({vertexColors:!0,toneMapped:!1});super(c,u),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Kg=new L,bc=new L,Qg=new L;class IT extends de{constructor(t,e,n){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",e===void 0&&(e=1);let i=new ce;i.setAttribute("position",new zt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const s=new Ln({fog:!1,toneMapped:!1});this.lightPlane=new zr(i,s),this.add(this.lightPlane),i=new ce,i.setAttribute("position",new zt([0,0,0,0,0,1],3)),this.targetLine=new zr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),Kg.setFromMatrixPosition(this.light.matrixWorld),bc.setFromMatrixPosition(this.light.target.matrixWorld),Qg.subVectors(bc,Kg),this.lightPlane.lookAt(bc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(bc),this.targetLine.scale.z=Qg.length()}}const Mc=new L,Ge=new mh;class NT extends qi{constructor(t){const e=new ce,n=new Ln({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,y){l(p),l(y)}function l(p){i.push(0,0,0),s.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(i.length/3-1)}e.setAttribute("position",new zt(i,3)),e.setAttribute("color",new zt(s,3)),super(e,n),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const c=new At(16755200),u=new At(16711680),h=new At(43775),d=new At(16777215),f=new At(3355443);this.setColors(c,u,h,d,f)}setColors(t,e,n,i,s){const a=this.geometry.getAttribute("color");return a.setXYZ(0,t.r,t.g,t.b),a.setXYZ(1,t.r,t.g,t.b),a.setXYZ(2,t.r,t.g,t.b),a.setXYZ(3,t.r,t.g,t.b),a.setXYZ(4,t.r,t.g,t.b),a.setXYZ(5,t.r,t.g,t.b),a.setXYZ(6,t.r,t.g,t.b),a.setXYZ(7,t.r,t.g,t.b),a.setXYZ(8,t.r,t.g,t.b),a.setXYZ(9,t.r,t.g,t.b),a.setXYZ(10,t.r,t.g,t.b),a.setXYZ(11,t.r,t.g,t.b),a.setXYZ(12,t.r,t.g,t.b),a.setXYZ(13,t.r,t.g,t.b),a.setXYZ(14,t.r,t.g,t.b),a.setXYZ(15,t.r,t.g,t.b),a.setXYZ(16,t.r,t.g,t.b),a.setXYZ(17,t.r,t.g,t.b),a.setXYZ(18,t.r,t.g,t.b),a.setXYZ(19,t.r,t.g,t.b),a.setXYZ(20,t.r,t.g,t.b),a.setXYZ(21,t.r,t.g,t.b),a.setXYZ(22,t.r,t.g,t.b),a.setXYZ(23,t.r,t.g,t.b),a.setXYZ(24,e.r,e.g,e.b),a.setXYZ(25,e.r,e.g,e.b),a.setXYZ(26,e.r,e.g,e.b),a.setXYZ(27,e.r,e.g,e.b),a.setXYZ(28,e.r,e.g,e.b),a.setXYZ(29,e.r,e.g,e.b),a.setXYZ(30,e.r,e.g,e.b),a.setXYZ(31,e.r,e.g,e.b),a.setXYZ(32,n.r,n.g,n.b),a.setXYZ(33,n.r,n.g,n.b),a.setXYZ(34,n.r,n.g,n.b),a.setXYZ(35,n.r,n.g,n.b),a.setXYZ(36,n.r,n.g,n.b),a.setXYZ(37,n.r,n.g,n.b),a.setXYZ(38,i.r,i.g,i.b),a.setXYZ(39,i.r,i.g,i.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0,this}update(){const t=this.geometry,e=this.pointMap,n=1,i=1;let s,o;if(Ge.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),this.camera.reversedDepth===!0)s=1,o=0;else if(this.camera.coordinateSystem===ii)s=-1,o=1;else if(this.camera.coordinateSystem===Do)s=0,o=1;else throw new Error("THREE.CameraHelper.update(): Invalid coordinate system: "+this.camera.coordinateSystem);$e("c",e,t,Ge,0,0,s),$e("t",e,t,Ge,0,0,o),$e("n1",e,t,Ge,-n,-i,s),$e("n2",e,t,Ge,n,-i,s),$e("n3",e,t,Ge,-n,i,s),$e("n4",e,t,Ge,n,i,s),$e("f1",e,t,Ge,-n,-i,o),$e("f2",e,t,Ge,n,-i,o),$e("f3",e,t,Ge,-n,i,o),$e("f4",e,t,Ge,n,i,o),$e("u1",e,t,Ge,n*.7,i*1.1,s),$e("u2",e,t,Ge,-n*.7,i*1.1,s),$e("u3",e,t,Ge,0,i*2,s),$e("cf1",e,t,Ge,-n,0,o),$e("cf2",e,t,Ge,n,0,o),$e("cf3",e,t,Ge,0,-i,o),$e("cf4",e,t,Ge,0,i,o),$e("cn1",e,t,Ge,-n,0,s),$e("cn2",e,t,Ge,n,0,s),$e("cn3",e,t,Ge,0,-i,s),$e("cn4",e,t,Ge,0,i,s),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function $e(r,t,e,n,i,s,o){Mc.set(i,s,o).unproject(n);const a=t[r];if(a!==void 0){const l=e.getAttribute("position");for(let c=0,u=a.length;c<u;c++)l.setXYZ(a[c],Mc.x,Mc.y,Mc.z)}}const Sc=new bn;class PT extends qi{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new ce;s.setIndex(new Te(n,1)),s.setAttribute("position",new Te(i,3)),super(s,new Ln({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(){if(this.object!==void 0&&Sc.setFromObject(this.object),Sc.isEmpty())return;const t=Sc.min,e=Sc.max,n=this.geometry.attributes.position,i=n.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=e.y,i[5]=e.z,i[6]=t.x,i[7]=t.y,i[8]=e.z,i[9]=e.x,i[10]=t.y,i[11]=e.z,i[12]=e.x,i[13]=e.y,i[14]=t.z,i[15]=t.x,i[16]=e.y,i[17]=t.z,i[18]=t.x,i[19]=t.y,i[20]=t.z,i[21]=e.x,i[22]=t.y,i[23]=t.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class LT extends qi{constructor(t,e=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new ce;s.setIndex(new Te(n,1)),s.setAttribute("position",new zt(i,3)),super(s,new Ln({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class DT extends zr{constructor(t,e=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new ce;o.setAttribute("position",new zt(s,3)),o.computeBoundingSphere(),super(o,new Ln({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new ce;l.setAttribute("position",new zt(a,3)),l.computeBoundingSphere(),this.add(new Ue(l,new vr({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const ty=new L;let wc,Od;class OT extends de{constructor(t=new L(0,0,1),e=new L(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",wc===void 0&&(wc=new ce,wc.setAttribute("position",new zt([0,0,0,0,1,0],3)),Od=new xl(.5,1,5,1),Od.translate(0,-.5,0)),this.position.copy(e),this.line=new zr(wc,new Ln({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Ue(Od,new vr({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(n,s,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{ty.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(ty,e)}}setLength(t,e=t*.2,n=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(n,e,n),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class UT extends qi{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ce;i.setAttribute("position",new zt(e,3)),i.setAttribute("color",new zt(n,3));const s=new Ln({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(t,e,n){const i=new At,s=this.geometry.attributes.color.array;return i.set(t),i.toArray(s,0),i.toArray(s,3),i.set(e),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class FT{constructor(){this.type="ShapePath",this.color=new At,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Xu,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,n,i){return this.currentPath.quadraticCurveTo(t,e,n,i),this}bezierCurveTo(t,e,n,i,s,o){return this.currentPath.bezierCurveTo(t,e,n,i,s,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(g){const w=[];for(let b=0,M=g.length;b<M;b++){const A=g[b],S=new Ss;S.curves=A.curves,w.push(S)}return w}function n(g,w){const b=w.length;let M=!1;for(let A=b-1,S=0;S<b;A=S++){let E=w[A],x=w[S],v=x.x-E.x,_=x.y-E.y;if(Math.abs(_)>Number.EPSILON){if(_<0&&(E=w[S],v=-v,x=w[A],_=-_),g.y<E.y||g.y>x.y)continue;if(g.y===E.y){if(g.x===E.x)return!0}else{const T=_*(g.x-E.x)-v*(g.y-E.y);if(T===0)return!0;if(T<0)continue;M=!M}}else{if(g.y!==E.y)continue;if(x.x<=g.x&&g.x<=E.x||E.x<=g.x&&g.x<=x.x)return!0}}return M}const i=Ai.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,l;const c=[];if(s.length===1)return a=s[0],l=new Ss,l.curves=a.curves,c.push(l),c;let u=!i(s[0].getPoints());u=t?!u:u;const h=[],d=[];let f=[],p=0,y;d[p]=void 0,f[p]=[];for(let g=0,w=s.length;g<w;g++)a=s[g],y=a.getPoints(),o=i(y),o=t?!o:o,o?(!u&&d[p]&&p++,d[p]={s:new Ss,p:y},d[p].s.curves=a.curves,u&&p++,f[p]=[]):f[p].push({h:a,p:y[0]});if(!d[0])return e(s);if(d.length>1){let g=!1,w=0;for(let b=0,M=d.length;b<M;b++)h[b]=[];for(let b=0,M=d.length;b<M;b++){const A=f[b];for(let S=0;S<A.length;S++){const E=A[S];let x=!0;for(let v=0;v<d.length;v++)n(E.p,d[v].p)&&(b!==v&&w++,x?(x=!1,h[v].push(E)):g=!0);x&&h[b].push(E)}}w>0&&g===!1&&(f=h)}let m;for(let g=0,w=d.length;g<w;g++){l=d[g].s,c.push(l),m=f[g];for(let b=0,M=m.length;b<M;b++)l.holes.push(m[b].h)}return c}}class BT extends Yi{constructor(t,e=null){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(t){if(t===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=t}disconnect(){}dispose(){}update(){}}function zT(r,t){const e=r.image&&r.image.width?r.image.width/r.image.height:1;return e>t?(r.repeat.x=1,r.repeat.y=e/t,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2):(r.repeat.x=t/e,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0),r}function kT(r,t){const e=r.image&&r.image.width?r.image.width/r.image.height:1;return e>t?(r.repeat.x=t/e,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0):(r.repeat.x=1,r.repeat.y=e/t,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2),r}function VT(r){return r.repeat.x=1,r.repeat.y=1,r.offset.x=0,r.offset.y=0,r}function If(r,t,e,n){const i=HT(n);switch(e){case gp:return r*t;case lh:return r*t/i.components*i.byteLength;case pl:return r*t/i.components*i.byteLength;case _p:return r*t*2/i.components*i.byteLength;case ch:return r*t*2/i.components*i.byteLength;case yp:return r*t*3/i.components*i.byteLength;case Nn:return r*t*4/i.components*i.byteLength;case uh:return r*t*4/i.components*i.byteLength;case Ra:case Ia:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*8;case Na:case Pa:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case pu:case gu:return Math.max(r,16)*Math.max(t,8)/4;case fu:case mu:return Math.max(r,8)*Math.max(t,8)/2;case yu:case _u:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*8;case vu:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case xu:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case bu:return Math.floor((r+4)/5)*Math.floor((t+3)/4)*16;case Mu:return Math.floor((r+4)/5)*Math.floor((t+4)/5)*16;case Su:return Math.floor((r+5)/6)*Math.floor((t+4)/5)*16;case wu:return Math.floor((r+5)/6)*Math.floor((t+5)/6)*16;case Tu:return Math.floor((r+7)/8)*Math.floor((t+4)/5)*16;case Eu:return Math.floor((r+7)/8)*Math.floor((t+5)/6)*16;case Au:return Math.floor((r+7)/8)*Math.floor((t+7)/8)*16;case Cu:return Math.floor((r+9)/10)*Math.floor((t+4)/5)*16;case Ru:return Math.floor((r+9)/10)*Math.floor((t+5)/6)*16;case Iu:return Math.floor((r+9)/10)*Math.floor((t+7)/8)*16;case Nu:return Math.floor((r+9)/10)*Math.floor((t+9)/10)*16;case Pu:return Math.floor((r+11)/12)*Math.floor((t+9)/10)*16;case Lu:return Math.floor((r+11)/12)*Math.floor((t+11)/12)*16;case Du:case Ou:case Uu:return Math.ceil(r/4)*Math.ceil(t/4)*16;case Fu:case Bu:return Math.ceil(r/4)*Math.ceil(t/4)*8;case zu:case ku:return Math.ceil(r/4)*Math.ceil(t/4)*16}throw new Error("Unable to determine texture byte length for ".concat(e," format."))}function HT(r){switch(r){case Ci:case dp:return{byteLength:1,components:1};case Io:case fp:case Ps:return{byteLength:2,components:1};case oh:case ah:return{byteLength:2,components:4};case gr:case sh:case Gn:return{byteLength:4,components:1};case pp:case mp:return{byteLength:4,components:3}}throw new Error("Unknown texture type ".concat(r,"."))}class GT{static contain(t,e){return zT(t,e)}static cover(t,e){return kT(t,e)}static fill(t){return VT(t)}static getByteLength(t,e,n,i){return If(t,e,n,i)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:dl}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=dl);/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */function Sx(){let r=null,t=!1,e=null,n=null;function i(s,o){e(s,o),n=r.requestAnimationFrame(i)}return{start:function(){t!==!0&&e!==null&&(n=r.requestAnimationFrame(i),t=!0)},stop:function(){r.cancelAnimationFrame(n),t=!1},setAnimationLoop:function(s){e=s},setContext:function(s){r=s}}}function WT(r){const t=new WeakMap;function e(a,l){const c=a.array,u=a.usage,h=c.byteLength,d=r.createBuffer();r.bindBuffer(l,d),r.bufferData(l,c,u),a.onUploadCallback();let f;if(c instanceof Float32Array)f=r.FLOAT;else if(typeof Float16Array<"u"&&c instanceof Float16Array)f=r.HALF_FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=r.HALF_FLOAT:f=r.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=r.SHORT;else if(c instanceof Uint32Array)f=r.UNSIGNED_INT;else if(c instanceof Int32Array)f=r.INT;else if(c instanceof Int8Array)f=r.BYTE;else if(c instanceof Uint8Array)f=r.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:h}}function n(a,l,c){const u=l.array,h=l.updateRanges;if(r.bindBuffer(c,a),h.length===0)r.bufferSubData(c,0,u);else{h.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<h.length;f++){const p=h[d],y=h[f];y.start<=p.start+p.count+1?p.count=Math.max(p.count,y.start+y.count-p.start):(++d,h[d]=y)}h.length=d+1;for(let f=0,p=h.length;f<p;f++){const y=h[f];r.bufferSubData(c,y.start*u.BYTES_PER_ELEMENT,u,y.start,y.count)}l.clearUpdateRanges()}l.onUploadCallback()}function i(a){return a.isInterleavedBufferAttribute&&(a=a.data),t.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=t.get(a);l&&(r.deleteBuffer(l.buffer),t.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=t.get(a);(!u||u.version<a.version)&&t.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=t.get(a);if(c===void 0)t.set(a,e(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");n(c.buffer,a,l),c.version=a.version}}return{get:i,remove:s,update:o}}var XT="#ifdef USE_ALPHAHASH\n	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\n#endif",$T="#ifdef USE_ALPHAHASH\n	const float ALPHA_HASH_SCALE = 0.05;\n	float hash2D( vec2 value ) {\n		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\n	}\n	float hash3D( vec3 value ) {\n		return hash2D( vec2( hash2D( value.xy ), value.z ) );\n	}\n	float getAlphaHashThreshold( vec3 position ) {\n		float maxDeriv = max(\n			length( dFdx( position.xyz ) ),\n			length( dFdy( position.xyz ) )\n		);\n		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\n		vec2 pixScales = vec2(\n			exp2( floor( log2( pixScale ) ) ),\n			exp2( ceil( log2( pixScale ) ) )\n		);\n		vec2 alpha = vec2(\n			hash3D( floor( pixScales.x * position.xyz ) ),\n			hash3D( floor( pixScales.y * position.xyz ) )\n		);\n		float lerpFactor = fract( log2( pixScale ) );\n		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\n		float a = min( lerpFactor, 1.0 - lerpFactor );\n		vec3 cases = vec3(\n			x * x / ( 2.0 * a * ( 1.0 - a ) ),\n			( x - 0.5 * a ) / ( 1.0 - a ),\n			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\n		);\n		float threshold = ( x < ( 1.0 - a ) )\n			? ( ( x < a ) ? cases.x : cases.y )\n			: cases.z;\n		return clamp( threshold , 1.0e-6, 1.0 );\n	}\n#endif",YT="#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",qT="#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",jT="#ifdef USE_ALPHATEST\n	#ifdef ALPHA_TO_COVERAGE\n	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );\n	if ( diffuseColor.a == 0.0 ) discard;\n	#else\n	if ( diffuseColor.a < alphaTest ) discard;\n	#endif\n#endif",ZT="#ifdef USE_ALPHATEST\n	uniform float alphaTest;\n#endif",JT="#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_CLEARCOAT ) \n		clearcoatSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_SHEEN ) \n		sheenSpecularIndirect *= ambientOcclusion;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD )\n		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n	#endif\n#endif",KT="#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",QT="#ifdef USE_BATCHING\n	#if ! defined( GL_ANGLE_multi_draw )\n	#define gl_DrawID _gl_DrawID\n	uniform int _gl_DrawID;\n	#endif\n	uniform highp sampler2D batchingTexture;\n	uniform highp usampler2D batchingIdTexture;\n	mat4 getBatchingMatrix( const in float i ) {\n		int size = textureSize( batchingTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n	float getIndirectIndex( const in int i ) {\n		int size = textureSize( batchingIdTexture, 0 ).x;\n		int x = i % size;\n		int y = i / size;\n		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );\n	}\n#endif\n#ifdef USE_BATCHING_COLOR\n	uniform sampler2D batchingColorTexture;\n	vec3 getBatchingColor( const in float i ) {\n		int size = textureSize( batchingColorTexture, 0 ).x;\n		int j = int( i );\n		int x = j % size;\n		int y = j / size;\n		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;\n	}\n#endif",tE="#ifdef USE_BATCHING\n	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );\n#endif",eE="vec3 transformed = vec3( position );\n#ifdef USE_ALPHAHASH\n	vPosition = vec3( position );\n#endif",nE="vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n	vec3 objectTangent = vec3( tangent.xyz );\n#endif",iE="float G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( specularColor, 1.0, dotVH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n} // validated",rE="#ifdef USE_IRIDESCENCE\n	const mat3 XYZ_TO_REC709 = mat3(\n		 3.2404542, -0.9692660,  0.0556434,\n		-1.5371385,  1.8760108, -0.2040259,\n		-0.4985314,  0.0415560,  1.0572252\n	);\n	vec3 Fresnel0ToIor( vec3 fresnel0 ) {\n		vec3 sqrtF0 = sqrt( fresnel0 );\n		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n	}\n	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n	}\n	float IorToFresnel0( float transmittedIor, float incidentIor ) {\n		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n	}\n	vec3 evalSensitivity( float OPD, vec3 shift ) {\n		float phase = 2.0 * PI * OPD * 1.0e-9;\n		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n		xyz /= 1.0685e-7;\n		vec3 rgb = XYZ_TO_REC709 * xyz;\n		return rgb;\n	}\n	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n		vec3 I;\n		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n		float cosTheta2Sq = 1.0 - sinTheta2Sq;\n		if ( cosTheta2Sq < 0.0 ) {\n			return vec3( 1.0 );\n		}\n		float cosTheta2 = sqrt( cosTheta2Sq );\n		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n		float R12 = F_Schlick( R0, 1.0, cosTheta1 );\n		float T121 = 1.0 - R12;\n		float phi12 = 0.0;\n		if ( iridescenceIOR < outsideIOR ) phi12 = PI;\n		float phi21 = PI - phi12;\n		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n		vec3 phi23 = vec3( 0.0 );\n		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n		vec3 phi = vec3( phi21 ) + phi23;\n		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n		vec3 r123 = sqrt( R123 );\n		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n		vec3 C0 = R12 + Rs;\n		I = C0;\n		vec3 Cm = Rs - T121;\n		for ( int m = 1; m <= 2; ++ m ) {\n			Cm *= r123;\n			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n			I += Cm * Sm;\n		}\n		return max( I, vec3( 0.0 ) );\n	}\n#endif",sE="#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vBumpMapUv );\n		vec2 dSTdy = dFdy( vBumpMapUv );\n		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\n		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 ) * faceDirection;\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif",oE="#if NUM_CLIPPING_PLANES > 0\n	vec4 plane;\n	#ifdef ALPHA_TO_COVERAGE\n		float distanceToPlane, distanceGradient;\n		float clipOpacity = 1.0;\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n			distanceGradient = fwidth( distanceToPlane ) / 2.0;\n			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			if ( clipOpacity == 0.0 ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			float unionClipOpacity = 1.0;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;\n				distanceGradient = fwidth( distanceToPlane ) / 2.0;\n				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );\n			}\n			#pragma unroll_loop_end\n			clipOpacity *= 1.0 - unionClipOpacity;\n		#endif\n		diffuseColor.a *= clipOpacity;\n		if ( diffuseColor.a == 0.0 ) discard;\n	#else\n		#pragma unroll_loop_start\n		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n			plane = clippingPlanes[ i ];\n			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n		}\n		#pragma unroll_loop_end\n		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n			bool clipped = true;\n			#pragma unroll_loop_start\n			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n				plane = clippingPlanes[ i ];\n				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n			}\n			#pragma unroll_loop_end\n			if ( clipped ) discard;\n		#endif\n	#endif\n#endif",aE="#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",lE="#if NUM_CLIPPING_PLANES > 0\n	varying vec3 vClipPosition;\n#endif",cE="#if NUM_CLIPPING_PLANES > 0\n	vClipPosition = - mvPosition.xyz;\n#endif",uE="#if defined( USE_COLOR_ALPHA )\n	diffuseColor *= vColor;\n#elif defined( USE_COLOR )\n	diffuseColor.rgb *= vColor;\n#endif",hE="#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR )\n	varying vec3 vColor;\n#endif",dE="#if defined( USE_COLOR_ALPHA )\n	varying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n	varying vec3 vColor;\n#endif",fE="#if defined( USE_COLOR_ALPHA )\n	vColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )\n	vColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n	vColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n	vColor.xyz *= instanceColor.xyz;\n#endif\n#ifdef USE_BATCHING_COLOR\n	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );\n	vColor.xyz *= batchingColor.xyz;\n#endif",pE="#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n	float precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n	float precisionSafeLength( vec3 v ) {\n		float maxComponent = max3( abs( v ) );\n		return length( v / maxComponent ) * maxComponent;\n	}\n#endif\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\n#ifdef USE_ALPHAHASH\n	varying vec3 vPosition;\n#endif\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n	mat3 tmp;\n	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n	return tmp;\n}\nbool isPerspectiveMatrix( mat4 m ) {\n	return m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n	return vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",mE="#ifdef ENVMAP_TYPE_CUBE_UV\n	#define cubeUV_minMipLevel 4.0\n	#define cubeUV_minTileSize 16.0\n	float getFace( vec3 direction ) {\n		vec3 absDirection = abs( direction );\n		float face = - 1.0;\n		if ( absDirection.x > absDirection.z ) {\n			if ( absDirection.x > absDirection.y )\n				face = direction.x > 0.0 ? 0.0 : 3.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		} else {\n			if ( absDirection.z > absDirection.y )\n				face = direction.z > 0.0 ? 2.0 : 5.0;\n			else\n				face = direction.y > 0.0 ? 1.0 : 4.0;\n		}\n		return face;\n	}\n	vec2 getUV( vec3 direction, float face ) {\n		vec2 uv;\n		if ( face == 0.0 ) {\n			uv = vec2( direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 1.0 ) {\n			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n		} else if ( face == 2.0 ) {\n			uv = vec2( - direction.x, direction.y ) / abs( direction.z );\n		} else if ( face == 3.0 ) {\n			uv = vec2( - direction.z, direction.y ) / abs( direction.x );\n		} else if ( face == 4.0 ) {\n			uv = vec2( - direction.x, direction.z ) / abs( direction.y );\n		} else {\n			uv = vec2( direction.x, direction.y ) / abs( direction.z );\n		}\n		return 0.5 * ( uv + 1.0 );\n	}\n	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n		float face = getFace( direction );\n		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n		mipInt = max( mipInt, cubeUV_minMipLevel );\n		float faceSize = exp2( mipInt );\n		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n		if ( face > 2.0 ) {\n			uv.y += faceSize;\n			face -= 3.0;\n		}\n		uv.x += face * faceSize;\n		uv.x += filterInt * 3.0 * cubeUV_minTileSize;\n		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n		uv.x *= CUBEUV_TEXEL_WIDTH;\n		uv.y *= CUBEUV_TEXEL_HEIGHT;\n		#ifdef texture2DGradEXT\n			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n		#else\n			return texture2D( envMap, uv ).rgb;\n		#endif\n	}\n	#define cubeUV_r0 1.0\n	#define cubeUV_m0 - 2.0\n	#define cubeUV_r1 0.8\n	#define cubeUV_m1 - 1.0\n	#define cubeUV_r4 0.4\n	#define cubeUV_m4 2.0\n	#define cubeUV_r5 0.305\n	#define cubeUV_m5 3.0\n	#define cubeUV_r6 0.21\n	#define cubeUV_m6 4.0\n	float roughnessToMip( float roughness ) {\n		float mip = 0.0;\n		if ( roughness >= cubeUV_r1 ) {\n			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n		} else if ( roughness >= cubeUV_r4 ) {\n			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n		} else if ( roughness >= cubeUV_r5 ) {\n			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n		} else if ( roughness >= cubeUV_r6 ) {\n			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n		} else {\n			mip = - 2.0 * log2( 1.16 * roughness );		}\n		return mip;\n	}\n	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n		float mipF = fract( mip );\n		float mipInt = floor( mip );\n		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n		if ( mipF == 0.0 ) {\n			return vec4( color0, 1.0 );\n		} else {\n			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n			return vec4( mix( color0, color1, mipF ), 1.0 );\n		}\n	}\n#endif",gE="vec3 transformedNormal = objectNormal;\n#ifdef USE_TANGENT\n	vec3 transformedTangent = objectTangent;\n#endif\n#ifdef USE_BATCHING\n	mat3 bm = mat3( batchingMatrix );\n	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\n	transformedNormal = bm * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = bm * transformedTangent;\n	#endif\n#endif\n#ifdef USE_INSTANCING\n	mat3 im = mat3( instanceMatrix );\n	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\n	transformedNormal = im * transformedNormal;\n	#ifdef USE_TANGENT\n		transformedTangent = im * transformedTangent;\n	#endif\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n	transformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\n	#ifdef FLIP_SIDED\n		transformedTangent = - transformedTangent;\n	#endif\n#endif",yE="#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif",_E="#ifdef USE_DISPLACEMENTMAP\n	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",vE="#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE\n		emissiveColor = sRGBTransferEOTF( emissiveColor );\n	#endif\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif",xE="#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif",bE="gl_FragColor = linearToOutputTexel( gl_FragColor );",ME="vec4 LinearTransferOETF( in vec4 value ) {\n	return value;\n}\nvec4 sRGBTransferEOTF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 sRGBTransferOETF( in vec4 value ) {\n	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",SE="#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vec3 cameraToFrag;\n		if ( isOrthographic ) {\n			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToFrag = normalize( vWorldPosition - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToFrag, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#else\n		vec4 envColor = vec4( 0.0 );\n	#endif\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif",wE="#ifdef USE_ENVMAP\n	uniform float envMapIntensity;\n	uniform float flipEnvMap;\n	uniform mat3 envMapRotation;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	\n#endif",TE="#ifdef USE_ENVMAP\n	uniform float reflectivity;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		varying vec3 vWorldPosition;\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif",EE="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n		#define ENV_WORLDPOS\n	#endif\n	#ifdef ENV_WORLDPOS\n		\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif",AE="#ifdef USE_ENVMAP\n	#ifdef ENV_WORLDPOS\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex;\n		if ( isOrthographic ) {\n			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n		} else {\n			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		}\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif",CE="#ifdef USE_FOG\n	vFogDepth = - mvPosition.z;\n#endif",RE="#ifdef USE_FOG\n	varying float vFogDepth;\n#endif",IE="#ifdef USE_FOG\n	#ifdef FOG_EXP2\n		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",NE="#ifdef USE_FOG\n	uniform vec3 fogColor;\n	varying float vFogDepth;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",PE="#ifdef USE_GRADIENTMAP\n	uniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n	float dotNL = dot( normal, lightDirection );\n	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n	#ifdef USE_GRADIENTMAP\n		return vec3( texture2D( gradientMap, coord ).r );\n	#else\n		vec2 fw = fwidth( coord ) * 0.5;\n		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n	#endif\n}",LE="#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",DE="LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",OE="varying vec3 vViewPosition;\nstruct LambertMaterial {\n	vec3 diffuseColor;\n	float specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Lambert\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert",UE="uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\n#if defined( USE_LIGHT_PROBES )\n	uniform vec3 lightProbe[ 9 ];\n#endif\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n	float x = normal.x, y = normal.y, z = normal.z;\n	vec3 result = shCoefficients[ 0 ] * 0.886227;\n	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n	return result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n	return irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	return irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n	if ( cutoffDistance > 0.0 ) {\n		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n	}\n	return distanceFalloff;\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n	return smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\n		light.color = directionalLight.color;\n		light.direction = directionalLight.direction;\n		light.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = pointLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		light.color = pointLight.color;\n		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n		light.visible = ( light.color != vec3( 0.0 ) );\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\n		vec3 lVector = spotLight.position - geometryPosition;\n		light.direction = normalize( lVector );\n		float angleCos = dot( light.direction, spotLight.direction );\n		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n		if ( spotAttenuation > 0.0 ) {\n			float lightDistance = length( lVector );\n			light.color = spotLight.color * spotAttenuation;\n			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n			light.visible = ( light.color != vec3( 0.0 ) );\n		} else {\n			light.color = vec3( 0.0 );\n			light.visible = false;\n		}\n	}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n	struct RectAreaLight {\n		vec3 color;\n		vec3 position;\n		vec3 halfWidth;\n		vec3 halfHeight;\n	};\n	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;\n	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n		float dotNL = dot( normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		return irradiance;\n	}\n#endif",FE="#ifdef USE_ENVMAP\n	vec3 getIBLIrradiance( const in vec3 normal ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );\n			return PI * envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n		#ifdef ENVMAP_TYPE_CUBE_UV\n			vec3 reflectVec = reflect( - viewDir, normal );\n			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );\n			return envMapColor.rgb * envMapIntensity;\n		#else\n			return vec3( 0.0 );\n		#endif\n	}\n	#ifdef USE_ANISOTROPY\n		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\n			#ifdef ENVMAP_TYPE_CUBE_UV\n				vec3 bentNormal = cross( bitangent, viewDir );\n				bentNormal = normalize( cross( bentNormal, bitangent ) );\n				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\n				return getIBLRadiance( viewDir, bentNormal, roughness );\n			#else\n				return vec3( 0.0 );\n			#endif\n		}\n	#endif\n#endif",BE="ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",zE="varying vec3 vViewPosition;\nstruct ToonMaterial {\n	vec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_Toon\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon",kE="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",VE="varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n	vec3 diffuseColor;\n	vec3 specularColor;\n	float specularShininess;\n	float specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong",HE="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n	material.ior = ior;\n	#ifdef USE_SPECULAR\n		float specularIntensityFactor = specularIntensity;\n		vec3 specularColorFactor = specularColor;\n		#ifdef USE_SPECULAR_COLORMAP\n			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n		#endif\n		#ifdef USE_SPECULAR_INTENSITYMAP\n			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n		#endif\n		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n	#else\n		float specularIntensityFactor = 1.0;\n		vec3 specularColorFactor = vec3( 1.0 );\n		material.specularF90 = 1.0;\n	#endif\n	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n	material.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n	material.clearcoat = clearcoat;\n	material.clearcoatRoughness = clearcoatRoughness;\n	material.clearcoatF0 = vec3( 0.04 );\n	material.clearcoatF90 = 1.0;\n	#ifdef USE_CLEARCOATMAP\n		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n	#endif\n	#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n	#endif\n	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n	material.clearcoatRoughness += geometryRoughness;\n	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_DISPERSION\n	material.dispersion = dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	material.iridescence = iridescence;\n	material.iridescenceIOR = iridescenceIOR;\n	#ifdef USE_IRIDESCENCEMAP\n		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n	#endif\n	#ifdef USE_IRIDESCENCE_THICKNESSMAP\n		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n	#else\n		material.iridescenceThickness = iridescenceThicknessMaximum;\n	#endif\n#endif\n#ifdef USE_SHEEN\n	material.sheenColor = sheenColor;\n	#ifdef USE_SHEEN_COLORMAP\n		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n	#endif\n	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	#ifdef USE_ANISOTROPYMAP\n		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\n		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\n		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\n	#else\n		vec2 anisotropyV = anisotropyVector;\n	#endif\n	material.anisotropy = length( anisotropyV );\n	if( material.anisotropy == 0.0 ) {\n		anisotropyV = vec2( 1.0, 0.0 );\n	} else {\n		anisotropyV /= material.anisotropy;\n		material.anisotropy = saturate( material.anisotropy );\n	}\n	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\n	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\n	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\n#endif",GE="struct PhysicalMaterial {\n	vec3 diffuseColor;\n	float roughness;\n	vec3 specularColor;\n	float specularF90;\n	float dispersion;\n	#ifdef USE_CLEARCOAT\n		float clearcoat;\n		float clearcoatRoughness;\n		vec3 clearcoatF0;\n		float clearcoatF90;\n	#endif\n	#ifdef USE_IRIDESCENCE\n		float iridescence;\n		float iridescenceIOR;\n		float iridescenceThickness;\n		vec3 iridescenceFresnel;\n		vec3 iridescenceF0;\n	#endif\n	#ifdef USE_SHEEN\n		vec3 sheenColor;\n		float sheenRoughness;\n	#endif\n	#ifdef IOR\n		float ior;\n	#endif\n	#ifdef USE_TRANSMISSION\n		float transmission;\n		float transmissionAlpha;\n		float thickness;\n		float attenuationDistance;\n		vec3 attenuationColor;\n	#endif\n	#ifdef USE_ANISOTROPY\n		float anisotropy;\n		float alphaT;\n		vec3 anisotropyT;\n		vec3 anisotropyB;\n	#endif\n};\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\nvec3 sheenSpecularDirect = vec3( 0.0 );\nvec3 sheenSpecularIndirect = vec3(0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_ANISOTROPY\n	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\n		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\n		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\n		float v = 0.5 / ( gv + gl );\n		return saturate(v);\n	}\n	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\n		float a2 = alphaT * alphaB;\n		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\n		highp float v2 = dot( v, v );\n		float w2 = a2 / v2;\n		return RECIPROCAL_PI * a2 * pow2 ( w2 );\n	}\n#endif\n#ifdef USE_CLEARCOAT\n	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n		vec3 f0 = material.clearcoatF0;\n		float f90 = material.clearcoatF90;\n		float roughness = material.clearcoatRoughness;\n		float alpha = pow2( roughness );\n		vec3 halfDir = normalize( lightDir + viewDir );\n		float dotNL = saturate( dot( normal, lightDir ) );\n		float dotNV = saturate( dot( normal, viewDir ) );\n		float dotNH = saturate( dot( normal, halfDir ) );\n		float dotVH = saturate( dot( viewDir, halfDir ) );\n		vec3 F = F_Schlick( f0, f90, dotVH );\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n		return F * ( V * D );\n	}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n	vec3 f0 = material.specularColor;\n	float f90 = material.specularF90;\n	float roughness = material.roughness;\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotVH = saturate( dot( viewDir, halfDir ) );\n	vec3 F = F_Schlick( f0, f90, dotVH );\n	#ifdef USE_IRIDESCENCE\n		F = mix( F, material.iridescenceFresnel, material.iridescence );\n	#endif\n	#ifdef USE_ANISOTROPY\n		float dotTL = dot( material.anisotropyT, lightDir );\n		float dotTV = dot( material.anisotropyT, viewDir );\n		float dotTH = dot( material.anisotropyT, halfDir );\n		float dotBL = dot( material.anisotropyB, lightDir );\n		float dotBV = dot( material.anisotropyB, viewDir );\n		float dotBH = dot( material.anisotropyB, halfDir );\n		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\n		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\n	#else\n		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n		float D = D_GGX( alpha, dotNH );\n	#endif\n	return F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n	const float LUT_SIZE = 64.0;\n	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n	const float LUT_BIAS = 0.5 / LUT_SIZE;\n	float dotNV = saturate( dot( N, V ) );\n	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n	uv = uv * LUT_SCALE + LUT_BIAS;\n	return uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n	float l = length( f );\n	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n	float x = dot( v1, v2 );\n	float y = abs( x );\n	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n	float b = 3.4175940 + ( 4.1616724 + y ) * y;\n	float v = a / b;\n	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n	return cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n	vec3 lightNormal = cross( v1, v2 );\n	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n	vec3 T1, T2;\n	T1 = normalize( V - N * dot( V, N ) );\n	T2 = - cross( N, T1 );\n	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n	vec3 coords[ 4 ];\n	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n	coords[ 0 ] = normalize( coords[ 0 ] );\n	coords[ 1 ] = normalize( coords[ 1 ] );\n	coords[ 2 ] = normalize( coords[ 2 ] );\n	coords[ 3 ] = normalize( coords[ 3 ] );\n	vec3 vectorFormFactor = vec3( 0.0 );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n	return vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n	float alpha = pow2( roughness );\n	float invAlpha = 1.0 / alpha;\n	float cos2h = dotNH * dotNH;\n	float sin2h = max( 1.0 - cos2h, 0.0078125 );\n	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n	vec3 halfDir = normalize( lightDir + viewDir );\n	float dotNL = saturate( dot( normal, lightDir ) );\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float D = D_Charlie( sheenRoughness, dotNH );\n	float V = V_Neubelt( dotNV, dotNL );\n	return sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	float r2 = roughness * roughness;\n	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n	return saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n	float dotNV = saturate( dot( normal, viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n	return fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	return specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n	vec2 fab = DFGApprox( normal, viewDir, roughness );\n	#ifdef USE_IRIDESCENCE\n		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n	#else\n		vec3 Fr = specularColor;\n	#endif\n	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n	float Ess = fab.x + fab.y;\n	float Ems = 1.0 - Ess;\n	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n	singleScatter += FssEss;\n	multiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n		vec3 normal = geometryNormal;\n		vec3 viewDir = geometryViewDir;\n		vec3 position = geometryPosition;\n		vec3 lightPos = rectAreaLight.position;\n		vec3 halfWidth = rectAreaLight.halfWidth;\n		vec3 halfHeight = rectAreaLight.halfHeight;\n		vec3 lightColor = rectAreaLight.color;\n		float roughness = material.roughness;\n		vec3 rectCoords[ 4 ];\n		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n		vec2 uv = LTC_Uv( normal, viewDir, roughness );\n		vec4 t1 = texture2D( ltc_1, uv );\n		vec4 t2 = texture2D( ltc_2, uv );\n		mat3 mInv = mat3(\n			vec3( t1.x, 0, t1.y ),\n			vec3(    0, 1,    0 ),\n			vec3( t1.z, 0, t1.w )\n		);\n		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n	}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifdef USE_CLEARCOAT\n		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\n		vec3 ccIrradiance = dotNLcc * directLight.color;\n		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\n	#endif\n	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\n	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n	#ifdef USE_CLEARCOAT\n		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n	#endif\n	#ifdef USE_SHEEN\n		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\n	#endif\n	vec3 singleScattering = vec3( 0.0 );\n	vec3 multiScattering = vec3( 0.0 );\n	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n	#ifdef USE_IRIDESCENCE\n		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n	#else\n		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n	#endif\n	vec3 totalScattering = singleScattering + multiScattering;\n	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n	reflectedLight.indirectSpecular += radiance * singleScattering;\n	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_Direct_RectArea		RE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",WE="\nvec3 geometryPosition = - vViewPosition;\nvec3 geometryNormal = normal;\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\nvec3 geometryClearcoatNormal = vec3( 0.0 );\n#ifdef USE_CLEARCOAT\n	geometryClearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n	float dotNVi = saturate( dot( normal, geometryViewDir ) );\n	if ( material.iridescenceThickness == 0.0 ) {\n		material.iridescence = 0.0;\n	} else {\n		material.iridescence = saturate( material.iridescence );\n	}\n	if ( material.iridescence > 0.0 ) {\n		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n	}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointLightInfo( pointLight, geometryPosition, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n		pointLightShadow = pointLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	vec4 spotColor;\n	vec3 spotLightCoord;\n	bool inSpotLightMap;\n	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotLightInfo( spotLight, geometryPosition, directLight );\n		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n		#else\n		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n		#endif\n		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n		#endif\n		#undef SPOT_LIGHT_MAP_INDEX\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n		spotLightShadow = spotLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLightShadow;\n	#endif\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalLightInfo( directionalLight, directLight );\n		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n		directionalLightShadow = directionalLightShadows[ i ];\n		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n	RectAreaLight rectAreaLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n		rectAreaLight = rectAreaLights[ i ];\n		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n	}\n	#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 iblIrradiance = vec3( 0.0 );\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#if defined( USE_LIGHT_PROBES )\n		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if defined( RE_IndirectSpecular )\n	vec3 radiance = vec3( 0.0 );\n	vec3 clearcoatRadiance = vec3( 0.0 );\n#endif",XE="#if defined( RE_IndirectDiffuse )\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n		irradiance += lightMapIrradiance;\n	#endif\n	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n		iblIrradiance += getIBLIrradiance( geometryNormal );\n	#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	#ifdef USE_ANISOTROPY\n		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\n	#else\n		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\n	#endif\n	#ifdef USE_CLEARCOAT\n		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\n	#endif\n#endif",$E="#if defined( RE_IndirectDiffuse )\n	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\n#endif",YE="#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\n	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",qE="#if defined( USE_LOGARITHMIC_DEPTH_BUFFER )\n	uniform float logDepthBufFC;\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",jE="#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\n	varying float vFragDepth;\n	varying float vIsPerspective;\n#endif",ZE="#ifdef USE_LOGARITHMIC_DEPTH_BUFFER\n	vFragDepth = 1.0 + gl_Position.w;\n	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n#endif",JE="#ifdef USE_MAP\n	vec4 sampledDiffuseColor = texture2D( map, vMapUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );\n	#endif\n	diffuseColor *= sampledDiffuseColor;\n#endif",KE="#ifdef USE_MAP\n	uniform sampler2D map;\n#endif",QE="#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n	#if defined( USE_POINTS_UV )\n		vec2 uv = vUv;\n	#else\n		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n	#endif\n#endif\n#ifdef USE_MAP\n	diffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",tA="#if defined( USE_POINTS_UV )\n	varying vec2 vUv;\n#else\n	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n		uniform mat3 uvTransform;\n	#endif\n#endif\n#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif",eA="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n	metalnessFactor *= texelMetalness.b;\n#endif",nA="#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",iA="#ifdef USE_INSTANCING_MORPH\n	float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;\n	}\n#endif",rA="#if defined( USE_MORPHCOLORS )\n	vColor *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		#if defined( USE_COLOR_ALPHA )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n		#elif defined( USE_COLOR )\n			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n		#endif\n	}\n#endif",sA="#ifdef USE_MORPHNORMALS\n	objectNormal *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n	}\n#endif",oA="#ifdef USE_MORPHTARGETS\n	#ifndef USE_INSTANCING_MORPH\n		uniform float morphTargetBaseInfluence;\n		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n	#endif\n	uniform sampler2DArray morphTargetsTexture;\n	uniform ivec2 morphTargetsTextureSize;\n	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n		int y = texelIndex / morphTargetsTextureSize.x;\n		int x = texelIndex - y * morphTargetsTextureSize.x;\n		ivec3 morphUV = ivec3( x, y, morphTargetIndex );\n		return texelFetch( morphTargetsTexture, morphUV, 0 );\n	}\n#endif",aA="#ifdef USE_MORPHTARGETS\n	transformed *= morphTargetBaseInfluence;\n	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n	}\n#endif",lA="float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal );\n	#ifdef DOUBLE_SIDED\n		normal *= faceDirection;\n	#endif\n#endif\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\n	#ifdef USE_TANGENT\n		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn = getTangentFrame( - vViewPosition, normal,\n		#if defined( USE_NORMALMAP )\n			vNormalMapUv\n		#elif defined( USE_CLEARCOAT_NORMALMAP )\n			vClearcoatNormalMapUv\n		#else\n			vUv\n		#endif\n		);\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn[0] *= faceDirection;\n		tbn[1] *= faceDirection;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	#ifdef USE_TANGENT\n		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n	#else\n		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n	#endif\n	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n		tbn2[0] *= faceDirection;\n		tbn2[1] *= faceDirection;\n	#endif\n#endif\nvec3 nonPerturbedNormal = normal;",cA="#ifdef USE_NORMALMAP_OBJECTSPACE\n	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	#ifdef FLIP_SIDED\n		normal = - normal;\n	#endif\n	#ifdef DOUBLE_SIDED\n		normal = normal * faceDirection;\n	#endif\n	normal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n	mapN.xy *= normalScale;\n	normal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",uA="#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",hA="#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n	#ifdef USE_TANGENT\n		varying vec3 vTangent;\n		varying vec3 vBitangent;\n	#endif\n#endif",dA="#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n	#ifdef USE_TANGENT\n		vTangent = normalize( transformedTangent );\n		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n	#endif\n#endif",fA="#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n	uniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\n	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( uv.st );\n		vec2 st1 = dFdy( uv.st );\n		vec3 N = surf_norm;\n		vec3 q1perp = cross( q1, N );\n		vec3 q0perp = cross( N, q0 );\n		vec3 T = q1perp * st0.x + q0perp * st1.x;\n		vec3 B = q1perp * st0.y + q0perp * st1.y;\n		float det = max( dot( T, T ), dot( B, B ) );\n		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n		return mat3( T * scale, B * scale, N );\n	}\n#endif",pA="#ifdef USE_CLEARCOAT\n	vec3 clearcoatNormal = nonPerturbedNormal;\n#endif",mA="#ifdef USE_CLEARCOAT_NORMALMAP\n	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n	clearcoatMapN.xy *= clearcoatNormalScale;\n	clearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",gA="#ifdef USE_CLEARCOATMAP\n	uniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform sampler2D clearcoatNormalMap;\n	uniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform sampler2D clearcoatRoughnessMap;\n#endif",yA="#ifdef USE_IRIDESCENCEMAP\n	uniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform sampler2D iridescenceThicknessMap;\n#endif",_A="#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",vA="vec3 packNormalToRGB( const in vec3 normal ) {\n	return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n	return 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;\nconst float Inv255 = 1. / 255.;\nconst vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );\nconst vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );\nconst vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );\nconst vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );\nvec4 packDepthToRGBA( const in float v ) {\n	if( v <= 0.0 )\n		return vec4( 0., 0., 0., 0. );\n	if( v >= 1.0 )\n		return vec4( 1., 1., 1., 1. );\n	float vuf;\n	float af = modf( v * PackFactors.a, vuf );\n	float bf = modf( vuf * ShiftRight8, vuf );\n	float gf = modf( vuf * ShiftRight8, vuf );\n	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );\n}\nvec3 packDepthToRGB( const in float v ) {\n	if( v <= 0.0 )\n		return vec3( 0., 0., 0. );\n	if( v >= 1.0 )\n		return vec3( 1., 1., 1. );\n	float vuf;\n	float bf = modf( v * PackFactors.b, vuf );\n	float gf = modf( vuf * ShiftRight8, vuf );\n	return vec3( vuf * Inv255, gf * PackUpscale, bf );\n}\nvec2 packDepthToRG( const in float v ) {\n	if( v <= 0.0 )\n		return vec2( 0., 0. );\n	if( v >= 1.0 )\n		return vec2( 1., 1. );\n	float vuf;\n	float gf = modf( v * 256., vuf );\n	return vec2( vuf * Inv255, gf );\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors4 );\n}\nfloat unpackRGBToDepth( const in vec3 v ) {\n	return dot( v, UnpackFactors3 );\n}\nfloat unpackRGToDepth( const in vec2 v ) {\n	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;\n}\nvec4 pack2HalfToRGBA( const in vec2 v ) {\n	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( const in vec4 v ) {\n	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n	return ( near * far ) / ( ( far - near ) * depth - far );\n}",xA="#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif",bA="vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_BATCHING\n	mvPosition = batchingMatrix * mvPosition;\n#endif\n#ifdef USE_INSTANCING\n	mvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",MA="#ifdef DITHERING\n	gl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",SA="#ifdef DITHERING\n	vec3 dithering( vec3 color ) {\n		float grid_position = rand( gl_FragCoord.xy );\n		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n		return color + dither_shift_RGB;\n	}\n#endif",wA="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n	roughnessFactor *= texelRoughness.g;\n#endif",TA="#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",EA="#if NUM_SPOT_LIGHT_COORDS > 0\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n		struct SpotLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );\n		#ifdef USE_REVERSED_DEPTH_BUFFER\n			return step( depth, compare );\n		#else\n			return step( compare, depth );\n		#endif\n	}\n	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n		return unpackRGBATo2Half( texture2D( shadow, uv ) );\n	}\n	float VSMShadow( sampler2D shadow, vec2 uv, float compare ) {\n		float occlusion = 1.0;\n		vec2 distribution = texture2DDistribution( shadow, uv );\n		#ifdef USE_REVERSED_DEPTH_BUFFER\n			float hard_shadow = step( distribution.x, compare );\n		#else\n			float hard_shadow = step( compare, distribution.x );\n		#endif\n		if ( hard_shadow != 1.0 ) {\n			float distance = compare - distribution.x;\n			float variance = max( 0.00000, distribution.y * distribution.y );\n			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n		}\n		return occlusion;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		float shadow = 1.0;\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			float dx2 = dx0 / 2.0;\n			float dy2 = dy0 / 2.0;\n			float dx3 = dx1 / 2.0;\n			float dy3 = dy1 / 2.0;\n			shadow = (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 17.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx = texelSize.x;\n			float dy = texelSize.y;\n			vec2 uv = shadowCoord.xy;\n			vec2 f = fract( uv * shadowMapSize + 0.5 );\n			uv -= f * texelSize;\n			shadow = (\n				texture2DCompare( shadowMap, uv, shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n					 f.x ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n					 f.y ) +\n				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n						  f.x ),\n					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n						  f.x ),\n					 f.y )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_VSM )\n			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#else\n			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return mix( 1.0, shadow, shadowIntensity );\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n		float shadow = 1.0;\n		vec3 lightToPosition = shadowCoord.xyz;\n		\n		float lightToPositionLength = length( lightToPosition );\n		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {\n			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;\n			vec3 bd3D = normalize( lightToPosition );\n			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n				shadow = (\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n				) * ( 1.0 / 9.0 );\n			#else\n				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n			#endif\n		}\n		return mix( 1.0, shadow, shadowIntensity );\n	}\n#endif",AA="#if NUM_SPOT_LIGHT_COORDS > 0\n	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n		struct DirectionalLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n		struct SpotLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n		};\n		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n		struct PointLightShadow {\n			float shadowIntensity;\n			float shadowBias;\n			float shadowNormalBias;\n			float shadowRadius;\n			vec2 shadowMapSize;\n			float shadowCameraNear;\n			float shadowCameraFar;\n		};\n		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n	#endif\n#endif",CA="#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n	vec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n		#pragma unroll_loop_start\n		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n		}\n		#pragma unroll_loop_end\n	#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n		shadowWorldPosition = worldPosition;\n		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n		#endif\n		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n	}\n	#pragma unroll_loop_end\n#endif",RA="float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHT_SHADOWS > 0\n	DirectionalLightShadow directionalLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n		directionalLight = directionalLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_SPOT_LIGHT_SHADOWS > 0\n	SpotLightShadow spotLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n		spotLight = spotLightShadows[ i ];\n		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#if NUM_POINT_LIGHT_SHADOWS > 0\n	PointLightShadow pointLight;\n	#pragma unroll_loop_start\n	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n		pointLight = pointLightShadows[ i ];\n		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n	}\n	#pragma unroll_loop_end\n	#endif\n	#endif\n	return shadow;\n}",IA="#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",NA="#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	uniform highp sampler2D boneTexture;\n	mat4 getBoneMatrix( const in float i ) {\n		int size = textureSize( boneTexture, 0 ).x;\n		int j = int( i ) * 4;\n		int x = j % size;\n		int y = j / size;\n		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\n		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\n		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\n		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\n		return mat4( v1, v2, v3, v4 );\n	}\n#endif",PA="#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	transformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",LA="#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n	#ifdef USE_TANGENT\n		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n	#endif\n#endif",DA="float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",OA="#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",UA="#if defined( TONE_MAPPING )\n	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",FA="#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n	return saturate( toneMappingExposure * color );\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	return saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 CineonToneMapping( vec3 color ) {\n	color *= toneMappingExposure;\n	color = max( vec3( 0.0 ), color - 0.004 );\n	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n	return a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n	const mat3 ACESInputMat = mat3(\n		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),\n		vec3( 0.04823, 0.01566, 0.83777 )\n	);\n	const mat3 ACESOutputMat = mat3(\n		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),\n		vec3( -0.07367, -0.00605,  1.07602 )\n	);\n	color *= toneMappingExposure / 0.6;\n	color = ACESInputMat * color;\n	color = RRTAndODTFit( color );\n	color = ACESOutputMat * color;\n	return saturate( color );\n}\nconst mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(\n	vec3( 1.6605, - 0.1246, - 0.0182 ),\n	vec3( - 0.5876, 1.1329, - 0.1006 ),\n	vec3( - 0.0728, - 0.0083, 1.1187 )\n);\nconst mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(\n	vec3( 0.6274, 0.0691, 0.0164 ),\n	vec3( 0.3293, 0.9195, 0.0880 ),\n	vec3( 0.0433, 0.0113, 0.8956 )\n);\nvec3 agxDefaultContrastApprox( vec3 x ) {\n	vec3 x2 = x * x;\n	vec3 x4 = x2 * x2;\n	return + 15.5 * x4 * x2\n		- 40.14 * x4 * x\n		+ 31.96 * x4\n		- 6.868 * x2 * x\n		+ 0.4298 * x2\n		+ 0.1191 * x\n		- 0.00232;\n}\nvec3 AgXToneMapping( vec3 color ) {\n	const mat3 AgXInsetMatrix = mat3(\n		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),\n		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),\n		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )\n	);\n	const mat3 AgXOutsetMatrix = mat3(\n		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),\n		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),\n		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )\n	);\n	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;\n	color *= toneMappingExposure;\n	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;\n	color = AgXInsetMatrix * color;\n	color = max( color, 1e-10 );	color = log2( color );\n	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );\n	color = clamp( color, 0.0, 1.0 );\n	color = agxDefaultContrastApprox( color );\n	color = AgXOutsetMatrix * color;\n	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );\n	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;\n	color = clamp( color, 0.0, 1.0 );\n	return color;\n}\nvec3 NeutralToneMapping( vec3 color ) {\n	const float StartCompression = 0.8 - 0.04;\n	const float Desaturation = 0.15;\n	color *= toneMappingExposure;\n	float x = min( color.r, min( color.g, color.b ) );\n	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;\n	color -= offset;\n	float peak = max( color.r, max( color.g, color.b ) );\n	if ( peak < StartCompression ) return color;\n	float d = 1. - StartCompression;\n	float newPeak = 1. - d * d / ( peak + d - StartCompression );\n	color *= newPeak / peak;\n	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );\n	return mix( color, vec3( newPeak ), g );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",BA="#ifdef USE_TRANSMISSION\n	material.transmission = transmission;\n	material.transmissionAlpha = 1.0;\n	material.thickness = thickness;\n	material.attenuationDistance = attenuationDistance;\n	material.attenuationColor = attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n	#endif\n	vec3 pos = vWorldPosition;\n	vec3 v = normalize( cameraPosition - pos );\n	vec3 n = inverseTransformDirection( normal, viewMatrix );\n	vec4 transmitted = getIBLVolumeRefraction(\n		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,\n		material.attenuationColor, material.attenuationDistance );\n	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\n	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\n#endif",zA="#ifdef USE_TRANSMISSION\n	uniform float transmission;\n	uniform float thickness;\n	uniform float attenuationDistance;\n	uniform vec3 attenuationColor;\n	#ifdef USE_TRANSMISSIONMAP\n		uniform sampler2D transmissionMap;\n	#endif\n	#ifdef USE_THICKNESSMAP\n		uniform sampler2D thicknessMap;\n	#endif\n	uniform vec2 transmissionSamplerSize;\n	uniform sampler2D transmissionSamplerMap;\n	uniform mat4 modelMatrix;\n	uniform mat4 projectionMatrix;\n	varying vec3 vWorldPosition;\n	float w0( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n	}\n	float w1( float a ) {\n		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n	}\n	float w2( float a ){\n		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n	}\n	float w3( float a ) {\n		return ( 1.0 / 6.0 ) * ( a * a * a );\n	}\n	float g0( float a ) {\n		return w0( a ) + w1( a );\n	}\n	float g1( float a ) {\n		return w2( a ) + w3( a );\n	}\n	float h0( float a ) {\n		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n	}\n	float h1( float a ) {\n		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n	}\n	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n		uv = uv * texelSize.zw + 0.5;\n		vec2 iuv = floor( uv );\n		vec2 fuv = fract( uv );\n		float g0x = g0( fuv.x );\n		float g1x = g1( fuv.x );\n		float h0x = h0( fuv.x );\n		float h1x = h1( fuv.x );\n		float h0y = h0( fuv.y );\n		float h1y = h1( fuv.y );\n		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n	}\n	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n		vec2 fLodSizeInv = 1.0 / fLodSize;\n		vec2 cLodSizeInv = 1.0 / cLodSize;\n		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n		return mix( fSample, cSample, fract( lod ) );\n	}\n	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n		vec3 modelScale;\n		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n		return normalize( refractionVector ) * thickness * modelScale;\n	}\n	float applyIorToRoughness( const in float roughness, const in float ior ) {\n		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n	}\n	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n	}\n	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n		if ( isinf( attenuationDistance ) ) {\n			return vec3( 1.0 );\n		} else {\n			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;\n		}\n	}\n	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,\n		const in vec3 attenuationColor, const in float attenuationDistance ) {\n		vec4 transmittedLight;\n		vec3 transmittance;\n		#ifdef USE_DISPERSION\n			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;\n			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );\n			for ( int i = 0; i < 3; i ++ ) {\n				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );\n				vec3 refractedRayExit = position + transmissionRay;\n				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n				vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n				refractionCoords += 1.0;\n				refractionCoords /= 2.0;\n				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );\n				transmittedLight[ i ] = transmissionSample[ i ];\n				transmittedLight.a += transmissionSample.a;\n				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];\n			}\n			transmittedLight.a /= 3.0;\n		#else\n			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n			vec3 refractedRayExit = position + transmissionRay;\n			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n			vec2 refractionCoords = ndcPos.xy / ndcPos.w;\n			refractionCoords += 1.0;\n			refractionCoords /= 2.0;\n			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\n		#endif\n		vec3 attenuatedColor = transmittance * transmittedLight.rgb;\n		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\n		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\n	}\n#endif",kA="#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",VA="#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	varying vec2 vUv;\n#endif\n#ifdef USE_MAP\n	uniform mat3 mapTransform;\n	varying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n	uniform mat3 alphaMapTransform;\n	varying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n	uniform mat3 lightMapTransform;\n	varying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n	uniform mat3 aoMapTransform;\n	varying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n	uniform mat3 bumpMapTransform;\n	varying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n	uniform mat3 normalMapTransform;\n	varying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	uniform mat3 displacementMapTransform;\n	varying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n	uniform mat3 emissiveMapTransform;\n	varying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n	uniform mat3 metalnessMapTransform;\n	varying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	uniform mat3 roughnessMapTransform;\n	varying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	uniform mat3 anisotropyMapTransform;\n	varying vec2 vAnisotropyMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n	uniform mat3 clearcoatMapTransform;\n	varying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	uniform mat3 clearcoatNormalMapTransform;\n	varying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	uniform mat3 clearcoatRoughnessMapTransform;\n	varying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	uniform mat3 sheenColorMapTransform;\n	varying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	uniform mat3 sheenRoughnessMapTransform;\n	varying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	uniform mat3 iridescenceMapTransform;\n	varying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	uniform mat3 iridescenceThicknessMapTransform;\n	varying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n	uniform mat3 specularMapTransform;\n	varying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	uniform mat3 specularColorMapTransform;\n	varying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	uniform mat3 specularIntensityMapTransform;\n	varying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	uniform mat3 transmissionMapTransform;\n	varying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n	uniform mat3 thicknessMapTransform;\n	varying vec2 vThicknessMapUv;\n#endif",HA="#if defined( USE_UV ) || defined( USE_ANISOTROPY )\n	vUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ANISOTROPYMAP\n	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",GA="#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n	vec4 worldPosition = vec4( transformed, 1.0 );\n	#ifdef USE_BATCHING\n		worldPosition = batchingMatrix * worldPosition;\n	#endif\n	#ifdef USE_INSTANCING\n		worldPosition = instanceMatrix * worldPosition;\n	#endif\n	worldPosition = modelMatrix * worldPosition;\n#endif";const WA="varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	gl_Position = vec4( position.xy, 1.0, 1.0 );\n}",XA="uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n	vec4 texColor = texture2D( t2D, vUv );\n	#ifdef DECODE_VIDEO_TEXTURE\n		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",$A="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",YA="#ifdef ENVMAP_TYPE_CUBE\n	uniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n	uniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nuniform mat3 backgroundRotation;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n	#elif defined( ENVMAP_TYPE_CUBE_UV )\n		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );\n	#else\n		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n	#endif\n	texColor.rgb *= backgroundIntensity;\n	gl_FragColor = texColor;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",qA="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n	gl_Position.z = gl_Position.w;\n}",jA="uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n	gl_FragColor = texColor;\n	gl_FragColor.a *= opacity;\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",ZA="#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vHighPrecisionZW = gl_Position.zw;\n}",JA="#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <logdepthbuf_fragment>\n	#ifdef USE_REVERSED_DEPTH_BUFFER\n		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];\n	#else\n		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;\n	#endif\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( fragCoordZ );\n	#elif DEPTH_PACKING == 3202\n		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );\n	#elif DEPTH_PACKING == 3203\n		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );\n	#endif\n}",KA="#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <skinbase_vertex>\n	#include <morphinstance_vertex>\n	#ifdef USE_DISPLACEMENTMAP\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition.xyz;\n}",QA="#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	vec4 diffuseColor = vec4( 1.0 );\n	#include <clipping_planes_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	float dist = length( vWorldPosition - referencePosition );\n	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n	dist = saturate( dist );\n	gl_FragColor = packDepthToRGBA( dist );\n}",tC="varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vWorldDirection = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}",eC="uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldDirection );\n	vec2 sampleUV = equirectUv( direction );\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n}",nC="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vLineDistance = scale * lineDistance;\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",iC="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",rC="#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n		#include <beginnormal_vertex>\n		#include <morphnormal_vertex>\n		#include <skinbase_vertex>\n		#include <skinnormal_vertex>\n		#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <fog_vertex>\n}",sC="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	#ifdef USE_LIGHTMAP\n		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n	#else\n		reflectedLight.indirectDiffuse += vec3( 1.0 );\n	#endif\n	#include <aomap_fragment>\n	reflectedLight.indirectDiffuse *= diffuseColor.rgb;\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",oC="#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",aC="#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_lambert_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",lC="#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n	vViewPosition = - mvPosition.xyz;\n}",cC="#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	vec3 viewDir = normalize( vViewPosition );\n	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n	vec3 y = cross( viewDir, x );\n	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n	#ifdef USE_MATCAP\n		vec4 matcapColor = texture2D( matcap, uv );\n	#else\n		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n	#endif\n	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",uC="#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	vViewPosition = - mvPosition.xyz;\n#endif\n}",hC="#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n	varying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );\n	#include <clipping_planes_fragment>\n	#include <logdepthbuf_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );\n	#ifdef OPAQUE\n		gl_FragColor.a = 1.0;\n	#endif\n}",dC="#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",fC="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <specularmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",pC="#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n	varying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n	vWorldPosition = worldPosition.xyz;\n#endif\n}",mC="#define STANDARD\n#ifdef PHYSICAL\n	#define IOR\n	#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n	uniform float ior;\n#endif\n#ifdef USE_SPECULAR\n	uniform float specularIntensity;\n	uniform vec3 specularColor;\n	#ifdef USE_SPECULAR_COLORMAP\n		uniform sampler2D specularColorMap;\n	#endif\n	#ifdef USE_SPECULAR_INTENSITYMAP\n		uniform sampler2D specularIntensityMap;\n	#endif\n#endif\n#ifdef USE_CLEARCOAT\n	uniform float clearcoat;\n	uniform float clearcoatRoughness;\n#endif\n#ifdef USE_DISPERSION\n	uniform float dispersion;\n#endif\n#ifdef USE_IRIDESCENCE\n	uniform float iridescence;\n	uniform float iridescenceIOR;\n	uniform float iridescenceThicknessMinimum;\n	uniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n	uniform vec3 sheenColor;\n	uniform float sheenRoughness;\n	#ifdef USE_SHEEN_COLORMAP\n		uniform sampler2D sheenColorMap;\n	#endif\n	#ifdef USE_SHEEN_ROUGHNESSMAP\n		uniform sampler2D sheenRoughnessMap;\n	#endif\n#endif\n#ifdef USE_ANISOTROPY\n	uniform vec2 anisotropyVector;\n	#ifdef USE_ANISOTROPYMAP\n		uniform sampler2D anisotropyMap;\n	#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <clearcoat_normal_fragment_begin>\n	#include <clearcoat_normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n	#include <transmission_fragment>\n	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n	#ifdef USE_SHEEN\n		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\n	#endif\n	#ifdef USE_CLEARCOAT\n		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\n		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\n	#endif\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",gC="#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <batching_pars_vertex>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <normal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <displacementmap_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",yC="#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	#include <normal_fragment_begin>\n	#include <normal_fragment_maps>\n	#include <emissivemap_fragment>\n	#include <lights_toon_fragment>\n	#include <lights_fragment_begin>\n	#include <lights_fragment_maps>\n	#include <lights_fragment_end>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n	#include <dithering_fragment>\n}",_C="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n	varying vec2 vUv;\n	uniform mat3 uvTransform;\n#endif\nvoid main() {\n	#ifdef USE_POINTS_UV\n		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n	#endif\n	#include <color_vertex>\n	#include <morphinstance_vertex>\n	#include <morphcolor_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	gl_PointSize = size;\n	#ifdef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <fog_vertex>\n}",vC="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n	#include <premultiplied_alpha_fragment>\n}",xC="#include <common>\n#include <batching_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <batching_vertex>\n	#include <beginnormal_vertex>\n	#include <morphinstance_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n	#include <fog_vertex>\n}",bC="uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	#include <logdepthbuf_fragment>\n	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",MC="uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	vec4 mvPosition = modelViewMatrix[ 3 ];\n	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );\n	#ifndef USE_SIZEATTENUATION\n		bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n		if ( isPerspective ) scale *= - mvPosition.z;\n	#endif\n	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n	vec2 rotatedPosition;\n	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n	mvPosition.xy += rotatedPosition;\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <fog_vertex>\n}",SC="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <alphahash_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <alphahash_fragment>\n	outgoingLight = diffuseColor.rgb;\n	#include <opaque_fragment>\n	#include <tonemapping_fragment>\n	#include <colorspace_fragment>\n	#include <fog_fragment>\n}",he={alphahash_fragment:XT,alphahash_pars_fragment:$T,alphamap_fragment:YT,alphamap_pars_fragment:qT,alphatest_fragment:jT,alphatest_pars_fragment:ZT,aomap_fragment:JT,aomap_pars_fragment:KT,batching_pars_vertex:QT,batching_vertex:tE,begin_vertex:eE,beginnormal_vertex:nE,bsdfs:iE,iridescence_fragment:rE,bumpmap_pars_fragment:sE,clipping_planes_fragment:oE,clipping_planes_pars_fragment:aE,clipping_planes_pars_vertex:lE,clipping_planes_vertex:cE,color_fragment:uE,color_pars_fragment:hE,color_pars_vertex:dE,color_vertex:fE,common:pE,cube_uv_reflection_fragment:mE,defaultnormal_vertex:gE,displacementmap_pars_vertex:yE,displacementmap_vertex:_E,emissivemap_fragment:vE,emissivemap_pars_fragment:xE,colorspace_fragment:bE,colorspace_pars_fragment:ME,envmap_fragment:SE,envmap_common_pars_fragment:wE,envmap_pars_fragment:TE,envmap_pars_vertex:EE,envmap_physical_pars_fragment:FE,envmap_vertex:AE,fog_vertex:CE,fog_pars_vertex:RE,fog_fragment:IE,fog_pars_fragment:NE,gradientmap_pars_fragment:PE,lightmap_pars_fragment:LE,lights_lambert_fragment:DE,lights_lambert_pars_fragment:OE,lights_pars_begin:UE,lights_toon_fragment:BE,lights_toon_pars_fragment:zE,lights_phong_fragment:kE,lights_phong_pars_fragment:VE,lights_physical_fragment:HE,lights_physical_pars_fragment:GE,lights_fragment_begin:WE,lights_fragment_maps:XE,lights_fragment_end:$E,logdepthbuf_fragment:YE,logdepthbuf_pars_fragment:qE,logdepthbuf_pars_vertex:jE,logdepthbuf_vertex:ZE,map_fragment:JE,map_pars_fragment:KE,map_particle_fragment:QE,map_particle_pars_fragment:tA,metalnessmap_fragment:eA,metalnessmap_pars_fragment:nA,morphinstance_vertex:iA,morphcolor_vertex:rA,morphnormal_vertex:sA,morphtarget_pars_vertex:oA,morphtarget_vertex:aA,normal_fragment_begin:lA,normal_fragment_maps:cA,normal_pars_fragment:uA,normal_pars_vertex:hA,normal_vertex:dA,normalmap_pars_fragment:fA,clearcoat_normal_fragment_begin:pA,clearcoat_normal_fragment_maps:mA,clearcoat_pars_fragment:gA,iridescence_pars_fragment:yA,opaque_fragment:_A,packing:vA,premultiplied_alpha_fragment:xA,project_vertex:bA,dithering_fragment:MA,dithering_pars_fragment:SA,roughnessmap_fragment:wA,roughnessmap_pars_fragment:TA,shadowmap_pars_fragment:EA,shadowmap_pars_vertex:AA,shadowmap_vertex:CA,shadowmask_pars_fragment:RA,skinbase_vertex:IA,skinning_pars_vertex:NA,skinning_vertex:PA,skinnormal_vertex:LA,specularmap_fragment:DA,specularmap_pars_fragment:OA,tonemapping_fragment:UA,tonemapping_pars_fragment:FA,transmission_fragment:BA,transmission_pars_fragment:zA,uv_pars_fragment:kA,uv_pars_vertex:VA,uv_vertex:HA,worldpos_vertex:GA,background_vert:WA,background_frag:XA,backgroundCube_vert:$A,backgroundCube_frag:YA,cube_vert:qA,cube_frag:jA,depth_vert:ZA,depth_frag:JA,distanceRGBA_vert:KA,distanceRGBA_frag:QA,equirect_vert:tC,equirect_frag:eC,linedashed_vert:nC,linedashed_frag:iC,meshbasic_vert:rC,meshbasic_frag:sC,meshlambert_vert:oC,meshlambert_frag:aC,meshmatcap_vert:lC,meshmatcap_frag:cC,meshnormal_vert:uC,meshnormal_frag:hC,meshphong_vert:dC,meshphong_frag:fC,meshphysical_vert:pC,meshphysical_frag:mC,meshtoon_vert:gC,meshtoon_frag:yC,points_vert:_C,points_frag:vC,shadow_vert:xC,shadow_frag:bC,sprite_vert:MC,sprite_frag:SC},Ct={common:{diffuse:{value:new At(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new le},alphaMap:{value:null},alphaMapTransform:{value:new le},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new le}},envmap:{envMap:{value:null},envMapRotation:{value:new le},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new le}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new le}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new le},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new le},normalScale:{value:new at(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new le},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new le}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new le}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new le}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new At(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new At(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new le},alphaTest:{value:0},uvTransform:{value:new le}},sprite:{diffuse:{value:new At(16777215)},opacity:{value:1},center:{value:new at(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new le},alphaMap:{value:null},alphaMapTransform:{value:new le},alphaTest:{value:0}}},wi={basic:{uniforms:En([Ct.common,Ct.specularmap,Ct.envmap,Ct.aomap,Ct.lightmap,Ct.fog]),vertexShader:he.meshbasic_vert,fragmentShader:he.meshbasic_frag},lambert:{uniforms:En([Ct.common,Ct.specularmap,Ct.envmap,Ct.aomap,Ct.lightmap,Ct.emissivemap,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.fog,Ct.lights,{emissive:{value:new At(0)}}]),vertexShader:he.meshlambert_vert,fragmentShader:he.meshlambert_frag},phong:{uniforms:En([Ct.common,Ct.specularmap,Ct.envmap,Ct.aomap,Ct.lightmap,Ct.emissivemap,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.fog,Ct.lights,{emissive:{value:new At(0)},specular:{value:new At(1118481)},shininess:{value:30}}]),vertexShader:he.meshphong_vert,fragmentShader:he.meshphong_frag},standard:{uniforms:En([Ct.common,Ct.envmap,Ct.aomap,Ct.lightmap,Ct.emissivemap,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.roughnessmap,Ct.metalnessmap,Ct.fog,Ct.lights,{emissive:{value:new At(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:he.meshphysical_vert,fragmentShader:he.meshphysical_frag},toon:{uniforms:En([Ct.common,Ct.aomap,Ct.lightmap,Ct.emissivemap,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.gradientmap,Ct.fog,Ct.lights,{emissive:{value:new At(0)}}]),vertexShader:he.meshtoon_vert,fragmentShader:he.meshtoon_frag},matcap:{uniforms:En([Ct.common,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,Ct.fog,{matcap:{value:null}}]),vertexShader:he.meshmatcap_vert,fragmentShader:he.meshmatcap_frag},points:{uniforms:En([Ct.points,Ct.fog]),vertexShader:he.points_vert,fragmentShader:he.points_frag},dashed:{uniforms:En([Ct.common,Ct.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:he.linedashed_vert,fragmentShader:he.linedashed_frag},depth:{uniforms:En([Ct.common,Ct.displacementmap]),vertexShader:he.depth_vert,fragmentShader:he.depth_frag},normal:{uniforms:En([Ct.common,Ct.bumpmap,Ct.normalmap,Ct.displacementmap,{opacity:{value:1}}]),vertexShader:he.meshnormal_vert,fragmentShader:he.meshnormal_frag},sprite:{uniforms:En([Ct.sprite,Ct.fog]),vertexShader:he.sprite_vert,fragmentShader:he.sprite_frag},background:{uniforms:{uvTransform:{value:new le},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:he.background_vert,fragmentShader:he.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new le}},vertexShader:he.backgroundCube_vert,fragmentShader:he.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:he.cube_vert,fragmentShader:he.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:he.equirect_vert,fragmentShader:he.equirect_frag},distanceRGBA:{uniforms:En([Ct.common,Ct.displacementmap,{referencePosition:{value:new L},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:he.distanceRGBA_vert,fragmentShader:he.distanceRGBA_frag},shadow:{uniforms:En([Ct.lights,Ct.fog,{color:{value:new At(0)},opacity:{value:1}}]),vertexShader:he.shadow_vert,fragmentShader:he.shadow_frag}};wi.physical={uniforms:En([wi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new le},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new le},clearcoatNormalScale:{value:new at(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new le},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new le},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new le},sheen:{value:0},sheenColor:{value:new At(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new le},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new le},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new le},transmissionSamplerSize:{value:new at},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new le},attenuationDistance:{value:0},attenuationColor:{value:new At(0)},specularColor:{value:new At(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new le},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new le},anisotropyVector:{value:new at},anisotropyMap:{value:null},anisotropyMapTransform:{value:new le}}]),vertexShader:he.meshphysical_vert,fragmentShader:he.meshphysical_frag};const Tc={r:0,b:0,g:0},ss=new si,wC=new jt;function TC(r,t,e,n,i,s,o){const a=new At(0);let l=s===!0?0:1,c,u,h=null,d=0,f=null;function p(b){let M=b.isScene===!0?b.background:null;return M&&M.isTexture&&(M=(b.backgroundBlurriness>0?e:t).get(M)),M}function y(b){let M=!1;const A=p(b);A===null?g(a,l):A&&A.isColor&&(g(A,1),M=!0);const S=r.xr.getEnvironmentBlendMode();S==="additive"?n.buffers.color.setClear(0,0,0,1,o):S==="alpha-blend"&&n.buffers.color.setClear(0,0,0,0,o),(r.autoClear||M)&&(n.buffers.depth.setTest(!0),n.buffers.depth.setMask(!0),n.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function m(b,M){const A=p(M);A&&(A.isCubeTexture||A.mapping===Xo)?(u===void 0&&(u=new Ue(new Ls(1,1,1),new $n({name:"BackgroundCubeMaterial",uniforms:Uo(wi.backgroundCube.uniforms),vertexShader:wi.backgroundCube.vertexShader,fragmentShader:wi.backgroundCube.fragmentShader,side:Pn,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(S,E,x){this.matrixWorld.copyPosition(x.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(u)),ss.copy(M.backgroundRotation),ss.x*=-1,ss.y*=-1,ss.z*=-1,A.isCubeTexture&&A.isRenderTargetTexture===!1&&(ss.y*=-1,ss.z*=-1),u.material.uniforms.envMap.value=A,u.material.uniforms.flipEnvMap.value=A.isCubeTexture&&A.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=M.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=M.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(wC.makeRotationFromEuler(ss)),u.material.toneMapped=ve.getTransfer(A.colorSpace)!==Ee,(h!==A||d!==A.version||f!==r.toneMapping)&&(u.material.needsUpdate=!0,h=A,d=A.version,f=r.toneMapping),u.layers.enableAll(),b.unshift(u,u.geometry,u.material,0,0,null)):A&&A.isTexture&&(c===void 0&&(c=new Ue(new Ds(2,2),new $n({name:"BackgroundMaterial",uniforms:Uo(wi.background.uniforms),vertexShader:wi.background.vertexShader,fragmentShader:wi.background.fragmentShader,side:pr,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=A,c.material.uniforms.backgroundIntensity.value=M.backgroundIntensity,c.material.toneMapped=ve.getTransfer(A.colorSpace)!==Ee,A.matrixAutoUpdate===!0&&A.updateMatrix(),c.material.uniforms.uvTransform.value.copy(A.matrix),(h!==A||d!==A.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,h=A,d=A.version,f=r.toneMapping),c.layers.enableAll(),b.unshift(c,c.geometry,c.material,0,0,null))}function g(b,M){b.getRGB(Tc,Sv(r)),n.buffers.color.setClear(Tc.r,Tc.g,Tc.b,M,o)}function w(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(b,M=1){a.set(b),l=M,g(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(b){l=b,g(a,l)},render:y,addToRenderList:m,dispose:w}}function EC(r,t){const e=r.getParameter(r.MAX_VERTEX_ATTRIBS),n={},i=d(null);let s=i,o=!1;function a(_,T,I,B,V){let H=!1;const U=h(B,I,T);s!==U&&(s=U,c(s.object)),H=f(_,B,I,V),H&&p(_,B,I,V),V!==null&&t.update(V,r.ELEMENT_ARRAY_BUFFER),(H||o)&&(o=!1,M(_,T,I,B),V!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(V).buffer))}function l(){return r.createVertexArray()}function c(_){return r.bindVertexArray(_)}function u(_){return r.deleteVertexArray(_)}function h(_,T,I){const B=I.wireframe===!0;let V=n[_.id];V===void 0&&(V={},n[_.id]=V);let H=V[T.id];H===void 0&&(H={},V[T.id]=H);let U=H[B];return U===void 0&&(U=d(l()),H[B]=U),U}function d(_){const T=[],I=[],B=[];for(let V=0;V<e;V++)T[V]=0,I[V]=0,B[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:T,enabledAttributes:I,attributeDivisors:B,object:_,attributes:{},index:null}}function f(_,T,I,B){const V=s.attributes,H=T.attributes;let U=0;const Q=I.getAttributes();for(const W in Q)if(Q[W].location>=0){const ut=V[W];let mt=H[W];if(mt===void 0&&(W==="instanceMatrix"&&_.instanceMatrix&&(mt=_.instanceMatrix),W==="instanceColor"&&_.instanceColor&&(mt=_.instanceColor)),ut===void 0||ut.attribute!==mt||mt&&ut.data!==mt.data)return!0;U++}return s.attributesNum!==U||s.index!==B}function p(_,T,I,B){const V={},H=T.attributes;let U=0;const Q=I.getAttributes();for(const W in Q)if(Q[W].location>=0){let ut=H[W];ut===void 0&&(W==="instanceMatrix"&&_.instanceMatrix&&(ut=_.instanceMatrix),W==="instanceColor"&&_.instanceColor&&(ut=_.instanceColor));const mt={};mt.attribute=ut,ut&&ut.data&&(mt.data=ut.data),V[W]=mt,U++}s.attributes=V,s.attributesNum=U,s.index=B}function y(){const _=s.newAttributes;for(let T=0,I=_.length;T<I;T++)_[T]=0}function m(_){g(_,0)}function g(_,T){const I=s.newAttributes,B=s.enabledAttributes,V=s.attributeDivisors;I[_]=1,B[_]===0&&(r.enableVertexAttribArray(_),B[_]=1),V[_]!==T&&(r.vertexAttribDivisor(_,T),V[_]=T)}function w(){const _=s.newAttributes,T=s.enabledAttributes;for(let I=0,B=T.length;I<B;I++)T[I]!==_[I]&&(r.disableVertexAttribArray(I),T[I]=0)}function b(_,T,I,B,V,H,U){U===!0?r.vertexAttribIPointer(_,T,I,V,H):r.vertexAttribPointer(_,T,I,B,V,H)}function M(_,T,I,B){y();const V=B.attributes,H=I.getAttributes(),U=T.defaultAttributeValues;for(const Q in H){const W=H[Q];if(W.location>=0){let lt=V[Q];if(lt===void 0&&(Q==="instanceMatrix"&&_.instanceMatrix&&(lt=_.instanceMatrix),Q==="instanceColor"&&_.instanceColor&&(lt=_.instanceColor)),lt!==void 0){const ut=lt.normalized,mt=lt.itemSize,Xt=t.get(lt);if(Xt===void 0)continue;const te=Xt.buffer,qt=Xt.type,$t=Xt.bytesPerElement,ct=qt===r.INT||qt===r.UNSIGNED_INT||lt.gpuType===sh;if(lt.isInterleavedBufferAttribute){const pt=lt.data,K=pt.stride,R=lt.offset;if(pt.isInstancedInterleavedBuffer){for(let D=0;D<W.locationSize;D++)g(W.location+D,pt.meshPerAttribute);_.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=pt.meshPerAttribute*pt.count)}else for(let D=0;D<W.locationSize;D++)m(W.location+D);r.bindBuffer(r.ARRAY_BUFFER,te);for(let D=0;D<W.locationSize;D++)b(W.location+D,mt/W.locationSize,qt,ut,K*$t,(R+mt/W.locationSize*D)*$t,ct)}else{if(lt.isInstancedBufferAttribute){for(let pt=0;pt<W.locationSize;pt++)g(W.location+pt,lt.meshPerAttribute);_.isInstancedMesh!==!0&&B._maxInstanceCount===void 0&&(B._maxInstanceCount=lt.meshPerAttribute*lt.count)}else for(let pt=0;pt<W.locationSize;pt++)m(W.location+pt);r.bindBuffer(r.ARRAY_BUFFER,te);for(let pt=0;pt<W.locationSize;pt++)b(W.location+pt,mt/W.locationSize,qt,ut,mt*$t,mt/W.locationSize*pt*$t,ct)}}else if(U!==void 0){const ut=U[Q];if(ut!==void 0)switch(ut.length){case 2:r.vertexAttrib2fv(W.location,ut);break;case 3:r.vertexAttrib3fv(W.location,ut);break;case 4:r.vertexAttrib4fv(W.location,ut);break;default:r.vertexAttrib1fv(W.location,ut)}}}}w()}function A(){x();for(const _ in n){const T=n[_];for(const I in T){const B=T[I];for(const V in B)u(B[V].object),delete B[V];delete T[I]}delete n[_]}}function S(_){if(n[_.id]===void 0)return;const T=n[_.id];for(const I in T){const B=T[I];for(const V in B)u(B[V].object),delete B[V];delete T[I]}delete n[_.id]}function E(_){for(const T in n){const I=n[T];if(I[_.id]===void 0)continue;const B=I[_.id];for(const V in B)u(B[V].object),delete B[V];delete I[_.id]}}function x(){v(),o=!0,s!==i&&(s=i,c(s.object))}function v(){i.geometry=null,i.program=null,i.wireframe=!1}return{setup:a,reset:x,resetDefaultState:v,dispose:A,releaseStatesOfGeometry:S,releaseStatesOfProgram:E,initAttributes:y,enableAttribute:m,disableUnusedAttributes:w}}function AC(r,t,e){let n;function i(c){n=c}function s(c,u){r.drawArrays(n,c,u),e.update(u,n,1)}function o(c,u,h){h!==0&&(r.drawArraysInstanced(n,c,u,h),e.update(u,n,h))}function a(c,u,h){if(h===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(n,c,0,u,0,h);let f=0;for(let p=0;p<h;p++)f+=u[p];e.update(f,n,1)}function l(c,u,h,d){if(h===0)return;const f=t.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],u[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(n,c,0,u,0,d,0,h);let p=0;for(let y=0;y<h;y++)p+=u[y]*d[y];e.update(p,n,1)}}this.setMode=i,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function CC(r,t,e,n){let i;function s(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const E=t.get("EXT_texture_filter_anisotropic");i=r.getParameter(E.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function o(E){return!(E!==Nn&&n.convert(E)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(E){const x=E===Ps&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(E!==Ci&&n.convert(E)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&E!==Gn&&!x)}function l(E){if(E==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";E="mediump"}return E==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=e.precision!==void 0?e.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=e.logarithmicDepthBuffer===!0,d=e.reversedDepthBuffer===!0&&t.has("EXT_clip_control"),f=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),y=r.getParameter(r.MAX_TEXTURE_SIZE),m=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),g=r.getParameter(r.MAX_VERTEX_ATTRIBS),w=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),b=r.getParameter(r.MAX_VARYING_VECTORS),M=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),A=p>0,S=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:h,reversedDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:y,maxCubemapSize:m,maxAttributes:g,maxVertexUniforms:w,maxVaryings:b,maxFragmentUniforms:M,vertexTextures:A,maxSamples:S}}function RC(r){const t=this;let e=null,n=0,i=!1,s=!1;const o=new Hn,a=new le,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||n!==0||i;return i=d,n=h.length,f},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,d){e=u(h,d,0)},this.setState=function(h,d,f){const p=h.clippingPlanes,y=h.clipIntersection,m=h.clipShadows,g=r.get(h);if(!i||p===null||p.length===0||s&&!m)s?u(null):c();else{const w=s?0:n,b=w*4;let M=g.clippingState||null;l.value=M,M=u(p,d,b,f);for(let A=0;A!==b;++A)M[A]=e[A];g.clippingState=M,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=w}};function c(){l.value!==e&&(l.value=e,l.needsUpdate=n>0),t.numPlanes=n,t.numIntersection=0}function u(h,d,f,p){const y=h!==null?h.length:0;let m=null;if(y!==0){if(m=l.value,p!==!0||m===null){const g=f+y*4,w=d.matrixWorldInverse;a.getNormalMatrix(w),(m===null||m.length<g)&&(m=new Float32Array(g));for(let b=0,M=f;b!==y;++b,M+=4)o.copy(h[b]).applyMatrix4(w,a),o.normal.toArray(m,M),m[M+3]=o.constant}l.value=m,l.needsUpdate=!0}return t.numPlanes=y,t.numIntersection=0,m}}function IC(r){let t=new WeakMap;function e(o,a){return a===ka?o.mapping=mr:a===Va&&(o.mapping=Br),o}function n(o){if(o&&o.isTexture){const a=o.mapping;if(a===ka||a===Va)if(t.has(o)){const l=t.get(o).texture;return e(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Tv(l.height);return c.fromEquirectangularTexture(r,o),t.set(o,c),o.addEventListener("dispose",i),e(c.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const l=t.get(a);l!==void 0&&(t.delete(a),l.dispose())}function s(){t=new WeakMap}return{get:n,dispose:s}}const Mo=4,ey=[.125,.215,.35,.446,.526,.582],ds=20,Ud=new ur,ny=new At;let Fd=null,Bd=0,zd=0,kd=!1;const us=(1+Math.sqrt(5))/2,ao=1/us,iy=[new L(-us,ao,0),new L(us,ao,0),new L(-ao,0,us),new L(ao,0,us),new L(0,us,-ao),new L(0,us,ao),new L(-1,1,-1),new L(1,1,-1),new L(-1,1,1),new L(1,1,1)],NC=new L;class Nf{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,n=.1,i=100,s={}){const{size:o=256,position:a=NC}=s;Fd=this._renderer.getRenderTarget(),Bd=this._renderer.getActiveCubeFace(),zd=this._renderer.getActiveMipmapLevel(),kd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(t,n,i,l,a),e>0&&this._blur(l,0,0,e),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=oy(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=sy(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Fd,Bd,zd),this._renderer.xr.enabled=kd,t.scissorTest=!1,Ec(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===mr||t.mapping===Br?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Fd=this._renderer.getRenderTarget(),Bd=this._renderer.getActiveCubeFace(),zd=this._renderer.getActiveMipmapLevel(),kd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const n=e||this._allocateTargets();return this._textureToCubeUV(t,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,n={magFilter:nn,minFilter:nn,generateMipmaps:!1,type:Ps,format:Nn,colorSpace:Rs,depthBuffer:!1},i=ry(t,e,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ry(t,e,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=PC(s)),this._blurMaterial=LC(s,t,e)}return i}_compileMaterial(t){const e=new Ue(this._lodPlanes[0],t);this._renderer.compile(e,Ud)}_sceneToCubeUV(t,e,n,i,s){const l=new Fe(90,1,e,n),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.toneMapping;h.getClearColor(ny),h.toneMapping=Gi,h.autoClear=!1,h.state.buffers.depth.getReversed()&&(h.setRenderTarget(i),h.clearDepth(),h.setRenderTarget(null));const y=new vr({name:"PMREM.Background",side:Pn,depthWrite:!1,depthTest:!1}),m=new Ue(new Ls,y);let g=!1;const w=t.background;w?w.isColor&&(y.color.copy(w),t.background=null,g=!0):(y.color.copy(ny),g=!0);for(let b=0;b<6;b++){const M=b%3;M===0?(l.up.set(0,c[b],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+u[b],s.y,s.z)):M===1?(l.up.set(0,0,c[b]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+u[b],s.z)):(l.up.set(0,c[b],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+u[b]));const A=this._cubeSize;Ec(i,M*A,b>2?A:0,A,A),h.setRenderTarget(i),g&&h.render(m,l),h.render(t,l)}m.geometry.dispose(),m.material.dispose(),h.toneMapping=f,h.autoClear=d,t.background=w}_textureToCubeUV(t,e){const n=this._renderer,i=t.mapping===mr||t.mapping===Br;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=oy()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=sy());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new Ue(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=t;const l=this._cubeSize;Ec(e,0,0,3*l,2*l),n.setRenderTarget(e),n.render(o,Ud)}_applyPMREM(t){const e=this._renderer,n=e.autoClear;e.autoClear=!1;const i=this._lodPlanes.length;for(let s=1;s<i;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=iy[(i-s-1)%iy.length];this._blur(t,s-1,s,o,a)}e.autoClear=n}_blur(t,e,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,n,i,"latitudinal",s),this._halfBlur(o,t,n,n,i,"longitudinal",s)}_halfBlur(t,e,n,i,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new Ue(this._lodPlanes[i],c),d=c.uniforms,f=this._sizeLods[n]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*ds-1),y=s/p,m=isFinite(s)?1+Math.floor(u*y):ds;m>ds&&console.warn("sigmaRadians, ".concat(s,", is too large and will clip, as it requested ").concat(m," samples when the maximum is set to ").concat(ds));const g=[];let w=0;for(let E=0;E<ds;++E){const x=E/y,v=Math.exp(-x*x/2);g.push(v),E===0?w+=v:E<m&&(w+=2*v)}for(let E=0;E<g.length;E++)g[E]=g[E]/w;d.envMap.value=t.texture,d.samples.value=m,d.weights.value=g,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:b}=this;d.dTheta.value=p,d.mipInt.value=b-n;const M=this._sizeLods[i],A=3*M*(i>b-Mo?i-b+Mo:0),S=4*(this._cubeSize-M);Ec(e,A,S,3*M,2*M),l.setRenderTarget(e),l.render(h,Ud)}}function PC(r){const t=[],e=[],n=[];let i=r;const s=r-Mo+1+ey.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);e.push(a);let l=1/a;o>r-Mo?l=ey[o-r+Mo-1]:o===0&&(l=0),n.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,y=3,m=2,g=1,w=new Float32Array(y*p*f),b=new Float32Array(m*p*f),M=new Float32Array(g*p*f);for(let S=0;S<f;S++){const E=S%3*2/3-1,x=S>2?0:-1,v=[E,x,0,E+2/3,x,0,E+2/3,x+1,0,E,x,0,E+2/3,x+1,0,E,x+1,0];w.set(v,y*p*S),b.set(d,m*p*S);const _=[S,S,S,S,S,S];M.set(_,g*p*S)}const A=new ce;A.setAttribute("position",new Te(w,y)),A.setAttribute("uv",new Te(b,m)),A.setAttribute("faceIndex",new Te(M,g)),t.push(A),i>Mo&&i--}return{lodPlanes:t,sizeLods:e,sigmas:n}}function ry(r,t,e){const n=new Ri(r,t,e);return n.texture.mapping=Xo,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ec(r,t,e,n,i){r.viewport.set(t,e,n,i),r.scissor.set(t,e,n,i)}function LC(r,t,e){const n=new Float32Array(ds),i=new L(0,1,0);return new $n({name:"SphericalGaussianBlur",defines:{n:ds,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:"".concat(r,".0")},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Jp(),fragmentShader:"\n\n			precision mediump float;\n			precision mediump int;\n\n			varying vec3 vOutputDirection;\n\n			uniform sampler2D envMap;\n			uniform int samples;\n			uniform float weights[ n ];\n			uniform bool latitudinal;\n			uniform float dTheta;\n			uniform float mipInt;\n			uniform vec3 poleAxis;\n\n			#define ENVMAP_TYPE_CUBE_UV\n			#include <cube_uv_reflection_fragment>\n\n			vec3 getSample( float theta, vec3 axis ) {\n\n				float cosTheta = cos( theta );\n				// Rodrigues' axis-angle rotation\n				vec3 sampleDirection = vOutputDirection * cosTheta\n					+ cross( axis, vOutputDirection ) * sin( theta )\n					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n				return bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n			}\n\n			void main() {\n\n				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n				}\n\n				axis = normalize( axis );\n\n				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n				for ( int i = 1; i < n; i++ ) {\n\n					if ( i >= samples ) {\n\n						break;\n\n					}\n\n					float theta = dTheta * float( i );\n					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n				}\n\n			}\n		",blending:lr,depthTest:!1,depthWrite:!1})}function sy(){return new $n({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Jp(),fragmentShader:"\n\n			precision mediump float;\n			precision mediump int;\n\n			varying vec3 vOutputDirection;\n\n			uniform sampler2D envMap;\n\n			#include <common>\n\n			void main() {\n\n				vec3 outputDirection = normalize( vOutputDirection );\n				vec2 uv = equirectUv( outputDirection );\n\n				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n			}\n		",blending:lr,depthTest:!1,depthWrite:!1})}function oy(){return new $n({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Jp(),fragmentShader:"\n\n			precision mediump float;\n			precision mediump int;\n\n			uniform float flipEnvMap;\n\n			varying vec3 vOutputDirection;\n\n			uniform samplerCube envMap;\n\n			void main() {\n\n				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n			}\n		",blending:lr,depthTest:!1,depthWrite:!1})}function Jp(){return"\n\n		precision mediump float;\n		precision mediump int;\n\n		attribute float faceIndex;\n\n		varying vec3 vOutputDirection;\n\n		// RH coordinate system; PMREM face-indexing convention\n		vec3 getDirection( vec2 uv, float face ) {\n\n			uv = 2.0 * uv - 1.0;\n\n			vec3 direction = vec3( uv, 1.0 );\n\n			if ( face == 0.0 ) {\n\n				direction = direction.zyx; // ( 1, v, u ) pos x\n\n			} else if ( face == 1.0 ) {\n\n				direction = direction.xzy;\n				direction.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n			} else if ( face == 2.0 ) {\n\n				direction.x *= -1.0; // ( -u, v, 1 ) pos z\n\n			} else if ( face == 3.0 ) {\n\n				direction = direction.zyx;\n				direction.xz *= -1.0; // ( -1, v, -u ) neg x\n\n			} else if ( face == 4.0 ) {\n\n				direction = direction.xzy;\n				direction.xy *= -1.0; // ( -u, -1, v ) neg y\n\n			} else if ( face == 5.0 ) {\n\n				direction.z *= -1.0; // ( u, v, -1 ) neg z\n\n			}\n\n			return direction;\n\n		}\n\n		void main() {\n\n			vOutputDirection = getDirection( uv, faceIndex );\n			gl_Position = vec4( position, 1.0 );\n\n		}\n	"}function DC(r){let t=new WeakMap,e=null;function n(a){if(a&&a.isTexture){const l=a.mapping,c=l===ka||l===Va,u=l===mr||l===Br;if(c||u){let h=t.get(a);const d=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return e===null&&(e=new Nf(r)),h=c?e.fromEquirectangular(a,h):e.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,t.set(a,h),h.texture;if(h!==void 0)return h.texture;{const f=a.image;return c&&f&&f.height>0||u&&f&&i(f)?(e===null&&(e=new Nf(r)),h=c?e.fromEquirectangular(a):e.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,t.set(a,h),a.addEventListener("dispose",s),h.texture):null}}}return a}function i(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=t.get(l);c!==void 0&&(t.delete(l),c.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:n,dispose:o}}function OC(r){const t={};function e(n){if(t[n]!==void 0)return t[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return t[n]=i,i}return{has:function(n){return e(n)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(n){const i=e(n);return i===null&&ja("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function UC(r,t,e,n){const i={},s=new WeakMap;function o(h){const d=h.target;d.index!==null&&t.remove(d.index);for(const p in d.attributes)t.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete i[d.id];const f=s.get(d);f&&(t.remove(f),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(h,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,e.memory.geometries++),d}function l(h){const d=h.attributes;for(const f in d)t.update(d[f],r.ARRAY_BUFFER)}function c(h){const d=[],f=h.index,p=h.attributes.position;let y=0;if(f!==null){const w=f.array;y=f.version;for(let b=0,M=w.length;b<M;b+=3){const A=w[b+0],S=w[b+1],E=w[b+2];d.push(A,S,S,E,E,A)}}else if(p!==void 0){const w=p.array;y=p.version;for(let b=0,M=w.length/3-1;b<M;b+=3){const A=b+0,S=b+1,E=b+2;d.push(A,S,S,E,E,A)}}else return;const m=new(vv(d)?wp:Sp)(d,1);m.version=y;const g=s.get(h);g&&t.remove(g),s.set(h,m)}function u(h){const d=s.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function FC(r,t,e){let n;function i(d){n=d}let s,o;function a(d){s=d.type,o=d.bytesPerElement}function l(d,f){r.drawElements(n,f,s,d*o),e.update(f,n,1)}function c(d,f,p){p!==0&&(r.drawElementsInstanced(n,f,s,d*o,p),e.update(f,n,p))}function u(d,f,p){if(p===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(n,f,0,s,d,0,p);let m=0;for(let g=0;g<p;g++)m+=f[g];e.update(m,n,1)}function h(d,f,p,y){if(p===0)return;const m=t.get("WEBGL_multi_draw");if(m===null)for(let g=0;g<d.length;g++)c(d[g]/o,f[g],y[g]);else{m.multiDrawElementsInstancedWEBGL(n,f,0,s,d,0,y,0,p);let g=0;for(let w=0;w<p;w++)g+=f[w]*y[w];e.update(g,n,1)}}this.setMode=i,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function BC(r){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(e.calls++,o){case r.TRIANGLES:e.triangles+=a*(s/3);break;case r.LINES:e.lines+=a*(s/2);break;case r.LINE_STRIP:e.lines+=a*(s-1);break;case r.LINE_LOOP:e.lines+=a*s;break;case r.POINTS:e.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:i,update:n}}function zC(r,t,e){const n=new WeakMap,i=new _e;function s(o,a,l){const c=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let d=n.get(a);if(d===void 0||d.count!==h){let v=function(){E.dispose(),n.delete(a),a.removeEventListener("dispose",v)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,y=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],g=a.morphAttributes.normal||[],w=a.morphAttributes.color||[];let b=0;f===!0&&(b=1),p===!0&&(b=2),y===!0&&(b=3);let M=a.attributes.position.count*b,A=1;M>t.maxTextureSize&&(A=Math.ceil(M/t.maxTextureSize),M=t.maxTextureSize);const S=new Float32Array(M*A*4*h),E=new dh(S,M,A,h);E.type=Gn,E.needsUpdate=!0;const x=b*4;for(let _=0;_<h;_++){const T=m[_],I=g[_],B=w[_],V=M*A*4*_;for(let H=0;H<T.count;H++){const U=H*x;f===!0&&(i.fromBufferAttribute(T,H),S[V+U+0]=i.x,S[V+U+1]=i.y,S[V+U+2]=i.z,S[V+U+3]=0),p===!0&&(i.fromBufferAttribute(I,H),S[V+U+4]=i.x,S[V+U+5]=i.y,S[V+U+6]=i.z,S[V+U+7]=0),y===!0&&(i.fromBufferAttribute(B,H),S[V+U+8]=i.x,S[V+U+9]=i.y,S[V+U+10]=i.z,S[V+U+11]=B.itemSize===4?i.w:1)}}d={count:h,texture:E,size:new at(M,A)},n.set(a,d),a.addEventListener("dispose",v)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(r,"morphTexture",o.morphTexture,e);else{let f=0;for(let y=0;y<c.length;y++)f+=c[y];const p=a.morphTargetsRelative?1:1-f;l.getUniforms().setValue(r,"morphTargetBaseInfluence",p),l.getUniforms().setValue(r,"morphTargetInfluences",c)}l.getUniforms().setValue(r,"morphTargetsTexture",d.texture,e),l.getUniforms().setValue(r,"morphTargetsTextureSize",d.size)}return{update:s}}function kC(r,t,e,n){let i=new WeakMap;function s(l){const c=n.render.frame,u=l.geometry,h=t.get(l,u);if(i.get(h)!==c&&(t.update(h),i.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),i.get(l)!==c&&(e.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&e.update(l.instanceColor,r.ARRAY_BUFFER),i.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;i.get(d)!==c&&(d.update(),i.set(d,c))}return h}function o(){i=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),e.remove(c.instanceMatrix),c.instanceColor!==null&&e.remove(c.instanceColor)}return{update:s,dispose:o}}const wx=new Xe,ay=new Cp(1,1),Tx=new dh,Ex=new fh,Ax=new yl,ly=[],cy=[],uy=new Float32Array(16),hy=new Float32Array(9),dy=new Float32Array(4);function qo(r,t,e){const n=r[0];if(n<=0||n>0)return r;const i=t*e;let s=ly[i];if(s===void 0&&(s=new Float32Array(i),ly[i]=s),t!==0){n.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=e,r[o].toArray(s,a)}return s}function sn(r,t){if(r.length!==t.length)return!1;for(let e=0,n=r.length;e<n;e++)if(r[e]!==t[e])return!1;return!0}function on(r,t){for(let e=0,n=t.length;e<n;e++)r[e]=t[e]}function Uh(r,t){let e=cy[t];e===void 0&&(e=new Int32Array(t),cy[t]=e);for(let n=0;n!==t;++n)e[n]=r.allocateTextureUnit();return e}function VC(r,t){const e=this.cache;e[0]!==t&&(r.uniform1f(this.addr,t),e[0]=t)}function HC(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(sn(e,t))return;r.uniform2fv(this.addr,t),on(e,t)}}function GC(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(r.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(sn(e,t))return;r.uniform3fv(this.addr,t),on(e,t)}}function WC(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(sn(e,t))return;r.uniform4fv(this.addr,t),on(e,t)}}function XC(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(sn(e,t))return;r.uniformMatrix2fv(this.addr,!1,t),on(e,t)}else{if(sn(e,n))return;dy.set(n),r.uniformMatrix2fv(this.addr,!1,dy),on(e,n)}}function $C(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(sn(e,t))return;r.uniformMatrix3fv(this.addr,!1,t),on(e,t)}else{if(sn(e,n))return;hy.set(n),r.uniformMatrix3fv(this.addr,!1,hy),on(e,n)}}function YC(r,t){const e=this.cache,n=t.elements;if(n===void 0){if(sn(e,t))return;r.uniformMatrix4fv(this.addr,!1,t),on(e,t)}else{if(sn(e,n))return;uy.set(n),r.uniformMatrix4fv(this.addr,!1,uy),on(e,n)}}function qC(r,t){const e=this.cache;e[0]!==t&&(r.uniform1i(this.addr,t),e[0]=t)}function jC(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(sn(e,t))return;r.uniform2iv(this.addr,t),on(e,t)}}function ZC(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(sn(e,t))return;r.uniform3iv(this.addr,t),on(e,t)}}function JC(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(sn(e,t))return;r.uniform4iv(this.addr,t),on(e,t)}}function KC(r,t){const e=this.cache;e[0]!==t&&(r.uniform1ui(this.addr,t),e[0]=t)}function QC(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(sn(e,t))return;r.uniform2uiv(this.addr,t),on(e,t)}}function tR(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(sn(e,t))return;r.uniform3uiv(this.addr,t),on(e,t)}}function eR(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(sn(e,t))return;r.uniform4uiv(this.addr,t),on(e,t)}}function nR(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i);let s;this.type===r.SAMPLER_2D_SHADOW?(ay.compareFunction=xp,s=ay):s=wx,e.setTexture2D(t||s,i)}function iR(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture3D(t||Ex,i)}function rR(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTextureCube(t||Ax,i)}function sR(r,t,e){const n=this.cache,i=e.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),e.setTexture2DArray(t||Tx,i)}function oR(r){switch(r){case 5126:return VC;case 35664:return HC;case 35665:return GC;case 35666:return WC;case 35674:return XC;case 35675:return $C;case 35676:return YC;case 5124:case 35670:return qC;case 35667:case 35671:return jC;case 35668:case 35672:return ZC;case 35669:case 35673:return JC;case 5125:return KC;case 36294:return QC;case 36295:return tR;case 36296:return eR;case 35678:case 36198:case 36298:case 36306:case 35682:return nR;case 35679:case 36299:case 36307:return iR;case 35680:case 36300:case 36308:case 36293:return rR;case 36289:case 36303:case 36311:case 36292:return sR}}function aR(r,t){r.uniform1fv(this.addr,t)}function lR(r,t){const e=qo(t,this.size,2);r.uniform2fv(this.addr,e)}function cR(r,t){const e=qo(t,this.size,3);r.uniform3fv(this.addr,e)}function uR(r,t){const e=qo(t,this.size,4);r.uniform4fv(this.addr,e)}function hR(r,t){const e=qo(t,this.size,4);r.uniformMatrix2fv(this.addr,!1,e)}function dR(r,t){const e=qo(t,this.size,9);r.uniformMatrix3fv(this.addr,!1,e)}function fR(r,t){const e=qo(t,this.size,16);r.uniformMatrix4fv(this.addr,!1,e)}function pR(r,t){r.uniform1iv(this.addr,t)}function mR(r,t){r.uniform2iv(this.addr,t)}function gR(r,t){r.uniform3iv(this.addr,t)}function yR(r,t){r.uniform4iv(this.addr,t)}function _R(r,t){r.uniform1uiv(this.addr,t)}function vR(r,t){r.uniform2uiv(this.addr,t)}function xR(r,t){r.uniform3uiv(this.addr,t)}function bR(r,t){r.uniform4uiv(this.addr,t)}function MR(r,t,e){const n=this.cache,i=t.length,s=Uh(e,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let o=0;o!==i;++o)e.setTexture2D(t[o]||wx,s[o])}function SR(r,t,e){const n=this.cache,i=t.length,s=Uh(e,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let o=0;o!==i;++o)e.setTexture3D(t[o]||Ex,s[o])}function wR(r,t,e){const n=this.cache,i=t.length,s=Uh(e,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let o=0;o!==i;++o)e.setTextureCube(t[o]||Ax,s[o])}function TR(r,t,e){const n=this.cache,i=t.length,s=Uh(e,i);sn(n,s)||(r.uniform1iv(this.addr,s),on(n,s));for(let o=0;o!==i;++o)e.setTexture2DArray(t[o]||Tx,s[o])}function ER(r){switch(r){case 5126:return aR;case 35664:return lR;case 35665:return cR;case 35666:return uR;case 35674:return hR;case 35675:return dR;case 35676:return fR;case 5124:case 35670:return pR;case 35667:case 35671:return mR;case 35668:case 35672:return gR;case 35669:case 35673:return yR;case 5125:return _R;case 36294:return vR;case 36295:return xR;case 36296:return bR;case 35678:case 36198:case 36298:case 36306:case 35682:return MR;case 35679:case 36299:case 36307:return SR;case 35680:case 36300:case 36308:case 36293:return wR;case 36289:case 36303:case 36311:case 36292:return TR}}class AR{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.setValue=oR(e.type)}}class CR{constructor(t,e,n){this.id=t,this.addr=n,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=ER(e.type)}}class RR{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const a=i[s];a.setValue(t,e[a.id],n)}}}const Vd=/(\w+)(\])?(\[|\.)?/g;function fy(r,t){r.seq.push(t),r.map[t.id]=t}function IR(r,t,e){const n=r.name,i=n.length;for(Vd.lastIndex=0;;){const s=Vd.exec(n),o=Vd.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===i){fy(e,c===void 0?new AR(a,r,t):new CR(a,r,t));break}else{let h=e.map[a];h===void 0&&(h=new RR(a),fy(e,h)),e=h}}}class qc{constructor(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=t.getActiveUniform(e,i),o=t.getUniformLocation(e,s.name);IR(s,o,this)}}setValue(t,e,n,i){const s=this.map[e];s!==void 0&&s.setValue(t,n,i)}setOptional(t,e,n){const i=e[n];i!==void 0&&this.setValue(t,n,i)}static upload(t,e,n,i){for(let s=0,o=e.length;s!==o;++s){const a=e[s],l=n[a.id];l.needsUpdate!==!1&&a.setValue(t,l.value,i)}}static seqWithValue(t,e){const n=[];for(let i=0,s=t.length;i!==s;++i){const o=t[i];o.id in e&&n.push(o)}return n}}function py(r,t,e){const n=r.createShader(t);return r.shaderSource(n,e),r.compileShader(n),n}const NR=37297;let PR=0;function LR(r,t){const e=r.split("\n"),n=[],i=Math.max(t-6,0),s=Math.min(t+6,e.length);for(let o=i;o<s;o++){const a=o+1;n.push("".concat(a===t?">":" "," ").concat(a,": ").concat(e[o]))}return n.join("\n")}const my=new le;function DR(r){ve._getMatrix(my,ve.workingColorSpace,r);const t="mat3( ".concat(my.elements.map(e=>e.toFixed(4))," )");switch(ve.getTransfer(r)){case $a:return[t,"LinearTransferOETF"];case Ee:return[t,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[t,"LinearTransferOETF"]}}function gy(r,t,e){const n=r.getShaderParameter(t,r.COMPILE_STATUS),s=(r.getShaderInfoLog(t)||"").trim();if(n&&s==="")return"";const o=/ERROR: 0:(\d+)/.exec(s);if(o){const a=parseInt(o[1]);return e.toUpperCase()+"\n\n"+s+"\n\n"+LR(r.getShaderSource(t),a)}else return s}function OR(r,t){const e=DR(t);return["vec4 ".concat(r,"( vec4 value ) {"),"	return ".concat(e[1],"( vec4( value.rgb * ").concat(e[0],", value.a ) );"),"}"].join("\n")}function UR(r,t){let e;switch(t){case Q0:e="Linear";break;case tv:e="Reinhard";break;case ev:e="Cineon";break;case up:e="ACESFilmic";break;case iv:e="AgX";break;case rv:e="Neutral";break;case nv:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+r+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Ac=new L;function FR(){ve.getLuminanceCoefficients(Ac);const r=Ac.x.toFixed(4),t=Ac.y.toFixed(4),e=Ac.z.toFixed(4);return["float luminance( const in vec3 rgb ) {","	const vec3 weights = vec3( ".concat(r,", ").concat(t,", ").concat(e," );"),"	return dot( weights, rgb );","}"].join("\n")}function BR(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Ta).join("\n")}function zR(r){const t=[];for(const e in r){const n=r[e];n!==!1&&t.push("#define "+e+" "+n)}return t.join("\n")}function kR(r,t){const e={},n=r.getProgramParameter(t,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(t,i),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),e[o]={type:s.type,location:r.getAttribLocation(t,o),locationSize:a}}return e}function Ta(r){return r!==""}function yy(r,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function _y(r,t){return r.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const VR=/^[ \t]*#include +<([\w\d./]+)>/gm;function Pf(r){return r.replace(VR,GR)}const HR=new Map;function GR(r,t){let e=he[t];if(e===void 0){const n=HR.get(t);if(n!==void 0)e=he[n],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,n);else throw new Error("Can not resolve #include <"+t+">")}return Pf(e)}const WR=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function vy(r){return r.replace(WR,XR)}function XR(r,t,e,n){let i="";for(let s=parseInt(t);s<parseInt(e);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function xy(r){let t="precision ".concat(r.precision," float;\n	precision ").concat(r.precision," int;\n	precision ").concat(r.precision," sampler2D;\n	precision ").concat(r.precision," samplerCube;\n	precision ").concat(r.precision," sampler3D;\n	precision ").concat(r.precision," sampler2DArray;\n	precision ").concat(r.precision," sampler2DShadow;\n	precision ").concat(r.precision," samplerCubeShadow;\n	precision ").concat(r.precision," sampler2DArrayShadow;\n	precision ").concat(r.precision," isampler2D;\n	precision ").concat(r.precision," isampler3D;\n	precision ").concat(r.precision," isamplerCube;\n	precision ").concat(r.precision," isampler2DArray;\n	precision ").concat(r.precision," usampler2D;\n	precision ").concat(r.precision," usampler3D;\n	precision ").concat(r.precision," usamplerCube;\n	precision ").concat(r.precision," usampler2DArray;\n	");return r.precision==="highp"?t+="\n#define HIGH_PRECISION":r.precision==="mediump"?t+="\n#define MEDIUM_PRECISION":r.precision==="lowp"&&(t+="\n#define LOW_PRECISION"),t}function $R(r){let t="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===lp?t="SHADOWMAP_TYPE_PCF":r.shadowMapType===cp?t="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===zi&&(t="SHADOWMAP_TYPE_VSM"),t}function YR(r){let t="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case mr:case Br:t="ENVMAP_TYPE_CUBE";break;case Xo:t="ENVMAP_TYPE_CUBE_UV";break}return t}function qR(r){let t="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Br:t="ENVMAP_MODE_REFRACTION";break}return t}function jR(r){let t="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case fl:t="ENVMAP_BLENDING_MULTIPLY";break;case J0:t="ENVMAP_BLENDING_MIX";break;case K0:t="ENVMAP_BLENDING_ADD";break}return t}function ZR(r){const t=r.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,n=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:n,maxMip:e}}function JR(r,t,e,n){const i=r.getContext(),s=e.defines;let o=e.vertexShader,a=e.fragmentShader;const l=$R(e),c=YR(e),u=qR(e),h=jR(e),d=ZR(e),f=BR(e),p=zR(s),y=i.createProgram();let m,g,w=e.glslVersion?"#version "+e.glslVersion+"\n":"";e.isRawShaderMaterial?(m=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p].filter(Ta).join("\n"),m.length>0&&(m+="\n"),g=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p].filter(Ta).join("\n"),g.length>0&&(g+="\n")):(m=[xy(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+u:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",e.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(Ta).join("\n"),g=[xy(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",e.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+l:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",e.logarithmicDepthBuffer?"#define USE_LOGARITHMIC_DEPTH_BUFFER":"",e.reversedDepthBuffer?"#define USE_REVERSED_DEPTH_BUFFER":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==Gi?"#define TONE_MAPPING":"",e.toneMapping!==Gi?he.tonemapping_pars_fragment:"",e.toneMapping!==Gi?UR("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",he.colorspace_pars_fragment,OR("linearToOutputTexel",e.outputColorSpace),FR(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"","\n"].filter(Ta).join("\n")),o=Pf(o),o=yy(o,e),o=_y(o,e),a=Pf(a),a=yy(a,e),a=_y(a,e),o=vy(o),a=vy(a),e.isRawShaderMaterial!==!0&&(w="#version 300 es\n",m=[f,"#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m,g=["#define varying in",e.glslVersion===Mf?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Mf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);const b=w+m+o,M=w+g+a,A=py(i,i.VERTEX_SHADER,b),S=py(i,i.FRAGMENT_SHADER,M);i.attachShader(y,A),i.attachShader(y,S),e.index0AttributeName!==void 0?i.bindAttribLocation(y,0,e.index0AttributeName):e.morphTargets===!0&&i.bindAttribLocation(y,0,"position"),i.linkProgram(y);function E(T){if(r.debug.checkShaderErrors){const I=i.getProgramInfoLog(y)||"",B=i.getShaderInfoLog(A)||"",V=i.getShaderInfoLog(S)||"",H=I.trim(),U=B.trim(),Q=V.trim();let W=!0,lt=!0;if(i.getProgramParameter(y,i.LINK_STATUS)===!1)if(W=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,y,A,S);else{const ut=gy(i,A,"vertex"),mt=gy(i,S,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(y,i.VALIDATE_STATUS)+"\n\nMaterial Name: "+T.name+"\nMaterial Type: "+T.type+"\n\nProgram Info Log: "+H+"\n"+ut+"\n"+mt)}else H!==""?console.warn("THREE.WebGLProgram: Program Info Log:",H):(U===""||Q==="")&&(lt=!1);lt&&(T.diagnostics={runnable:W,programLog:H,vertexShader:{log:U,prefix:m},fragmentShader:{log:Q,prefix:g}})}i.deleteShader(A),i.deleteShader(S),x=new qc(i,y),v=kR(i,y)}let x;this.getUniforms=function(){return x===void 0&&E(this),x};let v;this.getAttributes=function(){return v===void 0&&E(this),v};let _=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return _===!1&&(_=i.getProgramParameter(y,NR)),_},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(y),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=PR++,this.cacheKey=t,this.usedTimes=1,this.program=y,this.vertexShader=A,this.fragmentShader=S,this}let KR=0;class QR{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,n=t.fragmentShader,i=this._getShaderStage(e),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(t);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const n of e)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let n=e.get(t);return n===void 0&&(n=new Set,e.set(t,n)),n}_getShaderStage(t){const e=this.shaderCache;let n=e.get(t);return n===void 0&&(n=new t2(t),e.set(t,n)),n}}class t2{constructor(t){this.id=KR++,this.code=t,this.usedTimes=0}}function e2(r,t,e,n,i,s,o){const a=new gl,l=new QR,c=new Set,u=[],h=i.logarithmicDepthBuffer,d=i.vertexTextures;let f=i.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(v){return c.add(v),v===0?"uv":"uv".concat(v)}function m(v,_,T,I,B){const V=I.fog,H=B.geometry,U=v.isMeshStandardMaterial?I.environment:null,Q=(v.isMeshStandardMaterial?e:t).get(v.envMap||U),W=Q&&Q.mapping===Xo?Q.image.height:null,lt=p[v.type];v.precision!==null&&(f=i.getMaxPrecision(v.precision),f!==v.precision&&console.warn("THREE.WebGLProgram.getParameters:",v.precision,"not supported, using",f,"instead."));const ut=H.morphAttributes.position||H.morphAttributes.normal||H.morphAttributes.color,mt=ut!==void 0?ut.length:0;let Xt=0;H.morphAttributes.position!==void 0&&(Xt=1),H.morphAttributes.normal!==void 0&&(Xt=2),H.morphAttributes.color!==void 0&&(Xt=3);let te,qt,$t,ct;if(lt){const fe=wi[lt];te=fe.vertexShader,qt=fe.fragmentShader}else te=v.vertexShader,qt=v.fragmentShader,l.update(v),$t=l.getVertexShaderID(v),ct=l.getFragmentShaderID(v);const pt=r.getRenderTarget(),K=r.state.buffers.depth.getReversed(),R=B.isInstancedMesh===!0,D=B.isBatchedMesh===!0,z=!!v.map,J=!!v.matcap,N=!!Q,G=!!v.aoMap,Z=!!v.lightMap,tt=!!v.bumpMap,nt=!!v.normalMap,ht=!!v.displacementMap,dt=!!v.emissiveMap,yt=!!v.metalnessMap,It=!!v.roughnessMap,Pt=v.anisotropy>0,O=v.clearcoat>0,C=v.dispersion>0,q=v.iridescence>0,st=v.sheen>0,gt=v.transmission>0,it=Pt&&!!v.anisotropyMap,Ft=O&&!!v.clearcoatMap,Et=O&&!!v.clearcoatNormalMap,kt=O&&!!v.clearcoatRoughnessMap,Vt=q&&!!v.iridescenceMap,bt=q&&!!v.iridescenceThicknessMap,Rt=st&&!!v.sheenColorMap,Jt=st&&!!v.sheenRoughnessMap,F=!!v.specularMap,j=!!v.specularColorMap,wt=!!v.specularIntensityMap,k=gt&&!!v.transmissionMap,_t=gt&&!!v.thicknessMap,Mt=!!v.gradientMap,Ot=!!v.alphaMap,xt=v.alphaTest>0,ft=!!v.alphaHash,Lt=!!v.extensions;let ne=Gi;v.toneMapped&&(pt===null||pt.isXRRenderTarget===!0)&&(ne=r.toneMapping);const Me={shaderID:lt,shaderType:v.type,shaderName:v.name,vertexShader:te,fragmentShader:qt,defines:v.defines,customVertexShaderID:$t,customFragmentShaderID:ct,isRawShaderMaterial:v.isRawShaderMaterial===!0,glslVersion:v.glslVersion,precision:f,batching:D,batchingColor:D&&B._colorsTexture!==null,instancing:R,instancingColor:R&&B.instanceColor!==null,instancingMorph:R&&B.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:pt===null?r.outputColorSpace:pt.isXRRenderTarget===!0?pt.texture.colorSpace:Rs,alphaToCoverage:!!v.alphaToCoverage,map:z,matcap:J,envMap:N,envMapMode:N&&Q.mapping,envMapCubeUVHeight:W,aoMap:G,lightMap:Z,bumpMap:tt,normalMap:nt,displacementMap:d&&ht,emissiveMap:dt,normalMapObjectSpace:nt&&v.normalMapType===hv,normalMapTangentSpace:nt&&v.normalMapType===Hr,metalnessMap:yt,roughnessMap:It,anisotropy:Pt,anisotropyMap:it,clearcoat:O,clearcoatMap:Ft,clearcoatNormalMap:Et,clearcoatRoughnessMap:kt,dispersion:C,iridescence:q,iridescenceMap:Vt,iridescenceThicknessMap:bt,sheen:st,sheenColorMap:Rt,sheenRoughnessMap:Jt,specularMap:F,specularColorMap:j,specularIntensityMap:wt,transmission:gt,transmissionMap:k,thicknessMap:_t,gradientMap:Mt,opaque:v.transparent===!1&&v.blending===bs&&v.alphaToCoverage===!1,alphaMap:Ot,alphaTest:xt,alphaHash:ft,combine:v.combine,mapUv:z&&y(v.map.channel),aoMapUv:G&&y(v.aoMap.channel),lightMapUv:Z&&y(v.lightMap.channel),bumpMapUv:tt&&y(v.bumpMap.channel),normalMapUv:nt&&y(v.normalMap.channel),displacementMapUv:ht&&y(v.displacementMap.channel),emissiveMapUv:dt&&y(v.emissiveMap.channel),metalnessMapUv:yt&&y(v.metalnessMap.channel),roughnessMapUv:It&&y(v.roughnessMap.channel),anisotropyMapUv:it&&y(v.anisotropyMap.channel),clearcoatMapUv:Ft&&y(v.clearcoatMap.channel),clearcoatNormalMapUv:Et&&y(v.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:kt&&y(v.clearcoatRoughnessMap.channel),iridescenceMapUv:Vt&&y(v.iridescenceMap.channel),iridescenceThicknessMapUv:bt&&y(v.iridescenceThicknessMap.channel),sheenColorMapUv:Rt&&y(v.sheenColorMap.channel),sheenRoughnessMapUv:Jt&&y(v.sheenRoughnessMap.channel),specularMapUv:F&&y(v.specularMap.channel),specularColorMapUv:j&&y(v.specularColorMap.channel),specularIntensityMapUv:wt&&y(v.specularIntensityMap.channel),transmissionMapUv:k&&y(v.transmissionMap.channel),thicknessMapUv:_t&&y(v.thicknessMap.channel),alphaMapUv:Ot&&y(v.alphaMap.channel),vertexTangents:!!H.attributes.tangent&&(nt||Pt),vertexColors:v.vertexColors,vertexAlphas:v.vertexColors===!0&&!!H.attributes.color&&H.attributes.color.itemSize===4,pointsUvs:B.isPoints===!0&&!!H.attributes.uv&&(z||Ot),fog:!!V,useFog:v.fog===!0,fogExp2:!!V&&V.isFogExp2,flatShading:v.flatShading===!0&&v.wireframe===!1,sizeAttenuation:v.sizeAttenuation===!0,logarithmicDepthBuffer:h,reversedDepthBuffer:K,skinning:B.isSkinnedMesh===!0,morphTargets:H.morphAttributes.position!==void 0,morphNormals:H.morphAttributes.normal!==void 0,morphColors:H.morphAttributes.color!==void 0,morphTargetsCount:mt,morphTextureStride:Xt,numDirLights:_.directional.length,numPointLights:_.point.length,numSpotLights:_.spot.length,numSpotLightMaps:_.spotLightMap.length,numRectAreaLights:_.rectArea.length,numHemiLights:_.hemi.length,numDirLightShadows:_.directionalShadowMap.length,numPointLightShadows:_.pointShadowMap.length,numSpotLightShadows:_.spotShadowMap.length,numSpotLightShadowsWithMaps:_.numSpotLightShadowsWithMaps,numLightProbes:_.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:v.dithering,shadowMapEnabled:r.shadowMap.enabled&&T.length>0,shadowMapType:r.shadowMap.type,toneMapping:ne,decodeVideoTexture:z&&v.map.isVideoTexture===!0&&ve.getTransfer(v.map.colorSpace)===Ee,decodeVideoTextureEmissive:dt&&v.emissiveMap.isVideoTexture===!0&&ve.getTransfer(v.emissiveMap.colorSpace)===Ee,premultipliedAlpha:v.premultipliedAlpha,doubleSided:v.side===ni,flipSided:v.side===Pn,useDepthPacking:v.depthPacking>=0,depthPacking:v.depthPacking||0,index0AttributeName:v.index0AttributeName,extensionClipCullDistance:Lt&&v.extensions.clipCullDistance===!0&&n.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Lt&&v.extensions.multiDraw===!0||D)&&n.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:n.has("KHR_parallel_shader_compile"),customProgramCacheKey:v.customProgramCacheKey()};return Me.vertexUv1s=c.has(1),Me.vertexUv2s=c.has(2),Me.vertexUv3s=c.has(3),c.clear(),Me}function g(v){const _=[];if(v.shaderID?_.push(v.shaderID):(_.push(v.customVertexShaderID),_.push(v.customFragmentShaderID)),v.defines!==void 0)for(const T in v.defines)_.push(T),_.push(v.defines[T]);return v.isRawShaderMaterial===!1&&(w(_,v),b(_,v),_.push(r.outputColorSpace)),_.push(v.customProgramCacheKey),_.join()}function w(v,_){v.push(_.precision),v.push(_.outputColorSpace),v.push(_.envMapMode),v.push(_.envMapCubeUVHeight),v.push(_.mapUv),v.push(_.alphaMapUv),v.push(_.lightMapUv),v.push(_.aoMapUv),v.push(_.bumpMapUv),v.push(_.normalMapUv),v.push(_.displacementMapUv),v.push(_.emissiveMapUv),v.push(_.metalnessMapUv),v.push(_.roughnessMapUv),v.push(_.anisotropyMapUv),v.push(_.clearcoatMapUv),v.push(_.clearcoatNormalMapUv),v.push(_.clearcoatRoughnessMapUv),v.push(_.iridescenceMapUv),v.push(_.iridescenceThicknessMapUv),v.push(_.sheenColorMapUv),v.push(_.sheenRoughnessMapUv),v.push(_.specularMapUv),v.push(_.specularColorMapUv),v.push(_.specularIntensityMapUv),v.push(_.transmissionMapUv),v.push(_.thicknessMapUv),v.push(_.combine),v.push(_.fogExp2),v.push(_.sizeAttenuation),v.push(_.morphTargetsCount),v.push(_.morphAttributeCount),v.push(_.numDirLights),v.push(_.numPointLights),v.push(_.numSpotLights),v.push(_.numSpotLightMaps),v.push(_.numHemiLights),v.push(_.numRectAreaLights),v.push(_.numDirLightShadows),v.push(_.numPointLightShadows),v.push(_.numSpotLightShadows),v.push(_.numSpotLightShadowsWithMaps),v.push(_.numLightProbes),v.push(_.shadowMapType),v.push(_.toneMapping),v.push(_.numClippingPlanes),v.push(_.numClipIntersection),v.push(_.depthPacking)}function b(v,_){a.disableAll(),_.supportsVertexTextures&&a.enable(0),_.instancing&&a.enable(1),_.instancingColor&&a.enable(2),_.instancingMorph&&a.enable(3),_.matcap&&a.enable(4),_.envMap&&a.enable(5),_.normalMapObjectSpace&&a.enable(6),_.normalMapTangentSpace&&a.enable(7),_.clearcoat&&a.enable(8),_.iridescence&&a.enable(9),_.alphaTest&&a.enable(10),_.vertexColors&&a.enable(11),_.vertexAlphas&&a.enable(12),_.vertexUv1s&&a.enable(13),_.vertexUv2s&&a.enable(14),_.vertexUv3s&&a.enable(15),_.vertexTangents&&a.enable(16),_.anisotropy&&a.enable(17),_.alphaHash&&a.enable(18),_.batching&&a.enable(19),_.dispersion&&a.enable(20),_.batchingColor&&a.enable(21),_.gradientMap&&a.enable(22),v.push(a.mask),a.disableAll(),_.fog&&a.enable(0),_.useFog&&a.enable(1),_.flatShading&&a.enable(2),_.logarithmicDepthBuffer&&a.enable(3),_.reversedDepthBuffer&&a.enable(4),_.skinning&&a.enable(5),_.morphTargets&&a.enable(6),_.morphNormals&&a.enable(7),_.morphColors&&a.enable(8),_.premultipliedAlpha&&a.enable(9),_.shadowMapEnabled&&a.enable(10),_.doubleSided&&a.enable(11),_.flipSided&&a.enable(12),_.useDepthPacking&&a.enable(13),_.dithering&&a.enable(14),_.transmission&&a.enable(15),_.sheen&&a.enable(16),_.opaque&&a.enable(17),_.pointsUvs&&a.enable(18),_.decodeVideoTexture&&a.enable(19),_.decodeVideoTextureEmissive&&a.enable(20),_.alphaToCoverage&&a.enable(21),v.push(a.mask)}function M(v){const _=p[v.type];let T;if(_){const I=wi[_];T=ph.clone(I.uniforms)}else T=v.uniforms;return T}function A(v,_){let T;for(let I=0,B=u.length;I<B;I++){const V=u[I];if(V.cacheKey===_){T=V,++T.usedTimes;break}}return T===void 0&&(T=new JR(r,_,v,s),u.push(T)),T}function S(v){if(--v.usedTimes===0){const _=u.indexOf(v);u[_]=u[u.length-1],u.pop(),v.destroy()}}function E(v){l.remove(v)}function x(){l.dispose()}return{getParameters:m,getProgramCacheKey:g,getUniforms:M,acquireProgram:A,releaseProgram:S,releaseShaderCache:E,programs:u,dispose:x}}function n2(){let r=new WeakMap;function t(o){return r.has(o)}function e(o){let a=r.get(o);return a===void 0&&(a={},r.set(o,a)),a}function n(o){r.delete(o)}function i(o,a,l){r.get(o)[a]=l}function s(){r=new WeakMap}return{has:t,get:e,remove:n,update:i,dispose:s}}function i2(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.material.id!==t.material.id?r.material.id-t.material.id:r.z!==t.z?r.z-t.z:r.id-t.id}function by(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.z!==t.z?t.z-r.z:r.id-t.id}function My(){const r=[];let t=0;const e=[],n=[],i=[];function s(){t=0,e.length=0,n.length=0,i.length=0}function o(h,d,f,p,y,m){let g=r[t];return g===void 0?(g={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:y,group:m},r[t]=g):(g.id=h.id,g.object=h,g.geometry=d,g.material=f,g.groupOrder=p,g.renderOrder=h.renderOrder,g.z=y,g.group=m),t++,g}function a(h,d,f,p,y,m){const g=o(h,d,f,p,y,m);f.transmission>0?n.push(g):f.transparent===!0?i.push(g):e.push(g)}function l(h,d,f,p,y,m){const g=o(h,d,f,p,y,m);f.transmission>0?n.unshift(g):f.transparent===!0?i.unshift(g):e.unshift(g)}function c(h,d){e.length>1&&e.sort(h||i2),n.length>1&&n.sort(d||by),i.length>1&&i.sort(d||by)}function u(){for(let h=t,d=r.length;h<d;h++){const f=r[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:n,transparent:i,init:s,push:a,unshift:l,finish:u,sort:c}}function r2(){let r=new WeakMap;function t(n,i){const s=r.get(n);let o;return s===void 0?(o=new My,r.set(n,[o])):i>=s.length?(o=new My,s.push(o)):o=s[i],o}function e(){r=new WeakMap}return{get:t,dispose:e}}function s2(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new L,color:new At};break;case"SpotLight":e={position:new L,direction:new L,color:new At,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new L,color:new At,distance:0,decay:0};break;case"HemisphereLight":e={direction:new L,skyColor:new At,groundColor:new At};break;case"RectAreaLight":e={color:new At,position:new L,halfWidth:new L,halfHeight:new L};break}return r[t.id]=e,e}}}function o2(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new at};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new at};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new at,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[t.id]=e,e}}}let a2=0;function l2(r,t){return(t.castShadow?2:0)-(r.castShadow?2:0)+(t.map?1:0)-(r.map?1:0)}function c2(r){const t=new s2,e=o2(),n={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)n.probe.push(new L);const i=new L,s=new jt,o=new jt;function a(c){let u=0,h=0,d=0;for(let v=0;v<9;v++)n.probe[v].set(0,0,0);let f=0,p=0,y=0,m=0,g=0,w=0,b=0,M=0,A=0,S=0,E=0;c.sort(l2);for(let v=0,_=c.length;v<_;v++){const T=c[v],I=T.color,B=T.intensity,V=T.distance,H=T.shadow&&T.shadow.map?T.shadow.map.texture:null;if(T.isAmbientLight)u+=I.r*B,h+=I.g*B,d+=I.b*B;else if(T.isLightProbe){for(let U=0;U<9;U++)n.probe[U].addScaledVector(T.sh.coefficients[U],B);E++}else if(T.isDirectionalLight){const U=t.get(T);if(U.color.copy(T.color).multiplyScalar(T.intensity),T.castShadow){const Q=T.shadow,W=e.get(T);W.shadowIntensity=Q.intensity,W.shadowBias=Q.bias,W.shadowNormalBias=Q.normalBias,W.shadowRadius=Q.radius,W.shadowMapSize=Q.mapSize,n.directionalShadow[f]=W,n.directionalShadowMap[f]=H,n.directionalShadowMatrix[f]=T.shadow.matrix,w++}n.directional[f]=U,f++}else if(T.isSpotLight){const U=t.get(T);U.position.setFromMatrixPosition(T.matrixWorld),U.color.copy(I).multiplyScalar(B),U.distance=V,U.coneCos=Math.cos(T.angle),U.penumbraCos=Math.cos(T.angle*(1-T.penumbra)),U.decay=T.decay,n.spot[y]=U;const Q=T.shadow;if(T.map&&(n.spotLightMap[A]=T.map,A++,Q.updateMatrices(T),T.castShadow&&S++),n.spotLightMatrix[y]=Q.matrix,T.castShadow){const W=e.get(T);W.shadowIntensity=Q.intensity,W.shadowBias=Q.bias,W.shadowNormalBias=Q.normalBias,W.shadowRadius=Q.radius,W.shadowMapSize=Q.mapSize,n.spotShadow[y]=W,n.spotShadowMap[y]=H,M++}y++}else if(T.isRectAreaLight){const U=t.get(T);U.color.copy(I).multiplyScalar(B),U.halfWidth.set(T.width*.5,0,0),U.halfHeight.set(0,T.height*.5,0),n.rectArea[m]=U,m++}else if(T.isPointLight){const U=t.get(T);if(U.color.copy(T.color).multiplyScalar(T.intensity),U.distance=T.distance,U.decay=T.decay,T.castShadow){const Q=T.shadow,W=e.get(T);W.shadowIntensity=Q.intensity,W.shadowBias=Q.bias,W.shadowNormalBias=Q.normalBias,W.shadowRadius=Q.radius,W.shadowMapSize=Q.mapSize,W.shadowCameraNear=Q.camera.near,W.shadowCameraFar=Q.camera.far,n.pointShadow[p]=W,n.pointShadowMap[p]=H,n.pointShadowMatrix[p]=T.shadow.matrix,b++}n.point[p]=U,p++}else if(T.isHemisphereLight){const U=t.get(T);U.skyColor.copy(T.color).multiplyScalar(B),U.groundColor.copy(T.groundColor).multiplyScalar(B),n.hemi[g]=U,g++}}m>0&&(r.has("OES_texture_float_linear")===!0?(n.rectAreaLTC1=Ct.LTC_FLOAT_1,n.rectAreaLTC2=Ct.LTC_FLOAT_2):(n.rectAreaLTC1=Ct.LTC_HALF_1,n.rectAreaLTC2=Ct.LTC_HALF_2)),n.ambient[0]=u,n.ambient[1]=h,n.ambient[2]=d;const x=n.hash;(x.directionalLength!==f||x.pointLength!==p||x.spotLength!==y||x.rectAreaLength!==m||x.hemiLength!==g||x.numDirectionalShadows!==w||x.numPointShadows!==b||x.numSpotShadows!==M||x.numSpotMaps!==A||x.numLightProbes!==E)&&(n.directional.length=f,n.spot.length=y,n.rectArea.length=m,n.point.length=p,n.hemi.length=g,n.directionalShadow.length=w,n.directionalShadowMap.length=w,n.pointShadow.length=b,n.pointShadowMap.length=b,n.spotShadow.length=M,n.spotShadowMap.length=M,n.directionalShadowMatrix.length=w,n.pointShadowMatrix.length=b,n.spotLightMatrix.length=M+A-S,n.spotLightMap.length=A,n.numSpotLightShadowsWithMaps=S,n.numLightProbes=E,x.directionalLength=f,x.pointLength=p,x.spotLength=y,x.rectAreaLength=m,x.hemiLength=g,x.numDirectionalShadows=w,x.numPointShadows=b,x.numSpotShadows=M,x.numSpotMaps=A,x.numLightProbes=E,n.version=a2++)}function l(c,u){let h=0,d=0,f=0,p=0,y=0;const m=u.matrixWorldInverse;for(let g=0,w=c.length;g<w;g++){const b=c[g];if(b.isDirectionalLight){const M=n.directional[h];M.direction.setFromMatrixPosition(b.matrixWorld),i.setFromMatrixPosition(b.target.matrixWorld),M.direction.sub(i),M.direction.transformDirection(m),h++}else if(b.isSpotLight){const M=n.spot[f];M.position.setFromMatrixPosition(b.matrixWorld),M.position.applyMatrix4(m),M.direction.setFromMatrixPosition(b.matrixWorld),i.setFromMatrixPosition(b.target.matrixWorld),M.direction.sub(i),M.direction.transformDirection(m),f++}else if(b.isRectAreaLight){const M=n.rectArea[p];M.position.setFromMatrixPosition(b.matrixWorld),M.position.applyMatrix4(m),o.identity(),s.copy(b.matrixWorld),s.premultiply(m),o.extractRotation(s),M.halfWidth.set(b.width*.5,0,0),M.halfHeight.set(0,b.height*.5,0),M.halfWidth.applyMatrix4(o),M.halfHeight.applyMatrix4(o),p++}else if(b.isPointLight){const M=n.point[d];M.position.setFromMatrixPosition(b.matrixWorld),M.position.applyMatrix4(m),d++}else if(b.isHemisphereLight){const M=n.hemi[y];M.direction.setFromMatrixPosition(b.matrixWorld),M.direction.transformDirection(m),y++}}}return{setup:a,setupView:l,state:n}}function Sy(r){const t=new c2(r),e=[],n=[];function i(u){c.camera=u,e.length=0,n.length=0}function s(u){e.push(u)}function o(u){n.push(u)}function a(){t.setup(e)}function l(u){t.setupView(e,u)}const c={lightsArray:e,shadowsArray:n,camera:null,lights:t,transmissionRenderTarget:{}};return{init:i,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function u2(r){let t=new WeakMap;function e(i,s=0){const o=t.get(i);let a;return o===void 0?(a=new Sy(r),t.set(i,[a])):s>=o.length?(a=new Sy(r),o.push(a)):a=o[s],a}function n(){t=new WeakMap}return{get:e,dispose:n}}const h2="void main() {\n	gl_Position = vec4( position, 1.0 );\n}",d2="uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n	const float samples = float( VSM_SAMPLES );\n	float mean = 0.0;\n	float squared_mean = 0.0;\n	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n	for ( float i = 0.0; i < samples; i ++ ) {\n		float uvOffset = uvStart + i * uvStride;\n		#ifdef HORIZONTAL_PASS\n			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n			mean += distribution.x;\n			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n		#else\n			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n			mean += depth;\n			squared_mean += depth * depth;\n		#endif\n	}\n	mean = mean / samples;\n	squared_mean = squared_mean / samples;\n	float std_dev = sqrt( squared_mean - mean * mean );\n	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";function f2(r,t,e){let n=new $o;const i=new at,s=new at,o=new _e,a=new Fp({depthPacking:uv}),l=new Bp,c={},u=e.maxTextureSize,h={[pr]:Pn,[Pn]:pr,[ni]:ni},d=new $n({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new at},radius:{value:4}},vertexShader:h2,fragmentShader:d2}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new ce;p.setAttribute("position",new Te(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new Ue(p,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=lp;let g=this.type;this.render=function(S,E,x){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||S.length===0)return;const v=r.getRenderTarget(),_=r.getActiveCubeFace(),T=r.getActiveMipmapLevel(),I=r.state;I.setBlending(lr),I.buffers.depth.getReversed()===!0?I.buffers.color.setClear(0,0,0,0):I.buffers.color.setClear(1,1,1,1),I.buffers.depth.setTest(!0),I.setScissorTest(!1);const B=g!==zi&&this.type===zi,V=g===zi&&this.type!==zi;for(let H=0,U=S.length;H<U;H++){const Q=S[H],W=Q.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;i.copy(W.mapSize);const lt=W.getFrameExtents();if(i.multiply(lt),s.copy(W.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/lt.x),i.x=s.x*lt.x,W.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/lt.y),i.y=s.y*lt.y,W.mapSize.y=s.y)),W.map===null||B===!0||V===!0){const mt=this.type!==zi?{minFilter:hn,magFilter:hn}:{};W.map!==null&&W.map.dispose(),W.map=new Ri(i.x,i.y,mt),W.map.texture.name=Q.name+".shadowMap",W.camera.updateProjectionMatrix()}r.setRenderTarget(W.map),r.clear();const ut=W.getViewportCount();for(let mt=0;mt<ut;mt++){const Xt=W.getViewport(mt);o.set(s.x*Xt.x,s.y*Xt.y,s.x*Xt.z,s.y*Xt.w),I.viewport(o),W.updateMatrices(Q,mt),n=W.getFrustum(),M(E,x,W.camera,Q,this.type)}W.isPointLightShadow!==!0&&this.type===zi&&w(W,x),W.needsUpdate=!1}g=this.type,m.needsUpdate=!1,r.setRenderTarget(v,_,T)};function w(S,E){const x=t.update(y);d.defines.VSM_SAMPLES!==S.blurSamples&&(d.defines.VSM_SAMPLES=S.blurSamples,f.defines.VSM_SAMPLES=S.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),S.mapPass===null&&(S.mapPass=new Ri(i.x,i.y)),d.uniforms.shadow_pass.value=S.map.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(E,null,x,d,y,null),f.uniforms.shadow_pass.value=S.mapPass.texture,f.uniforms.resolution.value=S.mapSize,f.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(E,null,x,f,y,null)}function b(S,E,x,v){let _=null;const T=x.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(T!==void 0)_=T;else if(_=x.isPointLight===!0?l:a,r.localClippingEnabled&&E.clipShadows===!0&&Array.isArray(E.clippingPlanes)&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0||E.map&&E.alphaTest>0||E.alphaToCoverage===!0){const I=_.uuid,B=E.uuid;let V=c[I];V===void 0&&(V={},c[I]=V);let H=V[B];H===void 0&&(H=_.clone(),V[B]=H,E.addEventListener("dispose",A)),_=H}if(_.visible=E.visible,_.wireframe=E.wireframe,v===zi?_.side=E.shadowSide!==null?E.shadowSide:E.side:_.side=E.shadowSide!==null?E.shadowSide:h[E.side],_.alphaMap=E.alphaMap,_.alphaTest=E.alphaToCoverage===!0?.5:E.alphaTest,_.map=E.map,_.clipShadows=E.clipShadows,_.clippingPlanes=E.clippingPlanes,_.clipIntersection=E.clipIntersection,_.displacementMap=E.displacementMap,_.displacementScale=E.displacementScale,_.displacementBias=E.displacementBias,_.wireframeLinewidth=E.wireframeLinewidth,_.linewidth=E.linewidth,x.isPointLight===!0&&_.isMeshDistanceMaterial===!0){const I=r.properties.get(_);I.light=x}return _}function M(S,E,x,v,_){if(S.visible===!1)return;if(S.layers.test(E.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&_===zi)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(x.matrixWorldInverse,S.matrixWorld);const B=t.update(S),V=S.material;if(Array.isArray(V)){const H=B.groups;for(let U=0,Q=H.length;U<Q;U++){const W=H[U],lt=V[W.materialIndex];if(lt&&lt.visible){const ut=b(S,lt,v,_);S.onBeforeShadow(r,S,E,x,B,ut,W),r.renderBufferDirect(x,null,B,ut,S,W),S.onAfterShadow(r,S,E,x,B,ut,W)}}}else if(V.visible){const H=b(S,V,v,_);S.onBeforeShadow(r,S,E,x,B,H,null),r.renderBufferDirect(x,null,B,H,S,null),S.onAfterShadow(r,S,E,x,B,H,null)}}const I=S.children;for(let B=0,V=I.length;B<V;B++)M(I[B],E,x,v,_)}function A(S){S.target.removeEventListener("dispose",A);for(const x in c){const v=c[x],_=S.target.uuid;_ in v&&(v[_].dispose(),delete v[_])}}}const p2={[ou]:au,[lu]:hu,[cu]:du,[Cs]:uu,[au]:ou,[hu]:lu,[du]:cu,[uu]:Cs};function m2(r,t){function e(){let k=!1;const _t=new _e;let Mt=null;const Ot=new _e(0,0,0,0);return{setMask:function(xt){Mt!==xt&&!k&&(r.colorMask(xt,xt,xt,xt),Mt=xt)},setLocked:function(xt){k=xt},setClear:function(xt,ft,Lt,ne,Me){Me===!0&&(xt*=ne,ft*=ne,Lt*=ne),_t.set(xt,ft,Lt,ne),Ot.equals(_t)===!1&&(r.clearColor(xt,ft,Lt,ne),Ot.copy(_t))},reset:function(){k=!1,Mt=null,Ot.set(-1,0,0,0)}}}function n(){let k=!1,_t=!1,Mt=null,Ot=null,xt=null;return{setReversed:function(ft){if(_t!==ft){const Lt=t.get("EXT_clip_control");ft?Lt.clipControlEXT(Lt.LOWER_LEFT_EXT,Lt.ZERO_TO_ONE_EXT):Lt.clipControlEXT(Lt.LOWER_LEFT_EXT,Lt.NEGATIVE_ONE_TO_ONE_EXT),_t=ft;const ne=xt;xt=null,this.setClear(ne)}},getReversed:function(){return _t},setTest:function(ft){ft?pt(r.DEPTH_TEST):K(r.DEPTH_TEST)},setMask:function(ft){Mt!==ft&&!k&&(r.depthMask(ft),Mt=ft)},setFunc:function(ft){if(_t&&(ft=p2[ft]),Ot!==ft){switch(ft){case ou:r.depthFunc(r.NEVER);break;case au:r.depthFunc(r.ALWAYS);break;case lu:r.depthFunc(r.LESS);break;case Cs:r.depthFunc(r.LEQUAL);break;case cu:r.depthFunc(r.EQUAL);break;case uu:r.depthFunc(r.GEQUAL);break;case hu:r.depthFunc(r.GREATER);break;case du:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Ot=ft}},setLocked:function(ft){k=ft},setClear:function(ft){xt!==ft&&(_t&&(ft=1-ft),r.clearDepth(ft),xt=ft)},reset:function(){k=!1,Mt=null,Ot=null,xt=null,_t=!1}}}function i(){let k=!1,_t=null,Mt=null,Ot=null,xt=null,ft=null,Lt=null,ne=null,Me=null;return{setTest:function(fe){k||(fe?pt(r.STENCIL_TEST):K(r.STENCIL_TEST))},setMask:function(fe){_t!==fe&&!k&&(r.stencilMask(fe),_t=fe)},setFunc:function(fe,Dn,Pi){(Mt!==fe||Ot!==Dn||xt!==Pi)&&(r.stencilFunc(fe,Dn,Pi),Mt=fe,Ot=Dn,xt=Pi)},setOp:function(fe,Dn,Pi){(ft!==fe||Lt!==Dn||ne!==Pi)&&(r.stencilOp(fe,Dn,Pi),ft=fe,Lt=Dn,ne=Pi)},setLocked:function(fe){k=fe},setClear:function(fe){Me!==fe&&(r.clearStencil(fe),Me=fe)},reset:function(){k=!1,_t=null,Mt=null,Ot=null,xt=null,ft=null,Lt=null,ne=null,Me=null}}}const s=new e,o=new n,a=new i,l=new WeakMap,c=new WeakMap;let u={},h={},d=new WeakMap,f=[],p=null,y=!1,m=null,g=null,w=null,b=null,M=null,A=null,S=null,E=new At(0,0,0),x=0,v=!1,_=null,T=null,I=null,B=null,V=null;const H=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let U=!1,Q=0;const W=r.getParameter(r.VERSION);W.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(W)[1]),U=Q>=1):W.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(W)[1]),U=Q>=2);let lt=null,ut={};const mt=r.getParameter(r.SCISSOR_BOX),Xt=r.getParameter(r.VIEWPORT),te=new _e().fromArray(mt),qt=new _e().fromArray(Xt);function $t(k,_t,Mt,Ot){const xt=new Uint8Array(4),ft=r.createTexture();r.bindTexture(k,ft),r.texParameteri(k,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(k,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Lt=0;Lt<Mt;Lt++)k===r.TEXTURE_3D||k===r.TEXTURE_2D_ARRAY?r.texImage3D(_t,0,r.RGBA,1,1,Ot,0,r.RGBA,r.UNSIGNED_BYTE,xt):r.texImage2D(_t+Lt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,xt);return ft}const ct={};ct[r.TEXTURE_2D]=$t(r.TEXTURE_2D,r.TEXTURE_2D,1),ct[r.TEXTURE_CUBE_MAP]=$t(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),ct[r.TEXTURE_2D_ARRAY]=$t(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),ct[r.TEXTURE_3D]=$t(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),pt(r.DEPTH_TEST),o.setFunc(Cs),tt(!1),nt(gf),pt(r.CULL_FACE),G(lr);function pt(k){u[k]!==!0&&(r.enable(k),u[k]=!0)}function K(k){u[k]!==!1&&(r.disable(k),u[k]=!1)}function R(k,_t){return h[k]!==_t?(r.bindFramebuffer(k,_t),h[k]=_t,k===r.DRAW_FRAMEBUFFER&&(h[r.FRAMEBUFFER]=_t),k===r.FRAMEBUFFER&&(h[r.DRAW_FRAMEBUFFER]=_t),!0):!1}function D(k,_t){let Mt=f,Ot=!1;if(k){Mt=d.get(_t),Mt===void 0&&(Mt=[],d.set(_t,Mt));const xt=k.textures;if(Mt.length!==xt.length||Mt[0]!==r.COLOR_ATTACHMENT0){for(let ft=0,Lt=xt.length;ft<Lt;ft++)Mt[ft]=r.COLOR_ATTACHMENT0+ft;Mt.length=xt.length,Ot=!0}}else Mt[0]!==r.BACK&&(Mt[0]=r.BACK,Ot=!0);Ot&&r.drawBuffers(Mt)}function z(k){return p!==k?(r.useProgram(k),p=k,!0):!1}const J={[Lr]:r.FUNC_ADD,[D0]:r.FUNC_SUBTRACT,[O0]:r.FUNC_REVERSE_SUBTRACT};J[U0]=r.MIN,J[F0]=r.MAX;const N={[B0]:r.ZERO,[z0]:r.ONE,[k0]:r.SRC_COLOR,[ru]:r.SRC_ALPHA,[$0]:r.SRC_ALPHA_SATURATE,[W0]:r.DST_COLOR,[H0]:r.DST_ALPHA,[V0]:r.ONE_MINUS_SRC_COLOR,[su]:r.ONE_MINUS_SRC_ALPHA,[X0]:r.ONE_MINUS_DST_COLOR,[G0]:r.ONE_MINUS_DST_ALPHA,[Y0]:r.CONSTANT_COLOR,[q0]:r.ONE_MINUS_CONSTANT_COLOR,[j0]:r.CONSTANT_ALPHA,[Z0]:r.ONE_MINUS_CONSTANT_ALPHA};function G(k,_t,Mt,Ot,xt,ft,Lt,ne,Me,fe){if(k===lr){y===!0&&(K(r.BLEND),y=!1);return}if(y===!1&&(pt(r.BLEND),y=!0),k!==L0){if(k!==m||fe!==v){if((g!==Lr||M!==Lr)&&(r.blendEquation(r.FUNC_ADD),g=Lr,M=Lr),fe)switch(k){case bs:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case yf:r.blendFunc(r.ONE,r.ONE);break;case _f:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case vf:r.blendFuncSeparate(r.DST_COLOR,r.ONE_MINUS_SRC_ALPHA,r.ZERO,r.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}else switch(k){case bs:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case yf:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE,r.ONE,r.ONE);break;case _f:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case vf:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",k);break}w=null,b=null,A=null,S=null,E.set(0,0,0),x=0,m=k,v=fe}return}xt=xt||_t,ft=ft||Mt,Lt=Lt||Ot,(_t!==g||xt!==M)&&(r.blendEquationSeparate(J[_t],J[xt]),g=_t,M=xt),(Mt!==w||Ot!==b||ft!==A||Lt!==S)&&(r.blendFuncSeparate(N[Mt],N[Ot],N[ft],N[Lt]),w=Mt,b=Ot,A=ft,S=Lt),(ne.equals(E)===!1||Me!==x)&&(r.blendColor(ne.r,ne.g,ne.b,Me),E.copy(ne),x=Me),m=k,v=!1}function Z(k,_t){k.side===ni?K(r.CULL_FACE):pt(r.CULL_FACE);let Mt=k.side===Pn;_t&&(Mt=!Mt),tt(Mt),k.blending===bs&&k.transparent===!1?G(lr):G(k.blending,k.blendEquation,k.blendSrc,k.blendDst,k.blendEquationAlpha,k.blendSrcAlpha,k.blendDstAlpha,k.blendColor,k.blendAlpha,k.premultipliedAlpha),o.setFunc(k.depthFunc),o.setTest(k.depthTest),o.setMask(k.depthWrite),s.setMask(k.colorWrite);const Ot=k.stencilWrite;a.setTest(Ot),Ot&&(a.setMask(k.stencilWriteMask),a.setFunc(k.stencilFunc,k.stencilRef,k.stencilFuncMask),a.setOp(k.stencilFail,k.stencilZFail,k.stencilZPass)),dt(k.polygonOffset,k.polygonOffsetFactor,k.polygonOffsetUnits),k.alphaToCoverage===!0?pt(r.SAMPLE_ALPHA_TO_COVERAGE):K(r.SAMPLE_ALPHA_TO_COVERAGE)}function tt(k){_!==k&&(k?r.frontFace(r.CW):r.frontFace(r.CCW),_=k)}function nt(k){k!==N0?(pt(r.CULL_FACE),k!==T&&(k===gf?r.cullFace(r.BACK):k===P0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):K(r.CULL_FACE),T=k}function ht(k){k!==I&&(U&&r.lineWidth(k),I=k)}function dt(k,_t,Mt){k?(pt(r.POLYGON_OFFSET_FILL),(B!==_t||V!==Mt)&&(r.polygonOffset(_t,Mt),B=_t,V=Mt)):K(r.POLYGON_OFFSET_FILL)}function yt(k){k?pt(r.SCISSOR_TEST):K(r.SCISSOR_TEST)}function It(k){k===void 0&&(k=r.TEXTURE0+H-1),lt!==k&&(r.activeTexture(k),lt=k)}function Pt(k,_t,Mt){Mt===void 0&&(lt===null?Mt=r.TEXTURE0+H-1:Mt=lt);let Ot=ut[Mt];Ot===void 0&&(Ot={type:void 0,texture:void 0},ut[Mt]=Ot),(Ot.type!==k||Ot.texture!==_t)&&(lt!==Mt&&(r.activeTexture(Mt),lt=Mt),r.bindTexture(k,_t||ct[k]),Ot.type=k,Ot.texture=_t)}function O(){const k=ut[lt];k!==void 0&&k.type!==void 0&&(r.bindTexture(k.type,null),k.type=void 0,k.texture=void 0)}function C(){try{r.compressedTexImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function q(){try{r.compressedTexImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function st(){try{r.texSubImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function gt(){try{r.texSubImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function it(){try{r.compressedTexSubImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Ft(){try{r.compressedTexSubImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Et(){try{r.texStorage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function kt(){try{r.texStorage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Vt(){try{r.texImage2D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function bt(){try{r.texImage3D(...arguments)}catch(k){console.error("THREE.WebGLState:",k)}}function Rt(k){te.equals(k)===!1&&(r.scissor(k.x,k.y,k.z,k.w),te.copy(k))}function Jt(k){qt.equals(k)===!1&&(r.viewport(k.x,k.y,k.z,k.w),qt.copy(k))}function F(k,_t){let Mt=c.get(_t);Mt===void 0&&(Mt=new WeakMap,c.set(_t,Mt));let Ot=Mt.get(k);Ot===void 0&&(Ot=r.getUniformBlockIndex(_t,k.name),Mt.set(k,Ot))}function j(k,_t){const Ot=c.get(_t).get(k);l.get(_t)!==Ot&&(r.uniformBlockBinding(_t,Ot,k.__bindingPointIndex),l.set(_t,Ot))}function wt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),o.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},lt=null,ut={},h={},d=new WeakMap,f=[],p=null,y=!1,m=null,g=null,w=null,b=null,M=null,A=null,S=null,E=new At(0,0,0),x=0,v=!1,_=null,T=null,I=null,B=null,V=null,te.set(0,0,r.canvas.width,r.canvas.height),qt.set(0,0,r.canvas.width,r.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:pt,disable:K,bindFramebuffer:R,drawBuffers:D,useProgram:z,setBlending:G,setMaterial:Z,setFlipSided:tt,setCullFace:nt,setLineWidth:ht,setPolygonOffset:dt,setScissorTest:yt,activeTexture:It,bindTexture:Pt,unbindTexture:O,compressedTexImage2D:C,compressedTexImage3D:q,texImage2D:Vt,texImage3D:bt,updateUBOMapping:F,uniformBlockBinding:j,texStorage2D:Et,texStorage3D:kt,texSubImage2D:st,texSubImage3D:gt,compressedTexSubImage2D:it,compressedTexSubImage3D:Ft,scissor:Rt,viewport:Jt,reset:wt}}function g2(r,t,e,n,i,s,o){const a=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new at,u=new WeakMap;let h;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch(O){}function p(O,C){return f?new OffscreenCanvas(O,C):qa("canvas")}function y(O,C,q){let st=1;const gt=Pt(O);if((gt.width>q||gt.height>q)&&(st=q/Math.max(gt.width,gt.height)),st<1)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap||typeof VideoFrame<"u"&&O instanceof VideoFrame){const it=Math.floor(st*gt.width),Ft=Math.floor(st*gt.height);h===void 0&&(h=p(it,Ft));const Et=C?p(it,Ft):h;return Et.width=it,Et.height=Ft,Et.getContext("2d").drawImage(O,0,0,it,Ft),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+gt.width+"x"+gt.height+") to ("+it+"x"+Ft+")."),Et}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+gt.width+"x"+gt.height+")."),O;return O}function m(O){return O.generateMipmaps}function g(O){r.generateMipmap(O)}function w(O){return O.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:O.isWebGL3DRenderTarget?r.TEXTURE_3D:O.isWebGLArrayRenderTarget||O.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function b(O,C,q,st,gt=!1){if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let it=C;if(C===r.RED&&(q===r.FLOAT&&(it=r.R32F),q===r.HALF_FLOAT&&(it=r.R16F),q===r.UNSIGNED_BYTE&&(it=r.R8)),C===r.RED_INTEGER&&(q===r.UNSIGNED_BYTE&&(it=r.R8UI),q===r.UNSIGNED_SHORT&&(it=r.R16UI),q===r.UNSIGNED_INT&&(it=r.R32UI),q===r.BYTE&&(it=r.R8I),q===r.SHORT&&(it=r.R16I),q===r.INT&&(it=r.R32I)),C===r.RG&&(q===r.FLOAT&&(it=r.RG32F),q===r.HALF_FLOAT&&(it=r.RG16F),q===r.UNSIGNED_BYTE&&(it=r.RG8)),C===r.RG_INTEGER&&(q===r.UNSIGNED_BYTE&&(it=r.RG8UI),q===r.UNSIGNED_SHORT&&(it=r.RG16UI),q===r.UNSIGNED_INT&&(it=r.RG32UI),q===r.BYTE&&(it=r.RG8I),q===r.SHORT&&(it=r.RG16I),q===r.INT&&(it=r.RG32I)),C===r.RGB_INTEGER&&(q===r.UNSIGNED_BYTE&&(it=r.RGB8UI),q===r.UNSIGNED_SHORT&&(it=r.RGB16UI),q===r.UNSIGNED_INT&&(it=r.RGB32UI),q===r.BYTE&&(it=r.RGB8I),q===r.SHORT&&(it=r.RGB16I),q===r.INT&&(it=r.RGB32I)),C===r.RGBA_INTEGER&&(q===r.UNSIGNED_BYTE&&(it=r.RGBA8UI),q===r.UNSIGNED_SHORT&&(it=r.RGBA16UI),q===r.UNSIGNED_INT&&(it=r.RGBA32UI),q===r.BYTE&&(it=r.RGBA8I),q===r.SHORT&&(it=r.RGBA16I),q===r.INT&&(it=r.RGBA32I)),C===r.RGB&&(q===r.UNSIGNED_INT_5_9_9_9_REV&&(it=r.RGB9_E5),q===r.UNSIGNED_INT_10F_11F_11F_REV&&(it=r.R11F_G11F_B10F)),C===r.RGBA){const Ft=gt?$a:ve.getTransfer(st);q===r.FLOAT&&(it=r.RGBA32F),q===r.HALF_FLOAT&&(it=r.RGBA16F),q===r.UNSIGNED_BYTE&&(it=Ft===Ee?r.SRGB8_ALPHA8:r.RGBA8),q===r.UNSIGNED_SHORT_4_4_4_4&&(it=r.RGBA4),q===r.UNSIGNED_SHORT_5_5_5_1&&(it=r.RGB5_A1)}return(it===r.R16F||it===r.R32F||it===r.RG16F||it===r.RG32F||it===r.RGBA16F||it===r.RGBA32F)&&t.get("EXT_color_buffer_float"),it}function M(O,C){let q;return O?C===null||C===gr||C===No?q=r.DEPTH24_STENCIL8:C===Gn?q=r.DEPTH32F_STENCIL8:C===Io&&(q=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):C===null||C===gr||C===No?q=r.DEPTH_COMPONENT24:C===Gn?q=r.DEPTH_COMPONENT32F:C===Io&&(q=r.DEPTH_COMPONENT16),q}function A(O,C){return m(O)===!0||O.isFramebufferTexture&&O.minFilter!==hn&&O.minFilter!==nn?Math.log2(Math.max(C.width,C.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?C.mipmaps.length:1}function S(O){const C=O.target;C.removeEventListener("dispose",S),x(C),C.isVideoTexture&&u.delete(C)}function E(O){const C=O.target;C.removeEventListener("dispose",E),_(C)}function x(O){const C=n.get(O);if(C.__webglInit===void 0)return;const q=O.source,st=d.get(q);if(st){const gt=st[C.__cacheKey];gt.usedTimes--,gt.usedTimes===0&&v(O),Object.keys(st).length===0&&d.delete(q)}n.remove(O)}function v(O){const C=n.get(O);r.deleteTexture(C.__webglTexture);const q=O.source,st=d.get(q);delete st[C.__cacheKey],o.memory.textures--}function _(O){const C=n.get(O);if(O.depthTexture&&(O.depthTexture.dispose(),n.remove(O.depthTexture)),O.isWebGLCubeRenderTarget)for(let st=0;st<6;st++){if(Array.isArray(C.__webglFramebuffer[st]))for(let gt=0;gt<C.__webglFramebuffer[st].length;gt++)r.deleteFramebuffer(C.__webglFramebuffer[st][gt]);else r.deleteFramebuffer(C.__webglFramebuffer[st]);C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer[st])}else{if(Array.isArray(C.__webglFramebuffer))for(let st=0;st<C.__webglFramebuffer.length;st++)r.deleteFramebuffer(C.__webglFramebuffer[st]);else r.deleteFramebuffer(C.__webglFramebuffer);if(C.__webglDepthbuffer&&r.deleteRenderbuffer(C.__webglDepthbuffer),C.__webglMultisampledFramebuffer&&r.deleteFramebuffer(C.__webglMultisampledFramebuffer),C.__webglColorRenderbuffer)for(let st=0;st<C.__webglColorRenderbuffer.length;st++)C.__webglColorRenderbuffer[st]&&r.deleteRenderbuffer(C.__webglColorRenderbuffer[st]);C.__webglDepthRenderbuffer&&r.deleteRenderbuffer(C.__webglDepthRenderbuffer)}const q=O.textures;for(let st=0,gt=q.length;st<gt;st++){const it=n.get(q[st]);it.__webglTexture&&(r.deleteTexture(it.__webglTexture),o.memory.textures--),n.remove(q[st])}n.remove(O)}let T=0;function I(){T=0}function B(){const O=T;return O>=i.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+i.maxTextures),T+=1,O}function V(O){const C=[];return C.push(O.wrapS),C.push(O.wrapT),C.push(O.wrapR||0),C.push(O.magFilter),C.push(O.minFilter),C.push(O.anisotropy),C.push(O.internalFormat),C.push(O.format),C.push(O.type),C.push(O.generateMipmaps),C.push(O.premultiplyAlpha),C.push(O.flipY),C.push(O.unpackAlignment),C.push(O.colorSpace),C.join()}function H(O,C){const q=n.get(O);if(O.isVideoTexture&&yt(O),O.isRenderTargetTexture===!1&&O.isExternalTexture!==!0&&O.version>0&&q.__version!==O.version){const st=O.image;if(st===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(st.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ct(q,O,C);return}}else O.isExternalTexture&&(q.__webglTexture=O.sourceTexture?O.sourceTexture:null);e.bindTexture(r.TEXTURE_2D,q.__webglTexture,r.TEXTURE0+C)}function U(O,C){const q=n.get(O);if(O.isRenderTargetTexture===!1&&O.version>0&&q.__version!==O.version){ct(q,O,C);return}e.bindTexture(r.TEXTURE_2D_ARRAY,q.__webglTexture,r.TEXTURE0+C)}function Q(O,C){const q=n.get(O);if(O.isRenderTargetTexture===!1&&O.version>0&&q.__version!==O.version){ct(q,O,C);return}e.bindTexture(r.TEXTURE_3D,q.__webglTexture,r.TEXTURE0+C)}function W(O,C){const q=n.get(O);if(O.version>0&&q.__version!==O.version){pt(q,O,C);return}e.bindTexture(r.TEXTURE_CUBE_MAP,q.__webglTexture,r.TEXTURE0+C)}const lt={[Ha]:r.REPEAT,[hi]:r.CLAMP_TO_EDGE,[Ga]:r.MIRRORED_REPEAT},ut={[hn]:r.NEAREST,[hp]:r.NEAREST_MIPMAP_NEAREST,[vo]:r.NEAREST_MIPMAP_LINEAR,[nn]:r.LINEAR,[Ca]:r.LINEAR_MIPMAP_NEAREST,[Vi]:r.LINEAR_MIPMAP_LINEAR},mt={[dv]:r.NEVER,[_v]:r.ALWAYS,[fv]:r.LESS,[xp]:r.LEQUAL,[pv]:r.EQUAL,[yv]:r.GEQUAL,[mv]:r.GREATER,[gv]:r.NOTEQUAL};function Xt(O,C){if(C.type===Gn&&t.has("OES_texture_float_linear")===!1&&(C.magFilter===nn||C.magFilter===Ca||C.magFilter===vo||C.magFilter===Vi||C.minFilter===nn||C.minFilter===Ca||C.minFilter===vo||C.minFilter===Vi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(O,r.TEXTURE_WRAP_S,lt[C.wrapS]),r.texParameteri(O,r.TEXTURE_WRAP_T,lt[C.wrapT]),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,lt[C.wrapR]),r.texParameteri(O,r.TEXTURE_MAG_FILTER,ut[C.magFilter]),r.texParameteri(O,r.TEXTURE_MIN_FILTER,ut[C.minFilter]),C.compareFunction&&(r.texParameteri(O,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(O,r.TEXTURE_COMPARE_FUNC,mt[C.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(C.magFilter===hn||C.minFilter!==vo&&C.minFilter!==Vi||C.type===Gn&&t.has("OES_texture_float_linear")===!1)return;if(C.anisotropy>1||n.get(C).__currentAnisotropy){const q=t.get("EXT_texture_filter_anisotropic");r.texParameterf(O,q.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(C.anisotropy,i.getMaxAnisotropy())),n.get(C).__currentAnisotropy=C.anisotropy}}}function te(O,C){let q=!1;O.__webglInit===void 0&&(O.__webglInit=!0,C.addEventListener("dispose",S));const st=C.source;let gt=d.get(st);gt===void 0&&(gt={},d.set(st,gt));const it=V(C);if(it!==O.__cacheKey){gt[it]===void 0&&(gt[it]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,q=!0),gt[it].usedTimes++;const Ft=gt[O.__cacheKey];Ft!==void 0&&(gt[O.__cacheKey].usedTimes--,Ft.usedTimes===0&&v(C)),O.__cacheKey=it,O.__webglTexture=gt[it].texture}return q}function qt(O,C,q){return Math.floor(Math.floor(O/q)/C)}function $t(O,C,q,st){const it=O.updateRanges;if(it.length===0)e.texSubImage2D(r.TEXTURE_2D,0,0,0,C.width,C.height,q,st,C.data);else{it.sort((bt,Rt)=>bt.start-Rt.start);let Ft=0;for(let bt=1;bt<it.length;bt++){const Rt=it[Ft],Jt=it[bt],F=Rt.start+Rt.count,j=qt(Jt.start,C.width,4),wt=qt(Rt.start,C.width,4);Jt.start<=F+1&&j===wt&&qt(Jt.start+Jt.count-1,C.width,4)===j?Rt.count=Math.max(Rt.count,Jt.start+Jt.count-Rt.start):(++Ft,it[Ft]=Jt)}it.length=Ft+1;const Et=r.getParameter(r.UNPACK_ROW_LENGTH),kt=r.getParameter(r.UNPACK_SKIP_PIXELS),Vt=r.getParameter(r.UNPACK_SKIP_ROWS);r.pixelStorei(r.UNPACK_ROW_LENGTH,C.width);for(let bt=0,Rt=it.length;bt<Rt;bt++){const Jt=it[bt],F=Math.floor(Jt.start/4),j=Math.ceil(Jt.count/4),wt=F%C.width,k=Math.floor(F/C.width),_t=j,Mt=1;r.pixelStorei(r.UNPACK_SKIP_PIXELS,wt),r.pixelStorei(r.UNPACK_SKIP_ROWS,k),e.texSubImage2D(r.TEXTURE_2D,0,wt,k,_t,Mt,q,st,C.data)}O.clearUpdateRanges(),r.pixelStorei(r.UNPACK_ROW_LENGTH,Et),r.pixelStorei(r.UNPACK_SKIP_PIXELS,kt),r.pixelStorei(r.UNPACK_SKIP_ROWS,Vt)}}function ct(O,C,q){let st=r.TEXTURE_2D;(C.isDataArrayTexture||C.isCompressedArrayTexture)&&(st=r.TEXTURE_2D_ARRAY),C.isData3DTexture&&(st=r.TEXTURE_3D);const gt=te(O,C),it=C.source;e.bindTexture(st,O.__webglTexture,r.TEXTURE0+q);const Ft=n.get(it);if(it.version!==Ft.__version||gt===!0){e.activeTexture(r.TEXTURE0+q);const Et=ve.getPrimaries(ve.workingColorSpace),kt=C.colorSpace===or?null:ve.getPrimaries(C.colorSpace),Vt=C.colorSpace===or||Et===kt?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Vt);let bt=y(C.image,!1,i.maxTextureSize);bt=It(C,bt);const Rt=s.convert(C.format,C.colorSpace),Jt=s.convert(C.type);let F=b(C.internalFormat,Rt,Jt,C.colorSpace,C.isVideoTexture);Xt(st,C);let j;const wt=C.mipmaps,k=C.isVideoTexture!==!0,_t=Ft.__version===void 0||gt===!0,Mt=it.dataReady,Ot=A(C,bt);if(C.isDepthTexture)F=M(C.format===Lo,C.type),_t&&(k?e.texStorage2D(r.TEXTURE_2D,1,F,bt.width,bt.height):e.texImage2D(r.TEXTURE_2D,0,F,bt.width,bt.height,0,Rt,Jt,null));else if(C.isDataTexture)if(wt.length>0){k&&_t&&e.texStorage2D(r.TEXTURE_2D,Ot,F,wt[0].width,wt[0].height);for(let xt=0,ft=wt.length;xt<ft;xt++)j=wt[xt],k?Mt&&e.texSubImage2D(r.TEXTURE_2D,xt,0,0,j.width,j.height,Rt,Jt,j.data):e.texImage2D(r.TEXTURE_2D,xt,F,j.width,j.height,0,Rt,Jt,j.data);C.generateMipmaps=!1}else k?(_t&&e.texStorage2D(r.TEXTURE_2D,Ot,F,bt.width,bt.height),Mt&&$t(C,bt,Rt,Jt)):e.texImage2D(r.TEXTURE_2D,0,F,bt.width,bt.height,0,Rt,Jt,bt.data);else if(C.isCompressedTexture)if(C.isCompressedArrayTexture){k&&_t&&e.texStorage3D(r.TEXTURE_2D_ARRAY,Ot,F,wt[0].width,wt[0].height,bt.depth);for(let xt=0,ft=wt.length;xt<ft;xt++)if(j=wt[xt],C.format!==Nn)if(Rt!==null)if(k){if(Mt)if(C.layerUpdates.size>0){const Lt=If(j.width,j.height,C.format,C.type);for(const ne of C.layerUpdates){const Me=j.data.subarray(ne*Lt/j.data.BYTES_PER_ELEMENT,(ne+1)*Lt/j.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,xt,0,0,ne,j.width,j.height,1,Rt,Me)}C.clearLayerUpdates()}else e.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,xt,0,0,0,j.width,j.height,bt.depth,Rt,j.data)}else e.compressedTexImage3D(r.TEXTURE_2D_ARRAY,xt,F,j.width,j.height,bt.depth,0,j.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else k?Mt&&e.texSubImage3D(r.TEXTURE_2D_ARRAY,xt,0,0,0,j.width,j.height,bt.depth,Rt,Jt,j.data):e.texImage3D(r.TEXTURE_2D_ARRAY,xt,F,j.width,j.height,bt.depth,0,Rt,Jt,j.data)}else{k&&_t&&e.texStorage2D(r.TEXTURE_2D,Ot,F,wt[0].width,wt[0].height);for(let xt=0,ft=wt.length;xt<ft;xt++)j=wt[xt],C.format!==Nn?Rt!==null?k?Mt&&e.compressedTexSubImage2D(r.TEXTURE_2D,xt,0,0,j.width,j.height,Rt,j.data):e.compressedTexImage2D(r.TEXTURE_2D,xt,F,j.width,j.height,0,j.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):k?Mt&&e.texSubImage2D(r.TEXTURE_2D,xt,0,0,j.width,j.height,Rt,Jt,j.data):e.texImage2D(r.TEXTURE_2D,xt,F,j.width,j.height,0,Rt,Jt,j.data)}else if(C.isDataArrayTexture)if(k){if(_t&&e.texStorage3D(r.TEXTURE_2D_ARRAY,Ot,F,bt.width,bt.height,bt.depth),Mt)if(C.layerUpdates.size>0){const xt=If(bt.width,bt.height,C.format,C.type);for(const ft of C.layerUpdates){const Lt=bt.data.subarray(ft*xt/bt.data.BYTES_PER_ELEMENT,(ft+1)*xt/bt.data.BYTES_PER_ELEMENT);e.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,ft,bt.width,bt.height,1,Rt,Jt,Lt)}C.clearLayerUpdates()}else e.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,bt.width,bt.height,bt.depth,Rt,Jt,bt.data)}else e.texImage3D(r.TEXTURE_2D_ARRAY,0,F,bt.width,bt.height,bt.depth,0,Rt,Jt,bt.data);else if(C.isData3DTexture)k?(_t&&e.texStorage3D(r.TEXTURE_3D,Ot,F,bt.width,bt.height,bt.depth),Mt&&e.texSubImage3D(r.TEXTURE_3D,0,0,0,0,bt.width,bt.height,bt.depth,Rt,Jt,bt.data)):e.texImage3D(r.TEXTURE_3D,0,F,bt.width,bt.height,bt.depth,0,Rt,Jt,bt.data);else if(C.isFramebufferTexture){if(_t)if(k)e.texStorage2D(r.TEXTURE_2D,Ot,F,bt.width,bt.height);else{let xt=bt.width,ft=bt.height;for(let Lt=0;Lt<Ot;Lt++)e.texImage2D(r.TEXTURE_2D,Lt,F,xt,ft,0,Rt,Jt,null),xt>>=1,ft>>=1}}else if(wt.length>0){if(k&&_t){const xt=Pt(wt[0]);e.texStorage2D(r.TEXTURE_2D,Ot,F,xt.width,xt.height)}for(let xt=0,ft=wt.length;xt<ft;xt++)j=wt[xt],k?Mt&&e.texSubImage2D(r.TEXTURE_2D,xt,0,0,Rt,Jt,j):e.texImage2D(r.TEXTURE_2D,xt,F,Rt,Jt,j);C.generateMipmaps=!1}else if(k){if(_t){const xt=Pt(bt);e.texStorage2D(r.TEXTURE_2D,Ot,F,xt.width,xt.height)}Mt&&e.texSubImage2D(r.TEXTURE_2D,0,0,0,Rt,Jt,bt)}else e.texImage2D(r.TEXTURE_2D,0,F,Rt,Jt,bt);m(C)&&g(st),Ft.__version=it.version,C.onUpdate&&C.onUpdate(C)}O.__version=C.version}function pt(O,C,q){if(C.image.length!==6)return;const st=te(O,C),gt=C.source;e.bindTexture(r.TEXTURE_CUBE_MAP,O.__webglTexture,r.TEXTURE0+q);const it=n.get(gt);if(gt.version!==it.__version||st===!0){e.activeTexture(r.TEXTURE0+q);const Ft=ve.getPrimaries(ve.workingColorSpace),Et=C.colorSpace===or?null:ve.getPrimaries(C.colorSpace),kt=C.colorSpace===or||Ft===Et?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,C.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,C.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,kt);const Vt=C.isCompressedTexture||C.image[0].isCompressedTexture,bt=C.image[0]&&C.image[0].isDataTexture,Rt=[];for(let ft=0;ft<6;ft++)!Vt&&!bt?Rt[ft]=y(C.image[ft],!0,i.maxCubemapSize):Rt[ft]=bt?C.image[ft].image:C.image[ft],Rt[ft]=It(C,Rt[ft]);const Jt=Rt[0],F=s.convert(C.format,C.colorSpace),j=s.convert(C.type),wt=b(C.internalFormat,F,j,C.colorSpace),k=C.isVideoTexture!==!0,_t=it.__version===void 0||st===!0,Mt=gt.dataReady;let Ot=A(C,Jt);Xt(r.TEXTURE_CUBE_MAP,C);let xt;if(Vt){k&&_t&&e.texStorage2D(r.TEXTURE_CUBE_MAP,Ot,wt,Jt.width,Jt.height);for(let ft=0;ft<6;ft++){xt=Rt[ft].mipmaps;for(let Lt=0;Lt<xt.length;Lt++){const ne=xt[Lt];C.format!==Nn?F!==null?k?Mt&&e.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Lt,0,0,ne.width,ne.height,F,ne.data):e.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Lt,wt,ne.width,ne.height,0,ne.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):k?Mt&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Lt,0,0,ne.width,ne.height,F,j,ne.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Lt,wt,ne.width,ne.height,0,F,j,ne.data)}}}else{if(xt=C.mipmaps,k&&_t){xt.length>0&&Ot++;const ft=Pt(Rt[0]);e.texStorage2D(r.TEXTURE_CUBE_MAP,Ot,wt,ft.width,ft.height)}for(let ft=0;ft<6;ft++)if(bt){k?Mt&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,0,0,Rt[ft].width,Rt[ft].height,F,j,Rt[ft].data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,wt,Rt[ft].width,Rt[ft].height,0,F,j,Rt[ft].data);for(let Lt=0;Lt<xt.length;Lt++){const Me=xt[Lt].image[ft].image;k?Mt&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Lt+1,0,0,Me.width,Me.height,F,j,Me.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Lt+1,wt,Me.width,Me.height,0,F,j,Me.data)}}else{k?Mt&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,0,0,F,j,Rt[ft]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,0,wt,F,j,Rt[ft]);for(let Lt=0;Lt<xt.length;Lt++){const ne=xt[Lt];k?Mt&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Lt+1,0,0,F,j,ne.image[ft]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ft,Lt+1,wt,F,j,ne.image[ft])}}}m(C)&&g(r.TEXTURE_CUBE_MAP),it.__version=gt.version,C.onUpdate&&C.onUpdate(C)}O.__version=C.version}function K(O,C,q,st,gt,it){const Ft=s.convert(q.format,q.colorSpace),Et=s.convert(q.type),kt=b(q.internalFormat,Ft,Et,q.colorSpace),Vt=n.get(C),bt=n.get(q);if(bt.__renderTarget=C,!Vt.__hasExternalTextures){const Rt=Math.max(1,C.width>>it),Jt=Math.max(1,C.height>>it);gt===r.TEXTURE_3D||gt===r.TEXTURE_2D_ARRAY?e.texImage3D(gt,it,kt,Rt,Jt,C.depth,0,Ft,Et,null):e.texImage2D(gt,it,kt,Rt,Jt,0,Ft,Et,null)}e.bindFramebuffer(r.FRAMEBUFFER,O),dt(C)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,st,gt,bt.__webglTexture,0,ht(C)):(gt===r.TEXTURE_2D||gt>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&gt<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,st,gt,bt.__webglTexture,it),e.bindFramebuffer(r.FRAMEBUFFER,null)}function R(O,C,q){if(r.bindRenderbuffer(r.RENDERBUFFER,O),C.depthBuffer){const st=C.depthTexture,gt=st&&st.isDepthTexture?st.type:null,it=M(C.stencilBuffer,gt),Ft=C.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Et=ht(C);dt(C)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Et,it,C.width,C.height):q?r.renderbufferStorageMultisample(r.RENDERBUFFER,Et,it,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,it,C.width,C.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,Ft,r.RENDERBUFFER,O)}else{const st=C.textures;for(let gt=0;gt<st.length;gt++){const it=st[gt],Ft=s.convert(it.format,it.colorSpace),Et=s.convert(it.type),kt=b(it.internalFormat,Ft,Et,it.colorSpace),Vt=ht(C);q&&dt(C)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Vt,kt,C.width,C.height):dt(C)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Vt,kt,C.width,C.height):r.renderbufferStorage(r.RENDERBUFFER,kt,C.width,C.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function D(O,C){if(C&&C.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(r.FRAMEBUFFER,O),!(C.depthTexture&&C.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const st=n.get(C.depthTexture);st.__renderTarget=C,(!st.__webglTexture||C.depthTexture.image.width!==C.width||C.depthTexture.image.height!==C.height)&&(C.depthTexture.image.width=C.width,C.depthTexture.image.height=C.height,C.depthTexture.needsUpdate=!0),H(C.depthTexture,0);const gt=st.__webglTexture,it=ht(C);if(C.depthTexture.format===Po)dt(C)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,gt,0,it):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,gt,0);else if(C.depthTexture.format===Lo)dt(C)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,gt,0,it):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,gt,0);else throw new Error("Unknown depthTexture format")}function z(O){const C=n.get(O),q=O.isWebGLCubeRenderTarget===!0;if(C.__boundDepthTexture!==O.depthTexture){const st=O.depthTexture;if(C.__depthDisposeCallback&&C.__depthDisposeCallback(),st){const gt=()=>{delete C.__boundDepthTexture,delete C.__depthDisposeCallback,st.removeEventListener("dispose",gt)};st.addEventListener("dispose",gt),C.__depthDisposeCallback=gt}C.__boundDepthTexture=st}if(O.depthTexture&&!C.__autoAllocateDepthBuffer){if(q)throw new Error("target.depthTexture not supported in Cube render targets");const st=O.texture.mipmaps;st&&st.length>0?D(C.__webglFramebuffer[0],O):D(C.__webglFramebuffer,O)}else if(q){C.__webglDepthbuffer=[];for(let st=0;st<6;st++)if(e.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[st]),C.__webglDepthbuffer[st]===void 0)C.__webglDepthbuffer[st]=r.createRenderbuffer(),R(C.__webglDepthbuffer[st],O,!1);else{const gt=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,it=C.__webglDepthbuffer[st];r.bindRenderbuffer(r.RENDERBUFFER,it),r.framebufferRenderbuffer(r.FRAMEBUFFER,gt,r.RENDERBUFFER,it)}}else{const st=O.texture.mipmaps;if(st&&st.length>0?e.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer[0]):e.bindFramebuffer(r.FRAMEBUFFER,C.__webglFramebuffer),C.__webglDepthbuffer===void 0)C.__webglDepthbuffer=r.createRenderbuffer(),R(C.__webglDepthbuffer,O,!1);else{const gt=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,it=C.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,it),r.framebufferRenderbuffer(r.FRAMEBUFFER,gt,r.RENDERBUFFER,it)}}e.bindFramebuffer(r.FRAMEBUFFER,null)}function J(O,C,q){const st=n.get(O);C!==void 0&&K(st.__webglFramebuffer,O,O.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),q!==void 0&&z(O)}function N(O){const C=O.texture,q=n.get(O),st=n.get(C);O.addEventListener("dispose",E);const gt=O.textures,it=O.isWebGLCubeRenderTarget===!0,Ft=gt.length>1;if(Ft||(st.__webglTexture===void 0&&(st.__webglTexture=r.createTexture()),st.__version=C.version,o.memory.textures++),it){q.__webglFramebuffer=[];for(let Et=0;Et<6;Et++)if(C.mipmaps&&C.mipmaps.length>0){q.__webglFramebuffer[Et]=[];for(let kt=0;kt<C.mipmaps.length;kt++)q.__webglFramebuffer[Et][kt]=r.createFramebuffer()}else q.__webglFramebuffer[Et]=r.createFramebuffer()}else{if(C.mipmaps&&C.mipmaps.length>0){q.__webglFramebuffer=[];for(let Et=0;Et<C.mipmaps.length;Et++)q.__webglFramebuffer[Et]=r.createFramebuffer()}else q.__webglFramebuffer=r.createFramebuffer();if(Ft)for(let Et=0,kt=gt.length;Et<kt;Et++){const Vt=n.get(gt[Et]);Vt.__webglTexture===void 0&&(Vt.__webglTexture=r.createTexture(),o.memory.textures++)}if(O.samples>0&&dt(O)===!1){q.__webglMultisampledFramebuffer=r.createFramebuffer(),q.__webglColorRenderbuffer=[],e.bindFramebuffer(r.FRAMEBUFFER,q.__webglMultisampledFramebuffer);for(let Et=0;Et<gt.length;Et++){const kt=gt[Et];q.__webglColorRenderbuffer[Et]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,q.__webglColorRenderbuffer[Et]);const Vt=s.convert(kt.format,kt.colorSpace),bt=s.convert(kt.type),Rt=b(kt.internalFormat,Vt,bt,kt.colorSpace,O.isXRRenderTarget===!0),Jt=ht(O);r.renderbufferStorageMultisample(r.RENDERBUFFER,Jt,Rt,O.width,O.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Et,r.RENDERBUFFER,q.__webglColorRenderbuffer[Et])}r.bindRenderbuffer(r.RENDERBUFFER,null),O.depthBuffer&&(q.__webglDepthRenderbuffer=r.createRenderbuffer(),R(q.__webglDepthRenderbuffer,O,!0)),e.bindFramebuffer(r.FRAMEBUFFER,null)}}if(it){e.bindTexture(r.TEXTURE_CUBE_MAP,st.__webglTexture),Xt(r.TEXTURE_CUBE_MAP,C);for(let Et=0;Et<6;Et++)if(C.mipmaps&&C.mipmaps.length>0)for(let kt=0;kt<C.mipmaps.length;kt++)K(q.__webglFramebuffer[Et][kt],O,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Et,kt);else K(q.__webglFramebuffer[Et],O,C,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+Et,0);m(C)&&g(r.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Ft){for(let Et=0,kt=gt.length;Et<kt;Et++){const Vt=gt[Et],bt=n.get(Vt);let Rt=r.TEXTURE_2D;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(Rt=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),e.bindTexture(Rt,bt.__webglTexture),Xt(Rt,Vt),K(q.__webglFramebuffer,O,Vt,r.COLOR_ATTACHMENT0+Et,Rt,0),m(Vt)&&g(Rt)}e.unbindTexture()}else{let Et=r.TEXTURE_2D;if((O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(Et=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),e.bindTexture(Et,st.__webglTexture),Xt(Et,C),C.mipmaps&&C.mipmaps.length>0)for(let kt=0;kt<C.mipmaps.length;kt++)K(q.__webglFramebuffer[kt],O,C,r.COLOR_ATTACHMENT0,Et,kt);else K(q.__webglFramebuffer,O,C,r.COLOR_ATTACHMENT0,Et,0);m(C)&&g(Et),e.unbindTexture()}O.depthBuffer&&z(O)}function G(O){const C=O.textures;for(let q=0,st=C.length;q<st;q++){const gt=C[q];if(m(gt)){const it=w(O),Ft=n.get(gt).__webglTexture;e.bindTexture(it,Ft),g(it),e.unbindTexture()}}}const Z=[],tt=[];function nt(O){if(O.samples>0){if(dt(O)===!1){const C=O.textures,q=O.width,st=O.height;let gt=r.COLOR_BUFFER_BIT;const it=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Ft=n.get(O),Et=C.length>1;if(Et)for(let Vt=0;Vt<C.length;Vt++)e.bindFramebuffer(r.FRAMEBUFFER,Ft.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Vt,r.RENDERBUFFER,null),e.bindFramebuffer(r.FRAMEBUFFER,Ft.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Vt,r.TEXTURE_2D,null,0);e.bindFramebuffer(r.READ_FRAMEBUFFER,Ft.__webglMultisampledFramebuffer);const kt=O.texture.mipmaps;kt&&kt.length>0?e.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ft.__webglFramebuffer[0]):e.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ft.__webglFramebuffer);for(let Vt=0;Vt<C.length;Vt++){if(O.resolveDepthBuffer&&(O.depthBuffer&&(gt|=r.DEPTH_BUFFER_BIT),O.stencilBuffer&&O.resolveStencilBuffer&&(gt|=r.STENCIL_BUFFER_BIT)),Et){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Ft.__webglColorRenderbuffer[Vt]);const bt=n.get(C[Vt]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,bt,0)}r.blitFramebuffer(0,0,q,st,0,0,q,st,gt,r.NEAREST),l===!0&&(Z.length=0,tt.length=0,Z.push(r.COLOR_ATTACHMENT0+Vt),O.depthBuffer&&O.resolveDepthBuffer===!1&&(Z.push(it),tt.push(it),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,tt)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Z))}if(e.bindFramebuffer(r.READ_FRAMEBUFFER,null),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),Et)for(let Vt=0;Vt<C.length;Vt++){e.bindFramebuffer(r.FRAMEBUFFER,Ft.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Vt,r.RENDERBUFFER,Ft.__webglColorRenderbuffer[Vt]);const bt=n.get(C[Vt]).__webglTexture;e.bindFramebuffer(r.FRAMEBUFFER,Ft.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Vt,r.TEXTURE_2D,bt,0)}e.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ft.__webglMultisampledFramebuffer)}else if(O.depthBuffer&&O.resolveDepthBuffer===!1&&l){const C=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[C])}}}function ht(O){return Math.min(i.maxSamples,O.samples)}function dt(O){const C=n.get(O);return O.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&C.__useRenderToTexture!==!1}function yt(O){const C=o.render.frame;u.get(O)!==C&&(u.set(O,C),O.update())}function It(O,C){const q=O.colorSpace,st=O.format,gt=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||q!==Rs&&q!==or&&(ve.getTransfer(q)===Ee?(st!==Nn||gt!==Ci)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",q)),C}function Pt(O){return typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement?(c.width=O.naturalWidth||O.width,c.height=O.naturalHeight||O.height):typeof VideoFrame<"u"&&O instanceof VideoFrame?(c.width=O.displayWidth,c.height=O.displayHeight):(c.width=O.width,c.height=O.height),c}this.allocateTextureUnit=B,this.resetTextureUnits=I,this.setTexture2D=H,this.setTexture2DArray=U,this.setTexture3D=Q,this.setTextureCube=W,this.rebindTextures=J,this.setupRenderTarget=N,this.updateRenderTargetMipmap=G,this.updateMultisampleRenderTarget=nt,this.setupDepthRenderbuffer=z,this.setupFrameBufferTexture=K,this.useMultisampledRTT=dt}function Cx(r,t){function e(n,i=or){let s;const o=ve.getTransfer(i);if(n===Ci)return r.UNSIGNED_BYTE;if(n===oh)return r.UNSIGNED_SHORT_4_4_4_4;if(n===ah)return r.UNSIGNED_SHORT_5_5_5_1;if(n===pp)return r.UNSIGNED_INT_5_9_9_9_REV;if(n===mp)return r.UNSIGNED_INT_10F_11F_11F_REV;if(n===dp)return r.BYTE;if(n===fp)return r.SHORT;if(n===Io)return r.UNSIGNED_SHORT;if(n===sh)return r.INT;if(n===gr)return r.UNSIGNED_INT;if(n===Gn)return r.FLOAT;if(n===Ps)return r.HALF_FLOAT;if(n===gp)return r.ALPHA;if(n===yp)return r.RGB;if(n===Nn)return r.RGBA;if(n===Po)return r.DEPTH_COMPONENT;if(n===Lo)return r.DEPTH_STENCIL;if(n===lh)return r.RED;if(n===pl)return r.RED_INTEGER;if(n===_p)return r.RG;if(n===ch)return r.RG_INTEGER;if(n===uh)return r.RGBA_INTEGER;if(n===Ra||n===Ia||n===Na||n===Pa)if(o===Ee)if(s=t.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(n===Ra)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===Ia)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===Na)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===Pa)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=t.get("WEBGL_compressed_texture_s3tc"),s!==null){if(n===Ra)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===Ia)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===Na)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===Pa)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(n===fu||n===pu||n===mu||n===gu)if(s=t.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(n===fu)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(n===pu)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(n===mu)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(n===gu)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(n===yu||n===_u||n===vu)if(s=t.get("WEBGL_compressed_texture_etc"),s!==null){if(n===yu||n===_u)return o===Ee?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(n===vu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(n===xu||n===bu||n===Mu||n===Su||n===wu||n===Tu||n===Eu||n===Au||n===Cu||n===Ru||n===Iu||n===Nu||n===Pu||n===Lu)if(s=t.get("WEBGL_compressed_texture_astc"),s!==null){if(n===xu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(n===bu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(n===Mu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(n===Su)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(n===wu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(n===Tu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(n===Eu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(n===Au)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(n===Cu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(n===Ru)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(n===Iu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(n===Nu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(n===Pu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(n===Lu)return o===Ee?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(n===Du||n===Ou||n===Uu)if(s=t.get("EXT_texture_compression_bptc"),s!==null){if(n===Du)return o===Ee?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(n===Ou)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(n===Uu)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(n===Fu||n===Bu||n===zu||n===ku)if(s=t.get("EXT_texture_compression_rgtc"),s!==null){if(n===Fu)return s.COMPRESSED_RED_RGTC1_EXT;if(n===Bu)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(n===zu)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(n===ku)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return n===No?r.UNSIGNED_INT_24_8:r[n]!==void 0?r[n]:null}return{convert:e}}const y2="\nvoid main() {\n\n	gl_Position = vec4( position, 1.0 );\n\n}",_2="\nuniform sampler2DArray depthColor;\nuniform float depthWidth;\nuniform float depthHeight;\n\nvoid main() {\n\n	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );\n\n	if ( coord.x >= 1.0 ) {\n\n		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;\n\n	} else {\n\n		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;\n\n	}\n\n}";class v2{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e){if(this.texture===null){const n=new Rp(t.texture);(t.depthNear!==e.depthNear||t.depthFar!==e.depthFar)&&(this.depthNear=t.depthNear,this.depthFar=t.depthFar),this.texture=n}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,n=new $n({vertexShader:y2,fragmentShader:_2,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new Ue(new Ds(20,20),n)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class x2 extends Yi{constructor(t,e){super();const n=this;let i=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,d=null,f=null,p=null;const y=typeof XRWebGLBinding<"u",m=new v2,g={},w=e.getContextAttributes();let b=null,M=null;const A=[],S=[],E=new at;let x=null;const v=new Fe;v.viewport=new _e;const _=new Fe;_.viewport=new _e;const T=[v,_],I=new yx;let B=null,V=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(ct){let pt=A[ct];return pt===void 0&&(pt=new Yc,A[ct]=pt),pt.getTargetRaySpace()},this.getControllerGrip=function(ct){let pt=A[ct];return pt===void 0&&(pt=new Yc,A[ct]=pt),pt.getGripSpace()},this.getHand=function(ct){let pt=A[ct];return pt===void 0&&(pt=new Yc,A[ct]=pt),pt.getHandSpace()};function H(ct){const pt=S.indexOf(ct.inputSource);if(pt===-1)return;const K=A[pt];K!==void 0&&(K.update(ct.inputSource,ct.frame,c||o),K.dispatchEvent({type:ct.type,data:ct.inputSource}))}function U(){i.removeEventListener("select",H),i.removeEventListener("selectstart",H),i.removeEventListener("selectend",H),i.removeEventListener("squeeze",H),i.removeEventListener("squeezestart",H),i.removeEventListener("squeezeend",H),i.removeEventListener("end",U),i.removeEventListener("inputsourceschange",Q);for(let ct=0;ct<A.length;ct++){const pt=S[ct];pt!==null&&(S[ct]=null,A[ct].disconnect(pt))}B=null,V=null,m.reset();for(const ct in g)delete g[ct];t.setRenderTarget(b),f=null,d=null,h=null,i=null,M=null,$t.stop(),n.isPresenting=!1,t.setPixelRatio(x),t.setSize(E.width,E.height,!1),n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(ct){s=ct,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(ct){a=ct,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(ct){c=ct},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h===null&&y&&(h=new XRWebGLBinding(i,e)),h},this.getFrame=function(){return p},this.getSession=function(){return i},this.setSession=async function(ct){if(i=ct,i!==null){if(b=t.getRenderTarget(),i.addEventListener("select",H),i.addEventListener("selectstart",H),i.addEventListener("selectend",H),i.addEventListener("squeeze",H),i.addEventListener("squeezestart",H),i.addEventListener("squeezeend",H),i.addEventListener("end",U),i.addEventListener("inputsourceschange",Q),w.xrCompatible!==!0&&await e.makeXRCompatible(),x=t.getPixelRatio(),t.getSize(E),y&&"createProjectionLayer"in XRWebGLBinding.prototype){let K=null,R=null,D=null;w.depth&&(D=w.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,K=w.stencil?Lo:Po,R=w.stencil?No:gr);const z={colorFormat:e.RGBA8,depthFormat:D,scaleFactor:s};h=this.getBinding(),d=h.createProjectionLayer(z),i.updateRenderState({layers:[d]}),t.setPixelRatio(1),t.setSize(d.textureWidth,d.textureHeight,!1),M=new Ri(d.textureWidth,d.textureHeight,{format:Nn,type:Ci,depthTexture:new Cp(d.textureWidth,d.textureHeight,R,void 0,void 0,void 0,void 0,void 0,void 0,K),stencilBuffer:w.stencil,colorSpace:t.outputColorSpace,samples:w.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const K={antialias:w.antialias,alpha:!0,depth:w.depth,stencil:w.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,e,K),i.updateRenderState({baseLayer:f}),t.setPixelRatio(1),t.setSize(f.framebufferWidth,f.framebufferHeight,!1),M=new Ri(f.framebufferWidth,f.framebufferHeight,{format:Nn,type:Ci,colorSpace:t.outputColorSpace,stencilBuffer:w.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}M.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await i.requestReferenceSpace(a),$t.setContext(i),$t.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode},this.getDepthTexture=function(){return m.getDepthTexture()};function Q(ct){for(let pt=0;pt<ct.removed.length;pt++){const K=ct.removed[pt],R=S.indexOf(K);R>=0&&(S[R]=null,A[R].disconnect(K))}for(let pt=0;pt<ct.added.length;pt++){const K=ct.added[pt];let R=S.indexOf(K);if(R===-1){for(let z=0;z<A.length;z++)if(z>=S.length){S.push(K),R=z;break}else if(S[z]===null){S[z]=K,R=z;break}if(R===-1)break}const D=A[R];D&&D.connect(K)}}const W=new L,lt=new L;function ut(ct,pt,K){W.setFromMatrixPosition(pt.matrixWorld),lt.setFromMatrixPosition(K.matrixWorld);const R=W.distanceTo(lt),D=pt.projectionMatrix.elements,z=K.projectionMatrix.elements,J=D[14]/(D[10]-1),N=D[14]/(D[10]+1),G=(D[9]+1)/D[5],Z=(D[9]-1)/D[5],tt=(D[8]-1)/D[0],nt=(z[8]+1)/z[0],ht=J*tt,dt=J*nt,yt=R/(-tt+nt),It=yt*-tt;if(pt.matrixWorld.decompose(ct.position,ct.quaternion,ct.scale),ct.translateX(It),ct.translateZ(yt),ct.matrixWorld.compose(ct.position,ct.quaternion,ct.scale),ct.matrixWorldInverse.copy(ct.matrixWorld).invert(),D[10]===-1)ct.projectionMatrix.copy(pt.projectionMatrix),ct.projectionMatrixInverse.copy(pt.projectionMatrixInverse);else{const Pt=J+yt,O=N+yt,C=ht-It,q=dt+(R-It),st=G*N/O*Pt,gt=Z*N/O*Pt;ct.projectionMatrix.makePerspective(C,q,st,gt,Pt,O),ct.projectionMatrixInverse.copy(ct.projectionMatrix).invert()}}function mt(ct,pt){pt===null?ct.matrixWorld.copy(ct.matrix):ct.matrixWorld.multiplyMatrices(pt.matrixWorld,ct.matrix),ct.matrixWorldInverse.copy(ct.matrixWorld).invert()}this.updateCamera=function(ct){if(i===null)return;let pt=ct.near,K=ct.far;m.texture!==null&&(m.depthNear>0&&(pt=m.depthNear),m.depthFar>0&&(K=m.depthFar)),I.near=_.near=v.near=pt,I.far=_.far=v.far=K,(B!==I.near||V!==I.far)&&(i.updateRenderState({depthNear:I.near,depthFar:I.far}),B=I.near,V=I.far),I.layers.mask=ct.layers.mask|6,v.layers.mask=I.layers.mask&3,_.layers.mask=I.layers.mask&5;const R=ct.parent,D=I.cameras;mt(I,R);for(let z=0;z<D.length;z++)mt(D[z],R);D.length===2?ut(I,v,_):I.projectionMatrix.copy(v.projectionMatrix),Xt(ct,I,R)};function Xt(ct,pt,K){K===null?ct.matrix.copy(pt.matrixWorld):(ct.matrix.copy(K.matrixWorld),ct.matrix.invert(),ct.matrix.multiply(pt.matrixWorld)),ct.matrix.decompose(ct.position,ct.quaternion,ct.scale),ct.updateMatrixWorld(!0),ct.projectionMatrix.copy(pt.projectionMatrix),ct.projectionMatrixInverse.copy(pt.projectionMatrixInverse),ct.isPerspectiveCamera&&(ct.fov=Oo*2*Math.atan(1/ct.projectionMatrix.elements[5]),ct.zoom=1)}this.getCamera=function(){return I},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(ct){l=ct,d!==null&&(d.fixedFoveation=ct),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=ct)},this.hasDepthSensing=function(){return m.texture!==null},this.getDepthSensingMesh=function(){return m.getMesh(I)},this.getCameraTexture=function(ct){return g[ct]};let te=null;function qt(ct,pt){if(u=pt.getViewerPose(c||o),p=pt,u!==null){const K=u.views;f!==null&&(t.setRenderTargetFramebuffer(M,f.framebuffer),t.setRenderTarget(M));let R=!1;K.length!==I.cameras.length&&(I.cameras.length=0,R=!0);for(let N=0;N<K.length;N++){const G=K[N];let Z=null;if(f!==null)Z=f.getViewport(G);else{const nt=h.getViewSubImage(d,G);Z=nt.viewport,N===0&&(t.setRenderTargetTextures(M,nt.colorTexture,nt.depthStencilTexture),t.setRenderTarget(M))}let tt=T[N];tt===void 0&&(tt=new Fe,tt.layers.enable(N),tt.viewport=new _e,T[N]=tt),tt.matrix.fromArray(G.transform.matrix),tt.matrix.decompose(tt.position,tt.quaternion,tt.scale),tt.projectionMatrix.fromArray(G.projectionMatrix),tt.projectionMatrixInverse.copy(tt.projectionMatrix).invert(),tt.viewport.set(Z.x,Z.y,Z.width,Z.height),N===0&&(I.matrix.copy(tt.matrix),I.matrix.decompose(I.position,I.quaternion,I.scale)),R===!0&&I.cameras.push(tt)}const D=i.enabledFeatures;if(D&&D.includes("depth-sensing")&&i.depthUsage=="gpu-optimized"&&y){h=n.getBinding();const N=h.getDepthInformation(K[0]);N&&N.isValid&&N.texture&&m.init(N,i.renderState)}if(D&&D.includes("camera-access")&&y){t.state.unbindTexture(),h=n.getBinding();for(let N=0;N<K.length;N++){const G=K[N].camera;if(G){let Z=g[G];Z||(Z=new Rp,g[G]=Z);const tt=h.getCameraImage(G);Z.sourceTexture=tt}}}}for(let K=0;K<A.length;K++){const R=S[K],D=A[K];R!==null&&D!==void 0&&D.update(R,pt,c||o)}te&&te(ct,pt),pt.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:pt}),p=null}const $t=new Sx;$t.setAnimationLoop(qt),this.setAnimationLoop=function(ct){te=ct},this.dispose=function(){}}}const os=new si,b2=new jt;function M2(r,t){function e(m,g){m.matrixAutoUpdate===!0&&m.updateMatrix(),g.value.copy(m.matrix)}function n(m,g){g.color.getRGB(m.fogColor.value,Sv(r)),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function i(m,g,w,b,M){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(m,g):g.isMeshToonMaterial?(s(m,g),h(m,g)):g.isMeshPhongMaterial?(s(m,g),u(m,g)):g.isMeshStandardMaterial?(s(m,g),d(m,g),g.isMeshPhysicalMaterial&&f(m,g,M)):g.isMeshMatcapMaterial?(s(m,g),p(m,g)):g.isMeshDepthMaterial?s(m,g):g.isMeshDistanceMaterial?(s(m,g),y(m,g)):g.isMeshNormalMaterial?s(m,g):g.isLineBasicMaterial?(o(m,g),g.isLineDashedMaterial&&a(m,g)):g.isPointsMaterial?l(m,g,w,b):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map,e(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,e(g.alphaMap,m.alphaMapTransform)),g.bumpMap&&(m.bumpMap.value=g.bumpMap,e(g.bumpMap,m.bumpMapTransform),m.bumpScale.value=g.bumpScale,g.side===Pn&&(m.bumpScale.value*=-1)),g.normalMap&&(m.normalMap.value=g.normalMap,e(g.normalMap,m.normalMapTransform),m.normalScale.value.copy(g.normalScale),g.side===Pn&&m.normalScale.value.negate()),g.displacementMap&&(m.displacementMap.value=g.displacementMap,e(g.displacementMap,m.displacementMapTransform),m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap,e(g.emissiveMap,m.emissiveMapTransform)),g.specularMap&&(m.specularMap.value=g.specularMap,e(g.specularMap,m.specularMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const w=t.get(g),b=w.envMap,M=w.envMapRotation;b&&(m.envMap.value=b,os.copy(M),os.x*=-1,os.y*=-1,os.z*=-1,b.isCubeTexture&&b.isRenderTargetTexture===!1&&(os.y*=-1,os.z*=-1),m.envMapRotation.value.setFromMatrix4(b2.makeRotationFromEuler(os)),m.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap&&(m.lightMap.value=g.lightMap,m.lightMapIntensity.value=g.lightMapIntensity,e(g.lightMap,m.lightMapTransform)),g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity,e(g.aoMap,m.aoMapTransform))}function o(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,g.map&&(m.map.value=g.map,e(g.map,m.mapTransform))}function a(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function l(m,g,w,b){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*w,m.scale.value=b*.5,g.map&&(m.map.value=g.map,e(g.map,m.uvTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,e(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map,e(g.map,m.mapTransform)),g.alphaMap&&(m.alphaMap.value=g.alphaMap,e(g.alphaMap,m.alphaMapTransform)),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest)}function u(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function h(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function d(m,g){m.metalness.value=g.metalness,g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap,e(g.metalnessMap,m.metalnessMapTransform)),m.roughness.value=g.roughness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap,e(g.roughnessMap,m.roughnessMapTransform)),g.envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function f(m,g,w){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap,e(g.sheenColorMap,m.sheenColorMapTransform)),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap,e(g.sheenRoughnessMap,m.sheenRoughnessMapTransform))),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap,e(g.clearcoatMap,m.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,e(g.clearcoatRoughnessMap,m.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(m.clearcoatNormalMap.value=g.clearcoatNormalMap,e(g.clearcoatNormalMap,m.clearcoatNormalMapTransform),m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===Pn&&m.clearcoatNormalScale.value.negate())),g.dispersion>0&&(m.dispersion.value=g.dispersion),g.iridescence>0&&(m.iridescence.value=g.iridescence,m.iridescenceIOR.value=g.iridescenceIOR,m.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],m.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(m.iridescenceMap.value=g.iridescenceMap,e(g.iridescenceMap,m.iridescenceMapTransform)),g.iridescenceThicknessMap&&(m.iridescenceThicknessMap.value=g.iridescenceThicknessMap,e(g.iridescenceThicknessMap,m.iridescenceThicknessMapTransform))),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=w.texture,m.transmissionSamplerSize.value.set(w.width,w.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap,e(g.transmissionMap,m.transmissionMapTransform)),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap,e(g.thicknessMap,m.thicknessMapTransform)),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(m.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(m.anisotropyMap.value=g.anisotropyMap,e(g.anisotropyMap,m.anisotropyMapTransform))),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap,e(g.specularColorMap,m.specularColorMapTransform)),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap,e(g.specularIntensityMap,m.specularIntensityMapTransform))}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function y(m,g){const w=t.get(g).light;m.referencePosition.value.setFromMatrixPosition(w.matrixWorld),m.nearDistance.value=w.shadow.camera.near,m.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function S2(r,t,e,n){let i={},s={},o=[];const a=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function l(w,b){const M=b.program;n.uniformBlockBinding(w,M)}function c(w,b){let M=i[w.id];M===void 0&&(p(w),M=u(w),i[w.id]=M,w.addEventListener("dispose",m));const A=b.program;n.updateUBOMapping(w,A);const S=t.render.frame;s[w.id]!==S&&(d(w),s[w.id]=S)}function u(w){const b=h();w.__bindingPointIndex=b;const M=r.createBuffer(),A=w.__size,S=w.usage;return r.bindBuffer(r.UNIFORM_BUFFER,M),r.bufferData(r.UNIFORM_BUFFER,A,S),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,b,M),M}function h(){for(let w=0;w<a;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(w){const b=i[w.id],M=w.uniforms,A=w.__cache;r.bindBuffer(r.UNIFORM_BUFFER,b);for(let S=0,E=M.length;S<E;S++){const x=Array.isArray(M[S])?M[S]:[M[S]];for(let v=0,_=x.length;v<_;v++){const T=x[v];if(f(T,S,v,A)===!0){const I=T.__offset,B=Array.isArray(T.value)?T.value:[T.value];let V=0;for(let H=0;H<B.length;H++){const U=B[H],Q=y(U);typeof U=="number"||typeof U=="boolean"?(T.__data[0]=U,r.bufferSubData(r.UNIFORM_BUFFER,I+V,T.__data)):U.isMatrix3?(T.__data[0]=U.elements[0],T.__data[1]=U.elements[1],T.__data[2]=U.elements[2],T.__data[3]=0,T.__data[4]=U.elements[3],T.__data[5]=U.elements[4],T.__data[6]=U.elements[5],T.__data[7]=0,T.__data[8]=U.elements[6],T.__data[9]=U.elements[7],T.__data[10]=U.elements[8],T.__data[11]=0):(U.toArray(T.__data,V),V+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,I,T.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function f(w,b,M,A){const S=w.value,E=b+"_"+M;if(A[E]===void 0)return typeof S=="number"||typeof S=="boolean"?A[E]=S:A[E]=S.clone(),!0;{const x=A[E];if(typeof S=="number"||typeof S=="boolean"){if(x!==S)return A[E]=S,!0}else if(x.equals(S)===!1)return x.copy(S),!0}return!1}function p(w){const b=w.uniforms;let M=0;const A=16;for(let E=0,x=b.length;E<x;E++){const v=Array.isArray(b[E])?b[E]:[b[E]];for(let _=0,T=v.length;_<T;_++){const I=v[_],B=Array.isArray(I.value)?I.value:[I.value];for(let V=0,H=B.length;V<H;V++){const U=B[V],Q=y(U),W=M%A,lt=W%Q.boundary,ut=W+lt;M+=lt,ut!==0&&A-ut<Q.storage&&(M+=A-ut),I.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),I.__offset=M,M+=Q.storage}}}const S=M%A;return S>0&&(M+=A-S),w.__size=M,w.__cache={},this}function y(w){const b={boundary:0,storage:0};return typeof w=="number"||typeof w=="boolean"?(b.boundary=4,b.storage=4):w.isVector2?(b.boundary=8,b.storage=8):w.isVector3||w.isColor?(b.boundary=16,b.storage=12):w.isVector4?(b.boundary=16,b.storage=16):w.isMatrix3?(b.boundary=48,b.storage=48):w.isMatrix4?(b.boundary=64,b.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),b}function m(w){const b=w.target;b.removeEventListener("dispose",m);const M=o.indexOf(b.__bindingPointIndex);o.splice(M,1),r.deleteBuffer(i[b.id]),delete i[b.id],delete s[b.id]}function g(){for(const w in i)r.deleteBuffer(i[w]);o=[],i={},s={}}return{bind:l,update:c,dispose:g}}class Kp{constructor(t={}){const{canvas:e=xv(),context:n=null,depth:i=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reversedDepthBuffer:d=!1}=t;this.isWebGLRenderer=!0;let f;if(n!==null){if(typeof WebGLRenderingContext<"u"&&n instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=n.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),y=new Int32Array(4);let m=null,g=null;const w=[],b=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Gi,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const M=this;let A=!1;this._outputColorSpace=Vn;let S=0,E=0,x=null,v=-1,_=null;const T=new _e,I=new _e;let B=null;const V=new At(0);let H=0,U=e.width,Q=e.height,W=1,lt=null,ut=null;const mt=new _e(0,0,U,Q),Xt=new _e(0,0,U,Q);let te=!1;const qt=new $o;let $t=!1,ct=!1;const pt=new jt,K=new L,R=new _e,D={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let z=!1;function J(){return x===null?W:1}let N=n;function G(P,$){return e.getContext(P,$)}try{const P={alpha:!0,depth:i,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine","three.js r".concat(dl)),e.addEventListener("webglcontextlost",Mt,!1),e.addEventListener("webglcontextrestored",Ot,!1),e.addEventListener("webglcontextcreationerror",xt,!1),N===null){const $="webgl2";if(N=G($,P),N===null)throw G($)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(P){throw console.error("THREE.WebGLRenderer: "+P.message),P}let Z,tt,nt,ht,dt,yt,It,Pt,O,C,q,st,gt,it,Ft,Et,kt,Vt,bt,Rt,Jt,F,j,wt;function k(){Z=new OC(N),Z.init(),F=new Cx(N,Z),tt=new CC(N,Z,t,F),nt=new m2(N,Z),tt.reversedDepthBuffer&&d&&nt.buffers.depth.setReversed(!0),ht=new BC(N),dt=new n2,yt=new g2(N,Z,nt,dt,tt,F,ht),It=new IC(M),Pt=new DC(M),O=new WT(N),j=new EC(N,O),C=new UC(N,O,ht,j),q=new kC(N,C,O,ht),bt=new zC(N,tt,yt),Et=new RC(dt),st=new e2(M,It,Pt,Z,tt,j,Et),gt=new M2(M,dt),it=new r2,Ft=new u2(Z),Vt=new TC(M,It,Pt,nt,q,f,l),kt=new f2(M,q,tt),wt=new S2(N,ht,tt,nt),Rt=new AC(N,Z,ht),Jt=new FC(N,Z,ht),ht.programs=st.programs,M.capabilities=tt,M.extensions=Z,M.properties=dt,M.renderLists=it,M.shadowMap=kt,M.state=nt,M.info=ht}k();const _t=new x2(M,N);this.xr=_t,this.getContext=function(){return N},this.getContextAttributes=function(){return N.getContextAttributes()},this.forceContextLoss=function(){const P=Z.get("WEBGL_lose_context");P&&P.loseContext()},this.forceContextRestore=function(){const P=Z.get("WEBGL_lose_context");P&&P.restoreContext()},this.getPixelRatio=function(){return W},this.setPixelRatio=function(P){P!==void 0&&(W=P,this.setSize(U,Q,!1))},this.getSize=function(P){return P.set(U,Q)},this.setSize=function(P,$,et=!0){if(_t.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}U=P,Q=$,e.width=Math.floor(P*W),e.height=Math.floor($*W),et===!0&&(e.style.width=P+"px",e.style.height=$+"px"),this.setViewport(0,0,P,$)},this.getDrawingBufferSize=function(P){return P.set(U*W,Q*W).floor()},this.setDrawingBufferSize=function(P,$,et){U=P,Q=$,W=et,e.width=Math.floor(P*et),e.height=Math.floor($*et),this.setViewport(0,0,P,$)},this.getCurrentViewport=function(P){return P.copy(T)},this.getViewport=function(P){return P.copy(mt)},this.setViewport=function(P,$,et,rt){P.isVector4?mt.set(P.x,P.y,P.z,P.w):mt.set(P,$,et,rt),nt.viewport(T.copy(mt).multiplyScalar(W).round())},this.getScissor=function(P){return P.copy(Xt)},this.setScissor=function(P,$,et,rt){P.isVector4?Xt.set(P.x,P.y,P.z,P.w):Xt.set(P,$,et,rt),nt.scissor(I.copy(Xt).multiplyScalar(W).round())},this.getScissorTest=function(){return te},this.setScissorTest=function(P){nt.setScissorTest(te=P)},this.setOpaqueSort=function(P){lt=P},this.setTransparentSort=function(P){ut=P},this.getClearColor=function(P){return P.copy(Vt.getClearColor())},this.setClearColor=function(){Vt.setClearColor(...arguments)},this.getClearAlpha=function(){return Vt.getClearAlpha()},this.setClearAlpha=function(){Vt.setClearAlpha(...arguments)},this.clear=function(P=!0,$=!0,et=!0){let rt=0;if(P){let Y=!1;if(x!==null){const St=x.texture.format;Y=St===uh||St===ch||St===pl}if(Y){const St=x.texture.type,Nt=St===Ci||St===gr||St===Io||St===No||St===oh||St===ah,Ht=Vt.getClearColor(),Bt=Vt.getClearAlpha(),ie=Ht.r,se=Ht.g,Zt=Ht.b;Nt?(p[0]=ie,p[1]=se,p[2]=Zt,p[3]=Bt,N.clearBufferuiv(N.COLOR,0,p)):(y[0]=ie,y[1]=se,y[2]=Zt,y[3]=Bt,N.clearBufferiv(N.COLOR,0,y))}else rt|=N.COLOR_BUFFER_BIT}$&&(rt|=N.DEPTH_BUFFER_BIT),et&&(rt|=N.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),N.clear(rt)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Mt,!1),e.removeEventListener("webglcontextrestored",Ot,!1),e.removeEventListener("webglcontextcreationerror",xt,!1),Vt.dispose(),it.dispose(),Ft.dispose(),dt.dispose(),It.dispose(),Pt.dispose(),q.dispose(),j.dispose(),wt.dispose(),st.dispose(),_t.dispose(),_t.removeEventListener("sessionstart",Pi),_t.removeEventListener("sessionend",Vm),Xr.stop()};function Mt(P){P.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),A=!0}function Ot(){console.log("THREE.WebGLRenderer: Context Restored."),A=!1;const P=ht.autoReset,$=kt.enabled,et=kt.autoUpdate,rt=kt.needsUpdate,Y=kt.type;k(),ht.autoReset=P,kt.enabled=$,kt.autoUpdate=et,kt.needsUpdate=rt,kt.type=Y}function xt(P){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",P.statusMessage)}function ft(P){const $=P.target;$.removeEventListener("dispose",ft),Lt($)}function Lt(P){ne(P),dt.remove(P)}function ne(P){const $=dt.get(P).programs;$!==void 0&&($.forEach(function(et){st.releaseProgram(et)}),P.isShaderMaterial&&st.releaseShaderCache(P))}this.renderBufferDirect=function(P,$,et,rt,Y,St){$===null&&($=D);const Nt=Y.isMesh&&Y.matrixWorld.determinant()<0,Ht=GM(P,$,et,rt,Y);nt.setMaterial(rt,Nt);let Bt=et.index,ie=1;if(rt.wireframe===!0){if(Bt=C.getWireframeAttribute(et),Bt===void 0)return;ie=2}const se=et.drawRange,Zt=et.attributes.position;let pe=se.start*ie,Ce=(se.start+se.count)*ie;St!==null&&(pe=Math.max(pe,St.start*ie),Ce=Math.min(Ce,(St.start+St.count)*ie)),Bt!==null?(pe=Math.max(pe,0),Ce=Math.min(Ce,Bt.count)):Zt!=null&&(pe=Math.max(pe,0),Ce=Math.min(Ce,Zt.count));const He=Ce-pe;if(He<0||He===1/0)return;j.setup(Y,rt,Ht,et,Bt);let Le,Ie=Rt;if(Bt!==null&&(Le=O.get(Bt),Ie=Jt,Ie.setIndex(Le)),Y.isMesh)rt.wireframe===!0?(nt.setLineWidth(rt.wireframeLinewidth*J()),Ie.setMode(N.LINES)):Ie.setMode(N.TRIANGLES);else if(Y.isLine){let ee=rt.linewidth;ee===void 0&&(ee=1),nt.setLineWidth(ee*J()),Y.isLineSegments?Ie.setMode(N.LINES):Y.isLineLoop?Ie.setMode(N.LINE_LOOP):Ie.setMode(N.LINE_STRIP)}else Y.isPoints?Ie.setMode(N.POINTS):Y.isSprite&&Ie.setMode(N.TRIANGLES);if(Y.isBatchedMesh)if(Y._multiDrawInstances!==null)ja("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),Ie.renderMultiDrawInstances(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount,Y._multiDrawInstances);else if(Z.get("WEBGL_multi_draw"))Ie.renderMultiDraw(Y._multiDrawStarts,Y._multiDrawCounts,Y._multiDrawCount);else{const ee=Y._multiDrawStarts,ze=Y._multiDrawCounts,Se=Y._multiDrawCount,qn=Bt?O.get(Bt).bytesPerElement:1,ks=dt.get(rt).currentProgram.getUniforms();for(let jn=0;jn<Se;jn++)ks.setValue(N,"_gl_DrawID",jn),Ie.render(ee[jn]/qn,ze[jn])}else if(Y.isInstancedMesh)Ie.renderInstances(pe,He,Y.count);else if(et.isInstancedBufferGeometry){const ee=et._maxInstanceCount!==void 0?et._maxInstanceCount:1/0,ze=Math.min(et.instanceCount,ee);Ie.renderInstances(pe,He,ze)}else Ie.render(pe,He)};function Me(P,$,et){P.transparent===!0&&P.side===ni&&P.forceSinglePass===!1?(P.side=Pn,P.needsUpdate=!0,Ul(P,$,et),P.side=pr,P.needsUpdate=!0,Ul(P,$,et),P.side=ni):Ul(P,$,et)}this.compile=function(P,$,et=null){et===null&&(et=P),g=Ft.get(et),g.init($),b.push(g),et.traverseVisible(function(Y){Y.isLight&&Y.layers.test($.layers)&&(g.pushLight(Y),Y.castShadow&&g.pushShadow(Y))}),P!==et&&P.traverseVisible(function(Y){Y.isLight&&Y.layers.test($.layers)&&(g.pushLight(Y),Y.castShadow&&g.pushShadow(Y))}),g.setupLights();const rt=new Set;return P.traverse(function(Y){if(!(Y.isMesh||Y.isPoints||Y.isLine||Y.isSprite))return;const St=Y.material;if(St)if(Array.isArray(St))for(let Nt=0;Nt<St.length;Nt++){const Ht=St[Nt];Me(Ht,et,Y),rt.add(Ht)}else Me(St,et,Y),rt.add(St)}),g=b.pop(),rt},this.compileAsync=function(P,$,et=null){const rt=this.compile(P,$,et);return new Promise(Y=>{function St(){if(rt.forEach(function(Nt){dt.get(Nt).currentProgram.isReady()&&rt.delete(Nt)}),rt.size===0){Y(P);return}setTimeout(St,10)}Z.get("KHR_parallel_shader_compile")!==null?St():setTimeout(St,10)})};let fe=null;function Dn(P){fe&&fe(P)}function Pi(){Xr.stop()}function Vm(){Xr.start()}const Xr=new Sx;Xr.setAnimationLoop(Dn),typeof self<"u"&&Xr.setContext(self),this.setAnimationLoop=function(P){fe=P,_t.setAnimationLoop(P),P===null?Xr.stop():Xr.start()},_t.addEventListener("sessionstart",Pi),_t.addEventListener("sessionend",Vm),this.render=function(P,$){if($!==void 0&&$.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(A===!0)return;if(P.matrixWorldAutoUpdate===!0&&P.updateMatrixWorld(),$.parent===null&&$.matrixWorldAutoUpdate===!0&&$.updateMatrixWorld(),_t.enabled===!0&&_t.isPresenting===!0&&(_t.cameraAutoUpdate===!0&&_t.updateCamera($),$=_t.getCamera()),P.isScene===!0&&P.onBeforeRender(M,P,$,x),g=Ft.get(P,b.length),g.init($),b.push(g),pt.multiplyMatrices($.projectionMatrix,$.matrixWorldInverse),qt.setFromProjectionMatrix(pt,ii,$.reversedDepth),ct=this.localClippingEnabled,$t=Et.init(this.clippingPlanes,ct),m=it.get(P,w.length),m.init(),w.push(m),_t.enabled===!0&&_t.isPresenting===!0){const St=M.xr.getDepthSensingMesh();St!==null&&Zh(St,$,-1/0,M.sortObjects)}Zh(P,$,0,M.sortObjects),m.finish(),M.sortObjects===!0&&m.sort(lt,ut),z=_t.enabled===!1||_t.isPresenting===!1||_t.hasDepthSensing()===!1,z&&Vt.addToRenderList(m,P),this.info.render.frame++,$t===!0&&Et.beginShadows();const et=g.state.shadowsArray;kt.render(et,P,$),$t===!0&&Et.endShadows(),this.info.autoReset===!0&&this.info.reset();const rt=m.opaque,Y=m.transmissive;if(g.setupLights(),$.isArrayCamera){const St=$.cameras;if(Y.length>0)for(let Nt=0,Ht=St.length;Nt<Ht;Nt++){const Bt=St[Nt];Gm(rt,Y,P,Bt)}z&&Vt.render(P);for(let Nt=0,Ht=St.length;Nt<Ht;Nt++){const Bt=St[Nt];Hm(m,P,Bt,Bt.viewport)}}else Y.length>0&&Gm(rt,Y,P,$),z&&Vt.render(P),Hm(m,P,$);x!==null&&E===0&&(yt.updateMultisampleRenderTarget(x),yt.updateRenderTargetMipmap(x)),P.isScene===!0&&P.onAfterRender(M,P,$),j.resetDefaultState(),v=-1,_=null,b.pop(),b.length>0?(g=b[b.length-1],$t===!0&&Et.setGlobalState(M.clippingPlanes,g.state.camera)):g=null,w.pop(),w.length>0?m=w[w.length-1]:m=null};function Zh(P,$,et,rt){if(P.visible===!1)return;if(P.layers.test($.layers)){if(P.isGroup)et=P.renderOrder;else if(P.isLOD)P.autoUpdate===!0&&P.update($);else if(P.isLight)g.pushLight(P),P.castShadow&&g.pushShadow(P);else if(P.isSprite){if(!P.frustumCulled||qt.intersectsSprite(P)){rt&&R.setFromMatrixPosition(P.matrixWorld).applyMatrix4(pt);const Nt=q.update(P),Ht=P.material;Ht.visible&&m.push(P,Nt,Ht,et,R.z,null)}}else if((P.isMesh||P.isLine||P.isPoints)&&(!P.frustumCulled||qt.intersectsObject(P))){const Nt=q.update(P),Ht=P.material;if(rt&&(P.boundingSphere!==void 0?(P.boundingSphere===null&&P.computeBoundingSphere(),R.copy(P.boundingSphere.center)):(Nt.boundingSphere===null&&Nt.computeBoundingSphere(),R.copy(Nt.boundingSphere.center)),R.applyMatrix4(P.matrixWorld).applyMatrix4(pt)),Array.isArray(Ht)){const Bt=Nt.groups;for(let ie=0,se=Bt.length;ie<se;ie++){const Zt=Bt[ie],pe=Ht[Zt.materialIndex];pe&&pe.visible&&m.push(P,Nt,pe,et,R.z,Zt)}}else Ht.visible&&m.push(P,Nt,Ht,et,R.z,null)}}const St=P.children;for(let Nt=0,Ht=St.length;Nt<Ht;Nt++)Zh(St[Nt],$,et,rt)}function Hm(P,$,et,rt){const Y=P.opaque,St=P.transmissive,Nt=P.transparent;g.setupLightsView(et),$t===!0&&Et.setGlobalState(M.clippingPlanes,et),rt&&nt.viewport(T.copy(rt)),Y.length>0&&Ol(Y,$,et),St.length>0&&Ol(St,$,et),Nt.length>0&&Ol(Nt,$,et),nt.buffers.depth.setTest(!0),nt.buffers.depth.setMask(!0),nt.buffers.color.setMask(!0),nt.setPolygonOffset(!1)}function Gm(P,$,et,rt){if((et.isScene===!0?et.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[rt.id]===void 0&&(g.state.transmissionRenderTarget[rt.id]=new Ri(1,1,{generateMipmaps:!0,type:Z.has("EXT_color_buffer_half_float")||Z.has("EXT_color_buffer_float")?Ps:Ci,minFilter:Vi,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ve.workingColorSpace}));const St=g.state.transmissionRenderTarget[rt.id],Nt=rt.viewport||T;St.setSize(Nt.z*M.transmissionResolutionScale,Nt.w*M.transmissionResolutionScale);const Ht=M.getRenderTarget(),Bt=M.getActiveCubeFace(),ie=M.getActiveMipmapLevel();M.setRenderTarget(St),M.getClearColor(V),H=M.getClearAlpha(),H<1&&M.setClearColor(16777215,.5),M.clear(),z&&Vt.render(et);const se=M.toneMapping;M.toneMapping=Gi;const Zt=rt.viewport;if(rt.viewport!==void 0&&(rt.viewport=void 0),g.setupLightsView(rt),$t===!0&&Et.setGlobalState(M.clippingPlanes,rt),Ol(P,et,rt),yt.updateMultisampleRenderTarget(St),yt.updateRenderTargetMipmap(St),Z.has("WEBGL_multisampled_render_to_texture")===!1){let pe=!1;for(let Ce=0,He=$.length;Ce<He;Ce++){const Le=$[Ce],Ie=Le.object,ee=Le.geometry,ze=Le.material,Se=Le.group;if(ze.side===ni&&Ie.layers.test(rt.layers)){const qn=ze.side;ze.side=Pn,ze.needsUpdate=!0,Wm(Ie,et,rt,ee,ze,Se),ze.side=qn,ze.needsUpdate=!0,pe=!0}}pe===!0&&(yt.updateMultisampleRenderTarget(St),yt.updateRenderTargetMipmap(St))}M.setRenderTarget(Ht,Bt,ie),M.setClearColor(V,H),Zt!==void 0&&(rt.viewport=Zt),M.toneMapping=se}function Ol(P,$,et){const rt=$.isScene===!0?$.overrideMaterial:null;for(let Y=0,St=P.length;Y<St;Y++){const Nt=P[Y],Ht=Nt.object,Bt=Nt.geometry,ie=Nt.group;let se=Nt.material;se.allowOverride===!0&&rt!==null&&(se=rt),Ht.layers.test(et.layers)&&Wm(Ht,$,et,Bt,se,ie)}}function Wm(P,$,et,rt,Y,St){P.onBeforeRender(M,$,et,rt,Y,St),P.modelViewMatrix.multiplyMatrices(et.matrixWorldInverse,P.matrixWorld),P.normalMatrix.getNormalMatrix(P.modelViewMatrix),Y.onBeforeRender(M,$,et,rt,P,St),Y.transparent===!0&&Y.side===ni&&Y.forceSinglePass===!1?(Y.side=Pn,Y.needsUpdate=!0,M.renderBufferDirect(et,$,rt,Y,P,St),Y.side=pr,Y.needsUpdate=!0,M.renderBufferDirect(et,$,rt,Y,P,St),Y.side=ni):M.renderBufferDirect(et,$,rt,Y,P,St),P.onAfterRender(M,$,et,rt,Y,St)}function Ul(P,$,et){$.isScene!==!0&&($=D);const rt=dt.get(P),Y=g.state.lights,St=g.state.shadowsArray,Nt=Y.state.version,Ht=st.getParameters(P,Y.state,St,$,et),Bt=st.getProgramCacheKey(Ht);let ie=rt.programs;rt.environment=P.isMeshStandardMaterial?$.environment:null,rt.fog=$.fog,rt.envMap=(P.isMeshStandardMaterial?Pt:It).get(P.envMap||rt.environment),rt.envMapRotation=rt.environment!==null&&P.envMap===null?$.environmentRotation:P.envMapRotation,ie===void 0&&(P.addEventListener("dispose",ft),ie=new Map,rt.programs=ie);let se=ie.get(Bt);if(se!==void 0){if(rt.currentProgram===se&&rt.lightsStateVersion===Nt)return $m(P,Ht),se}else Ht.uniforms=st.getUniforms(P),P.onBeforeCompile(Ht,M),se=st.acquireProgram(Ht,Bt),ie.set(Bt,se),rt.uniforms=Ht.uniforms;const Zt=rt.uniforms;return(!P.isShaderMaterial&&!P.isRawShaderMaterial||P.clipping===!0)&&(Zt.clippingPlanes=Et.uniform),$m(P,Ht),rt.needsLights=XM(P),rt.lightsStateVersion=Nt,rt.needsLights&&(Zt.ambientLightColor.value=Y.state.ambient,Zt.lightProbe.value=Y.state.probe,Zt.directionalLights.value=Y.state.directional,Zt.directionalLightShadows.value=Y.state.directionalShadow,Zt.spotLights.value=Y.state.spot,Zt.spotLightShadows.value=Y.state.spotShadow,Zt.rectAreaLights.value=Y.state.rectArea,Zt.ltc_1.value=Y.state.rectAreaLTC1,Zt.ltc_2.value=Y.state.rectAreaLTC2,Zt.pointLights.value=Y.state.point,Zt.pointLightShadows.value=Y.state.pointShadow,Zt.hemisphereLights.value=Y.state.hemi,Zt.directionalShadowMap.value=Y.state.directionalShadowMap,Zt.directionalShadowMatrix.value=Y.state.directionalShadowMatrix,Zt.spotShadowMap.value=Y.state.spotShadowMap,Zt.spotLightMatrix.value=Y.state.spotLightMatrix,Zt.spotLightMap.value=Y.state.spotLightMap,Zt.pointShadowMap.value=Y.state.pointShadowMap,Zt.pointShadowMatrix.value=Y.state.pointShadowMatrix),rt.currentProgram=se,rt.uniformsList=null,se}function Xm(P){if(P.uniformsList===null){const $=P.currentProgram.getUniforms();P.uniformsList=qc.seqWithValue($.seq,P.uniforms)}return P.uniformsList}function $m(P,$){const et=dt.get(P);et.outputColorSpace=$.outputColorSpace,et.batching=$.batching,et.batchingColor=$.batchingColor,et.instancing=$.instancing,et.instancingColor=$.instancingColor,et.instancingMorph=$.instancingMorph,et.skinning=$.skinning,et.morphTargets=$.morphTargets,et.morphNormals=$.morphNormals,et.morphColors=$.morphColors,et.morphTargetsCount=$.morphTargetsCount,et.numClippingPlanes=$.numClippingPlanes,et.numIntersection=$.numClipIntersection,et.vertexAlphas=$.vertexAlphas,et.vertexTangents=$.vertexTangents,et.toneMapping=$.toneMapping}function GM(P,$,et,rt,Y){$.isScene!==!0&&($=D),yt.resetTextureUnits();const St=$.fog,Nt=rt.isMeshStandardMaterial?$.environment:null,Ht=x===null?M.outputColorSpace:x.isXRRenderTarget===!0?x.texture.colorSpace:Rs,Bt=(rt.isMeshStandardMaterial?Pt:It).get(rt.envMap||Nt),ie=rt.vertexColors===!0&&!!et.attributes.color&&et.attributes.color.itemSize===4,se=!!et.attributes.tangent&&(!!rt.normalMap||rt.anisotropy>0),Zt=!!et.morphAttributes.position,pe=!!et.morphAttributes.normal,Ce=!!et.morphAttributes.color;let He=Gi;rt.toneMapped&&(x===null||x.isXRRenderTarget===!0)&&(He=M.toneMapping);const Le=et.morphAttributes.position||et.morphAttributes.normal||et.morphAttributes.color,Ie=Le!==void 0?Le.length:0,ee=dt.get(rt),ze=g.state.lights;if($t===!0&&(ct===!0||P!==_)){const Sn=P===_&&rt.id===v;Et.setState(rt,P,Sn)}let Se=!1;rt.version===ee.__version?(ee.needsLights&&ee.lightsStateVersion!==ze.state.version||ee.outputColorSpace!==Ht||Y.isBatchedMesh&&ee.batching===!1||!Y.isBatchedMesh&&ee.batching===!0||Y.isBatchedMesh&&ee.batchingColor===!0&&Y.colorTexture===null||Y.isBatchedMesh&&ee.batchingColor===!1&&Y.colorTexture!==null||Y.isInstancedMesh&&ee.instancing===!1||!Y.isInstancedMesh&&ee.instancing===!0||Y.isSkinnedMesh&&ee.skinning===!1||!Y.isSkinnedMesh&&ee.skinning===!0||Y.isInstancedMesh&&ee.instancingColor===!0&&Y.instanceColor===null||Y.isInstancedMesh&&ee.instancingColor===!1&&Y.instanceColor!==null||Y.isInstancedMesh&&ee.instancingMorph===!0&&Y.morphTexture===null||Y.isInstancedMesh&&ee.instancingMorph===!1&&Y.morphTexture!==null||ee.envMap!==Bt||rt.fog===!0&&ee.fog!==St||ee.numClippingPlanes!==void 0&&(ee.numClippingPlanes!==Et.numPlanes||ee.numIntersection!==Et.numIntersection)||ee.vertexAlphas!==ie||ee.vertexTangents!==se||ee.morphTargets!==Zt||ee.morphNormals!==pe||ee.morphColors!==Ce||ee.toneMapping!==He||ee.morphTargetsCount!==Ie)&&(Se=!0):(Se=!0,ee.__version=rt.version);let qn=ee.currentProgram;Se===!0&&(qn=Ul(rt,$,Y));let ks=!1,jn=!1,Ko=!1;const ke=qn.getUniforms(),oi=ee.uniforms;if(nt.useProgram(qn.program)&&(ks=!0,jn=!0,Ko=!0),rt.id!==v&&(v=rt.id,jn=!0),ks||_!==P){nt.buffers.depth.getReversed()&&P.reversedDepth!==!0&&(P._reversedDepth=!0,P.updateProjectionMatrix()),ke.setValue(N,"projectionMatrix",P.projectionMatrix),ke.setValue(N,"viewMatrix",P.matrixWorldInverse);const On=ke.map.cameraPosition;On!==void 0&&On.setValue(N,K.setFromMatrixPosition(P.matrixWorld)),tt.logarithmicDepthBuffer&&ke.setValue(N,"logDepthBufFC",2/(Math.log(P.far+1)/Math.LN2)),(rt.isMeshPhongMaterial||rt.isMeshToonMaterial||rt.isMeshLambertMaterial||rt.isMeshBasicMaterial||rt.isMeshStandardMaterial||rt.isShaderMaterial)&&ke.setValue(N,"isOrthographic",P.isOrthographicCamera===!0),_!==P&&(_=P,jn=!0,Ko=!0)}if(Y.isSkinnedMesh){ke.setOptional(N,Y,"bindMatrix"),ke.setOptional(N,Y,"bindMatrixInverse");const Sn=Y.skeleton;Sn&&(Sn.boneTexture===null&&Sn.computeBoneTexture(),ke.setValue(N,"boneTexture",Sn.boneTexture,yt))}Y.isBatchedMesh&&(ke.setOptional(N,Y,"batchingTexture"),ke.setValue(N,"batchingTexture",Y._matricesTexture,yt),ke.setOptional(N,Y,"batchingIdTexture"),ke.setValue(N,"batchingIdTexture",Y._indirectTexture,yt),ke.setOptional(N,Y,"batchingColorTexture"),Y._colorsTexture!==null&&ke.setValue(N,"batchingColorTexture",Y._colorsTexture,yt));const ai=et.morphAttributes;if((ai.position!==void 0||ai.normal!==void 0||ai.color!==void 0)&&bt.update(Y,et,qn),(jn||ee.receiveShadow!==Y.receiveShadow)&&(ee.receiveShadow=Y.receiveShadow,ke.setValue(N,"receiveShadow",Y.receiveShadow)),rt.isMeshGouraudMaterial&&rt.envMap!==null&&(oi.envMap.value=Bt,oi.flipEnvMap.value=Bt.isCubeTexture&&Bt.isRenderTargetTexture===!1?-1:1),rt.isMeshStandardMaterial&&rt.envMap===null&&$.environment!==null&&(oi.envMapIntensity.value=$.environmentIntensity),jn&&(ke.setValue(N,"toneMappingExposure",M.toneMappingExposure),ee.needsLights&&WM(oi,Ko),St&&rt.fog===!0&&gt.refreshFogUniforms(oi,St),gt.refreshMaterialUniforms(oi,rt,W,Q,g.state.transmissionRenderTarget[P.id]),qc.upload(N,Xm(ee),oi,yt)),rt.isShaderMaterial&&rt.uniformsNeedUpdate===!0&&(qc.upload(N,Xm(ee),oi,yt),rt.uniformsNeedUpdate=!1),rt.isSpriteMaterial&&ke.setValue(N,"center",Y.center),ke.setValue(N,"modelViewMatrix",Y.modelViewMatrix),ke.setValue(N,"normalMatrix",Y.normalMatrix),ke.setValue(N,"modelMatrix",Y.matrixWorld),rt.isShaderMaterial||rt.isRawShaderMaterial){const Sn=rt.uniformsGroups;for(let On=0,Jh=Sn.length;On<Jh;On++){const $r=Sn[On];wt.update($r,qn),wt.bind($r,qn)}}return qn}function WM(P,$){P.ambientLightColor.needsUpdate=$,P.lightProbe.needsUpdate=$,P.directionalLights.needsUpdate=$,P.directionalLightShadows.needsUpdate=$,P.pointLights.needsUpdate=$,P.pointLightShadows.needsUpdate=$,P.spotLights.needsUpdate=$,P.spotLightShadows.needsUpdate=$,P.rectAreaLights.needsUpdate=$,P.hemisphereLights.needsUpdate=$}function XM(P){return P.isMeshLambertMaterial||P.isMeshToonMaterial||P.isMeshPhongMaterial||P.isMeshStandardMaterial||P.isShadowMaterial||P.isShaderMaterial&&P.lights===!0}this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return E},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(P,$,et){const rt=dt.get(P);rt.__autoAllocateDepthBuffer=P.resolveDepthBuffer===!1,rt.__autoAllocateDepthBuffer===!1&&(rt.__useRenderToTexture=!1),dt.get(P.texture).__webglTexture=$,dt.get(P.depthTexture).__webglTexture=rt.__autoAllocateDepthBuffer?void 0:et,rt.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(P,$){const et=dt.get(P);et.__webglFramebuffer=$,et.__useDefaultFramebuffer=$===void 0};const $M=N.createFramebuffer();this.setRenderTarget=function(P,$=0,et=0){x=P,S=$,E=et;let rt=!0,Y=null,St=!1,Nt=!1;if(P){const Bt=dt.get(P);if(Bt.__useDefaultFramebuffer!==void 0)nt.bindFramebuffer(N.FRAMEBUFFER,null),rt=!1;else if(Bt.__webglFramebuffer===void 0)yt.setupRenderTarget(P);else if(Bt.__hasExternalTextures)yt.rebindTextures(P,dt.get(P.texture).__webglTexture,dt.get(P.depthTexture).__webglTexture);else if(P.depthBuffer){const Zt=P.depthTexture;if(Bt.__boundDepthTexture!==Zt){if(Zt!==null&&dt.has(Zt)&&(P.width!==Zt.image.width||P.height!==Zt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");yt.setupDepthRenderbuffer(P)}}const ie=P.texture;(ie.isData3DTexture||ie.isDataArrayTexture||ie.isCompressedArrayTexture)&&(Nt=!0);const se=dt.get(P).__webglFramebuffer;P.isWebGLCubeRenderTarget?(Array.isArray(se[$])?Y=se[$][et]:Y=se[$],St=!0):P.samples>0&&yt.useMultisampledRTT(P)===!1?Y=dt.get(P).__webglMultisampledFramebuffer:Array.isArray(se)?Y=se[et]:Y=se,T.copy(P.viewport),I.copy(P.scissor),B=P.scissorTest}else T.copy(mt).multiplyScalar(W).floor(),I.copy(Xt).multiplyScalar(W).floor(),B=te;if(et!==0&&(Y=$M),nt.bindFramebuffer(N.FRAMEBUFFER,Y)&&rt&&nt.drawBuffers(P,Y),nt.viewport(T),nt.scissor(I),nt.setScissorTest(B),St){const Bt=dt.get(P.texture);N.framebufferTexture2D(N.FRAMEBUFFER,N.COLOR_ATTACHMENT0,N.TEXTURE_CUBE_MAP_POSITIVE_X+$,Bt.__webglTexture,et)}else if(Nt){const Bt=$;for(let ie=0;ie<P.textures.length;ie++){const se=dt.get(P.textures[ie]);N.framebufferTextureLayer(N.FRAMEBUFFER,N.COLOR_ATTACHMENT0+ie,se.__webglTexture,et,Bt)}}else if(P!==null&&et!==0){const Bt=dt.get(P.texture);N.framebufferTexture2D(N.FRAMEBUFFER,N.COLOR_ATTACHMENT0,N.TEXTURE_2D,Bt.__webglTexture,et)}v=-1},this.readRenderTargetPixels=function(P,$,et,rt,Y,St,Nt,Ht=0){if(!(P&&P.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Bt=dt.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Nt!==void 0&&(Bt=Bt[Nt]),Bt){nt.bindFramebuffer(N.FRAMEBUFFER,Bt);try{const ie=P.textures[Ht],se=ie.format,Zt=ie.type;if(!tt.textureFormatReadable(se)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!tt.textureTypeReadable(Zt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}$>=0&&$<=P.width-rt&&et>=0&&et<=P.height-Y&&(P.textures.length>1&&N.readBuffer(N.COLOR_ATTACHMENT0+Ht),N.readPixels($,et,rt,Y,F.convert(se),F.convert(Zt),St))}finally{const ie=x!==null?dt.get(x).__webglFramebuffer:null;nt.bindFramebuffer(N.FRAMEBUFFER,ie)}}},this.readRenderTargetPixelsAsync=async function(P,$,et,rt,Y,St,Nt,Ht=0){if(!(P&&P.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Bt=dt.get(P).__webglFramebuffer;if(P.isWebGLCubeRenderTarget&&Nt!==void 0&&(Bt=Bt[Nt]),Bt)if($>=0&&$<=P.width-rt&&et>=0&&et<=P.height-Y){nt.bindFramebuffer(N.FRAMEBUFFER,Bt);const ie=P.textures[Ht],se=ie.format,Zt=ie.type;if(!tt.textureFormatReadable(se))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!tt.textureTypeReadable(Zt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const pe=N.createBuffer();N.bindBuffer(N.PIXEL_PACK_BUFFER,pe),N.bufferData(N.PIXEL_PACK_BUFFER,St.byteLength,N.STREAM_READ),P.textures.length>1&&N.readBuffer(N.COLOR_ATTACHMENT0+Ht),N.readPixels($,et,rt,Y,F.convert(se),F.convert(Zt),0);const Ce=x!==null?dt.get(x).__webglFramebuffer:null;nt.bindFramebuffer(N.FRAMEBUFFER,Ce);const He=N.fenceSync(N.SYNC_GPU_COMMANDS_COMPLETE,0);return N.flush(),await c1(N,He,4),N.bindBuffer(N.PIXEL_PACK_BUFFER,pe),N.getBufferSubData(N.PIXEL_PACK_BUFFER,0,St),N.deleteBuffer(pe),N.deleteSync(He),St}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(P,$=null,et=0){const rt=Math.pow(2,-et),Y=Math.floor(P.image.width*rt),St=Math.floor(P.image.height*rt),Nt=$!==null?$.x:0,Ht=$!==null?$.y:0;yt.setTexture2D(P,0),N.copyTexSubImage2D(N.TEXTURE_2D,et,0,0,Nt,Ht,Y,St),nt.unbindTexture()};const YM=N.createFramebuffer(),qM=N.createFramebuffer();this.copyTextureToTexture=function(P,$,et=null,rt=null,Y=0,St=null){St===null&&(Y!==0?(ja("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),St=Y,Y=0):St=0);let Nt,Ht,Bt,ie,se,Zt,pe,Ce,He;const Le=P.isCompressedTexture?P.mipmaps[St]:P.image;if(et!==null)Nt=et.max.x-et.min.x,Ht=et.max.y-et.min.y,Bt=et.isBox3?et.max.z-et.min.z:1,ie=et.min.x,se=et.min.y,Zt=et.isBox3?et.min.z:0;else{const ai=Math.pow(2,-Y);Nt=Math.floor(Le.width*ai),Ht=Math.floor(Le.height*ai),P.isDataArrayTexture?Bt=Le.depth:P.isData3DTexture?Bt=Math.floor(Le.depth*ai):Bt=1,ie=0,se=0,Zt=0}rt!==null?(pe=rt.x,Ce=rt.y,He=rt.z):(pe=0,Ce=0,He=0);const Ie=F.convert($.format),ee=F.convert($.type);let ze;$.isData3DTexture?(yt.setTexture3D($,0),ze=N.TEXTURE_3D):$.isDataArrayTexture||$.isCompressedArrayTexture?(yt.setTexture2DArray($,0),ze=N.TEXTURE_2D_ARRAY):(yt.setTexture2D($,0),ze=N.TEXTURE_2D),N.pixelStorei(N.UNPACK_FLIP_Y_WEBGL,$.flipY),N.pixelStorei(N.UNPACK_PREMULTIPLY_ALPHA_WEBGL,$.premultiplyAlpha),N.pixelStorei(N.UNPACK_ALIGNMENT,$.unpackAlignment);const Se=N.getParameter(N.UNPACK_ROW_LENGTH),qn=N.getParameter(N.UNPACK_IMAGE_HEIGHT),ks=N.getParameter(N.UNPACK_SKIP_PIXELS),jn=N.getParameter(N.UNPACK_SKIP_ROWS),Ko=N.getParameter(N.UNPACK_SKIP_IMAGES);N.pixelStorei(N.UNPACK_ROW_LENGTH,Le.width),N.pixelStorei(N.UNPACK_IMAGE_HEIGHT,Le.height),N.pixelStorei(N.UNPACK_SKIP_PIXELS,ie),N.pixelStorei(N.UNPACK_SKIP_ROWS,se),N.pixelStorei(N.UNPACK_SKIP_IMAGES,Zt);const ke=P.isDataArrayTexture||P.isData3DTexture,oi=$.isDataArrayTexture||$.isData3DTexture;if(P.isDepthTexture){const ai=dt.get(P),Sn=dt.get($),On=dt.get(ai.__renderTarget),Jh=dt.get(Sn.__renderTarget);nt.bindFramebuffer(N.READ_FRAMEBUFFER,On.__webglFramebuffer),nt.bindFramebuffer(N.DRAW_FRAMEBUFFER,Jh.__webglFramebuffer);for(let $r=0;$r<Bt;$r++)ke&&(N.framebufferTextureLayer(N.READ_FRAMEBUFFER,N.COLOR_ATTACHMENT0,dt.get(P).__webglTexture,Y,Zt+$r),N.framebufferTextureLayer(N.DRAW_FRAMEBUFFER,N.COLOR_ATTACHMENT0,dt.get($).__webglTexture,St,He+$r)),N.blitFramebuffer(ie,se,Nt,Ht,pe,Ce,Nt,Ht,N.DEPTH_BUFFER_BIT,N.NEAREST);nt.bindFramebuffer(N.READ_FRAMEBUFFER,null),nt.bindFramebuffer(N.DRAW_FRAMEBUFFER,null)}else if(Y!==0||P.isRenderTargetTexture||dt.has(P)){const ai=dt.get(P),Sn=dt.get($);nt.bindFramebuffer(N.READ_FRAMEBUFFER,YM),nt.bindFramebuffer(N.DRAW_FRAMEBUFFER,qM);for(let On=0;On<Bt;On++)ke?N.framebufferTextureLayer(N.READ_FRAMEBUFFER,N.COLOR_ATTACHMENT0,ai.__webglTexture,Y,Zt+On):N.framebufferTexture2D(N.READ_FRAMEBUFFER,N.COLOR_ATTACHMENT0,N.TEXTURE_2D,ai.__webglTexture,Y),oi?N.framebufferTextureLayer(N.DRAW_FRAMEBUFFER,N.COLOR_ATTACHMENT0,Sn.__webglTexture,St,He+On):N.framebufferTexture2D(N.DRAW_FRAMEBUFFER,N.COLOR_ATTACHMENT0,N.TEXTURE_2D,Sn.__webglTexture,St),Y!==0?N.blitFramebuffer(ie,se,Nt,Ht,pe,Ce,Nt,Ht,N.COLOR_BUFFER_BIT,N.NEAREST):oi?N.copyTexSubImage3D(ze,St,pe,Ce,He+On,ie,se,Nt,Ht):N.copyTexSubImage2D(ze,St,pe,Ce,ie,se,Nt,Ht);nt.bindFramebuffer(N.READ_FRAMEBUFFER,null),nt.bindFramebuffer(N.DRAW_FRAMEBUFFER,null)}else oi?P.isDataTexture||P.isData3DTexture?N.texSubImage3D(ze,St,pe,Ce,He,Nt,Ht,Bt,Ie,ee,Le.data):$.isCompressedArrayTexture?N.compressedTexSubImage3D(ze,St,pe,Ce,He,Nt,Ht,Bt,Ie,Le.data):N.texSubImage3D(ze,St,pe,Ce,He,Nt,Ht,Bt,Ie,ee,Le):P.isDataTexture?N.texSubImage2D(N.TEXTURE_2D,St,pe,Ce,Nt,Ht,Ie,ee,Le.data):P.isCompressedTexture?N.compressedTexSubImage2D(N.TEXTURE_2D,St,pe,Ce,Le.width,Le.height,Ie,Le.data):N.texSubImage2D(N.TEXTURE_2D,St,pe,Ce,Nt,Ht,Ie,ee,Le);N.pixelStorei(N.UNPACK_ROW_LENGTH,Se),N.pixelStorei(N.UNPACK_IMAGE_HEIGHT,qn),N.pixelStorei(N.UNPACK_SKIP_PIXELS,ks),N.pixelStorei(N.UNPACK_SKIP_ROWS,jn),N.pixelStorei(N.UNPACK_SKIP_IMAGES,Ko),St===0&&$.generateMipmaps&&N.generateMipmap(ze),nt.unbindTexture()},this.initRenderTarget=function(P){dt.get(P).__webglFramebuffer===void 0&&yt.setupRenderTarget(P)},this.initTexture=function(P){P.isCubeTexture?yt.setTextureCube(P,0):P.isData3DTexture?yt.setTexture3D(P,0):P.isDataArrayTexture||P.isCompressedArrayTexture?yt.setTexture2DArray(P,0):yt.setTexture2D(P,0),nt.unbindTexture()},this.resetState=function(){S=0,E=0,x=null,nt.reset(),j.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return ii}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=ve._getDrawingBufferColorSpace(t),e.unpackColorSpace=ve._getUnpackColorSpace()}}const w2=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:up,AddEquation:Lr,AddOperation:K0,AdditiveAnimationBlendMode:vp,AdditiveBlending:yf,AgXToneMapping:iv,AlphaFormat:gp,AlwaysCompare:_v,AlwaysDepth:au,AlwaysStencilFunc:bf,AmbientLight:hx,AnimationAction:xx,AnimationClip:el,AnimationLoader:Uw,AnimationMixer:hT,AnimationObjectGroup:cT,AnimationUtils:Pw,ArcCurve:Uv,ArrayCamera:yx,ArrowHelper:OT,AttachedBindMode:xf,Audio:_x,AudioAnalyser:Qw,AudioContext:Wp,AudioListener:Zw,AudioLoader:Yw,AxesHelper:UT,BackSide:Pn,BasicDepthPacking:cv,BasicShadowMap:cS,BatchedMesh:Nv,Bone:Ep,BooleanKeyframeTrack:Os,Box2:xT,Box3:bn,Box3Helper:LT,BoxGeometry:Ls,BoxHelper:PT,BufferAttribute:Te,BufferGeometry:ce,BufferGeometryLoader:gx,ByteType:dp,Cache:Hi,Camera:mh,CameraHelper:NT,CanvasTexture:ew,CapsuleGeometry:Mh,CatmullRomCurve3:Fv,CineonToneMapping:ev,CircleGeometry:Sh,ClampToEdgeWrapping:hi,Clock:Xp,Color:At,ColorKeyframeTrack:Vp,ColorManagement:ve,CompressedArrayTexture:Q1,CompressedCubeTexture:tw,CompressedTexture:bh,CompressedTextureLoader:Fw,ConeGeometry:xl,ConstantAlphaFactor:j0,ConstantColorFactor:Y0,Controls:BT,CubeCamera:wv,CubeReflectionMapping:mr,CubeRefractionMapping:Br,CubeTexture:yl,CubeTextureLoader:Bw,CubeUVReflectionMapping:Xo,CubicBezierCurve:Np,CubicBezierCurve3:Bv,CubicInterpolant:ix,CullFaceBack:gf,CullFaceFront:P0,CullFaceFrontBack:lS,CullFaceNone:N0,Curve:Ii,CurvePath:kv,CustomBlending:L0,CustomToneMapping:nv,CylinderGeometry:vl,Cylindrical:vT,Data3DTexture:fh,DataArrayTexture:dh,DataTexture:Wi,DataTextureLoader:zw,DataUtils:w1,DecrementStencilOp:SS,DecrementWrapStencilOp:TS,DefaultLoadingManager:ox,DepthFormat:Po,DepthStencilFormat:Lo,DepthTexture:Cp,DetachedBindMode:sv,DirectionalLight:ux,DirectionalLightHelper:IT,DiscreteInterpolant:rx,DodecahedronGeometry:wh,DoubleSide:ni,DstAlphaFactor:H0,DstColorFactor:W0,DynamicCopyUsage:kS,DynamicDrawUsage:DS,DynamicReadUsage:FS,EdgesGeometry:Ov,EllipseCurve:Th,EqualCompare:pv,EqualDepth:cu,EqualStencilFunc:RS,EquirectangularReflectionMapping:ka,EquirectangularRefractionMapping:Va,Euler:si,EventDispatcher:Yi,ExternalTexture:Rp,ExtrudeGeometry:Eh,FileLoader:_r,Float16BufferAttribute:N1,Float32BufferAttribute:zt,FloatType:Gn,Fog:yh,FogExp2:gh,FramebufferTexture:K1,FrontSide:pr,Frustum:$o,FrustumArray:xh,GLBufferAttribute:gT,GLSL1:HS,GLSL3:Mf,GreaterCompare:mv,GreaterDepth:hu,GreaterEqualCompare:yv,GreaterEqualDepth:uu,GreaterEqualStencilFunc:LS,GreaterStencilFunc:NS,GridHelper:CT,Group:bo,HalfFloatType:Ps,HemisphereLight:ax,HemisphereLightHelper:AT,IcosahedronGeometry:Ah,ImageBitmapLoader:$w,ImageLoader:nl,ImageUtils:bv,IncrementStencilOp:MS,IncrementWrapStencilOp:wS,InstancedBufferAttribute:Fo,InstancedBufferGeometry:mx,InstancedInterleavedBuffer:mT,InstancedMesh:Iv,Int16BufferAttribute:R1,Int32BufferAttribute:I1,Int8BufferAttribute:E1,IntType:sh,InterleavedBuffer:_l,InterleavedBufferAttribute:yr,Interpolant:Ml,InterpolateDiscrete:Wa,InterpolateLinear:Vu,InterpolateSmooth:$c,InterpolationSamplingMode:XS,InterpolationSamplingType:WS,InvertStencilOp:ES,KeepStencilOp:cs,KeyframeTrack:gi,LOD:Cv,LatheGeometry:Ch,Layers:gl,LessCompare:fv,LessDepth:lu,LessEqualCompare:xp,LessEqualDepth:Cs,LessEqualStencilFunc:IS,LessStencilFunc:CS,Light:Wr,LightProbe:px,Line:zr,Line3:bx,LineBasicMaterial:Ln,LineCurve:Pp,LineCurve3:zv,LineDashedMaterial:tx,LineLoop:Pv,LineSegments:qi,LinearFilter:nn,LinearInterpolant:kp,LinearMipMapLinearFilter:fS,LinearMipMapNearestFilter:dS,LinearMipmapLinearFilter:Vi,LinearMipmapNearestFilter:Ca,LinearSRGBColorSpace:Rs,LinearToneMapping:Q0,LinearTransfer:$a,Loader:Yn,LoaderUtils:Af,LoadingManager:Hp,LoopOnce:ov,LoopPingPong:lv,LoopRepeat:av,MOUSE:ki,Material:fn,MaterialLoader:Oh,MathUtils:ml,Matrix2:Zp,Matrix3:le,Matrix4:jt,MaxEquation:F0,Mesh:Ue,MeshBasicMaterial:vr,MeshDepthMaterial:Fp,MeshDistanceMaterial:Bp,MeshLambertMaterial:Kv,MeshMatcapMaterial:Qv,MeshNormalMaterial:Jv,MeshPhongMaterial:jv,MeshPhysicalMaterial:qv,MeshStandardMaterial:Up,MeshToonMaterial:Zv,MinEquation:U0,MirroredRepeatWrapping:Ga,MixOperation:J0,MultiplyBlending:vf,MultiplyOperation:fl,NearestFilter:hn,NearestMipMapLinearFilter:hS,NearestMipMapNearestFilter:uS,NearestMipmapLinearFilter:vo,NearestMipmapNearestFilter:hp,NeutralToneMapping:rv,NeverCompare:dv,NeverDepth:ou,NeverStencilFunc:AS,NoBlending:lr,NoColorSpace:or,NoToneMapping:Gi,NormalAnimationBlendMode:hh,NormalBlending:bs,NotEqualCompare:gv,NotEqualDepth:du,NotEqualStencilFunc:PS,NumberKeyframeTrack:Qa,Object3D:de,ObjectLoader:Ww,ObjectSpaceNormalMap:hv,OctahedronGeometry:bl,OneFactor:z0,OneMinusConstantAlphaFactor:Z0,OneMinusConstantColorFactor:q0,OneMinusDstAlphaFactor:G0,OneMinusDstColorFactor:X0,OneMinusSrcAlphaFactor:su,OneMinusSrcColorFactor:V0,OrthographicCamera:ur,PCFShadowMap:lp,PCFSoftShadowMap:cp,PMREMGenerator:Nf,Path:Xu,PerspectiveCamera:Fe,Plane:Hn,PlaneGeometry:Ds,PlaneHelper:DT,PointLight:cx,PointLightHelper:TT,Points:Lv,PointsMaterial:Ap,PolarGridHelper:RT,PolyhedronGeometry:Gr,PositionalAudio:Kw,PropertyBinding:be,PropertyMixer:vx,QuadraticBezierCurve:Lp,QuadraticBezierCurve3:Dp,Quaternion:cn,QuaternionKeyframeTrack:Sl,QuaternionLinearInterpolant:sx,RED_GREEN_RGTC2_Format:zu,RED_RGTC1_Format:Fu,REVISION:dl,RGBADepthPacking:uv,RGBAFormat:Nn,RGBAIntegerFormat:uh,RGBA_ASTC_10x10_Format:Nu,RGBA_ASTC_10x5_Format:Cu,RGBA_ASTC_10x6_Format:Ru,RGBA_ASTC_10x8_Format:Iu,RGBA_ASTC_12x10_Format:Pu,RGBA_ASTC_12x12_Format:Lu,RGBA_ASTC_4x4_Format:xu,RGBA_ASTC_5x4_Format:bu,RGBA_ASTC_5x5_Format:Mu,RGBA_ASTC_6x5_Format:Su,RGBA_ASTC_6x6_Format:wu,RGBA_ASTC_8x5_Format:Tu,RGBA_ASTC_8x6_Format:Eu,RGBA_ASTC_8x8_Format:Au,RGBA_BPTC_Format:Du,RGBA_ETC2_EAC_Format:vu,RGBA_PVRTC_2BPPV1_Format:gu,RGBA_PVRTC_4BPPV1_Format:mu,RGBA_S3TC_DXT1_Format:Ia,RGBA_S3TC_DXT3_Format:Na,RGBA_S3TC_DXT5_Format:Pa,RGBDepthPacking:_S,RGBFormat:yp,RGBIntegerFormat:pS,RGB_BPTC_SIGNED_Format:Ou,RGB_BPTC_UNSIGNED_Format:Uu,RGB_ETC1_Format:yu,RGB_ETC2_Format:_u,RGB_PVRTC_2BPPV1_Format:pu,RGB_PVRTC_4BPPV1_Format:fu,RGB_S3TC_DXT1_Format:Ra,RGDepthPacking:vS,RGFormat:_p,RGIntegerFormat:ch,RawShaderMaterial:Yv,Ray:Xi,Raycaster:jp,RectAreaLight:dx,RedFormat:lh,RedIntegerFormat:pl,ReinhardToneMapping:tv,RenderTarget:Mp,RenderTarget3D:dT,RepeatWrapping:Ha,ReplaceStencilOp:bS,ReverseSubtractEquation:O0,RingGeometry:Rh,SIGNED_RED_GREEN_RGTC2_Format:ku,SIGNED_RED_RGTC1_Format:Bu,SRGBColorSpace:Vn,SRGBTransfer:Ee,Scene:_h,ShaderChunk:he,ShaderLib:wi,ShaderMaterial:$n,ShadowMaterial:$v,Shape:Ss,ShapeGeometry:Ih,ShapePath:FT,ShapeUtils:Ai,ShortType:fp,Skeleton:vh,SkeletonHelper:wT,SkinnedMesh:Rv,Source:Or,Sphere:un,SphereGeometry:Yo,Spherical:Rf,SphericalHarmonics3:fx,SplineCurve:Op,SpotLight:lx,SpotLightHelper:ST,Sprite:Av,SpriteMaterial:Tp,SrcAlphaFactor:ru,SrcAlphaSaturateFactor:$0,SrcColorFactor:k0,StaticCopyUsage:zS,StaticDrawUsage:Ya,StaticReadUsage:US,StereoCamera:qw,StreamCopyUsage:VS,StreamDrawUsage:OS,StreamReadUsage:BS,StringKeyframeTrack:Us,SubtractEquation:D0,SubtractiveBlending:_f,TOUCH:sr,TangentSpaceNormalMap:Hr,TetrahedronGeometry:Nh,Texture:Xe,TextureLoader:kw,TextureUtils:GT,Timer:yT,TimestampQuery:GS,TorusGeometry:Ph,TorusKnotGeometry:Lh,Triangle:vn,TriangleFanDrawMode:yS,TriangleStripDrawMode:gS,TrianglesDrawMode:mS,TubeGeometry:Dh,UVMapping:rh,Uint16BufferAttribute:Sp,Uint32BufferAttribute:wp,Uint8BufferAttribute:A1,Uint8ClampedBufferAttribute:C1,Uniform:qp,UniformsGroup:pT,UniformsLib:Ct,UniformsUtils:ph,UnsignedByteType:Ci,UnsignedInt101111Type:mp,UnsignedInt248Type:No,UnsignedInt5999Type:pp,UnsignedIntType:gr,UnsignedShort4444Type:oh,UnsignedShort5551Type:ah,UnsignedShortType:Io,VSMShadowMap:zi,Vector2:at,Vector3:L,Vector4:_e,VectorKeyframeTrack:tl,VideoFrameTexture:J1,VideoTexture:Dv,WebGL3DRenderTarget:p1,WebGLArrayRenderTarget:f1,WebGLCoordinateSystem:ii,WebGLCubeRenderTarget:Tv,WebGLRenderTarget:Ri,WebGLRenderer:Kp,WebGLUtils:Cx,WebGPUCoordinateSystem:Do,WebXRController:Yc,WireframeGeometry:Xv,WrapAroundEnding:Xa,ZeroCurvatureEnding:ms,ZeroFactor:B0,ZeroSlopeEnding:gs,ZeroStencilOp:xS,createCanvasElement:xv},Symbol.toStringTag,{value:"Module"}));function kr(r){return E0()?(A0(r),!0):!1}function il(){const r=new Set,t=s=>{r.delete(s)};return{on:s=>{r.add(s);const o=()=>t(s);return kr(o),{off:o}},off:t,trigger:(...s)=>Promise.all(Array.from(r).map(o=>o(...s))),clear:()=>{r.clear()}}}const Eo=new WeakMap,Rx=(...r)=>{var t;const e=r[0],n=(t=Ro())==null?void 0:t.proxy;if(n==null&&!T0())throw new Error("injectLocal must be called in setup");return n&&Eo.has(n)&&e in Eo.get(n)?Eo.get(n)[e]:JM(...r)};function T2(r,t){var e;const n=(e=Ro())==null?void 0:e.proxy;if(n==null)throw new Error("provideLocal must be called in setup");Eo.has(n)||Eo.set(n,Object.create(null));const i=Eo.get(n);return i[r]=t,Xc(r,t)}function E2(r,t){const e=(t==null?void 0:t.injectionKey)||Symbol(r.name||"InjectionState"),n=t==null?void 0:t.defaultValue;return[(...o)=>{const a=r(...o);return T2(e,a),a},()=>Rx(e,n)]}const $u=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const A2=Object.prototype.toString,C2=r=>A2.call(r)==="[object Object]",Yu=()=>{};function R2(r,t){function e(...n){return new Promise((i,s)=>{Promise.resolve(r(()=>t.apply(this,n),{fn:t,thisArg:this,args:n})).then(i).catch(s)})}return e}function I2(r,t={}){let e,n,i=Yu;const s=l=>{clearTimeout(l),i(),i=Yu};let o;return l=>{const c=ye(r),u=ye(t.maxWait);return e&&s(e),c<=0||u!==void 0&&u<=0?(n&&(s(n),n=void 0),Promise.resolve(l())):new Promise((h,d)=>{i=t.rejectOnCancel?d:h,o=l,u&&!n&&(n=setTimeout(()=>{e&&s(e),n=void 0,h(o())},u)),e=setTimeout(()=>{n&&s(n),n=void 0,h(l())},c)})}}function N2(r,t=!1,e="Timeout"){return new Promise((n,i)=>{setTimeout(t?()=>i(e):n,r)})}function wy(r){return r.endsWith("rem")?Number.parseFloat(r)*16:Number.parseFloat(r)}function jc(r){return Array.isArray(r)?r:[r]}function P2(r){return Ro()}function L2(r,t=200,e={}){return R2(I2(t,e),r)}function Ty(r,t=200,e={}){const n=tn(ye(r)),i=L2(()=>{n.value=r.value},t,e);return Xn(r,()=>i()),ap(n)}function Ix(r,t=!0,e){P2()?Qc(r,e):t?r():KM(r)}function D2(r,t=1e3,e={}){const{immediate:n=!0,immediateCallback:i=!1}=e;let s=null;const o=rn(!1);function a(){s&&(clearInterval(s),s=null)}function l(){o.value=!1,a()}function c(){const u=ye(t);u<=0||(o.value=!0,i&&r(),a(),o.value&&(s=setInterval(r,u)))}if(n&&$u&&c(),xs(t)||typeof t=="function"){const u=Xn(t,()=>{o.value&&$u&&c()});kr(u)}return kr(l),{isActive:ap(o),pause:l,resume:c}}function O2(r,t,e={}){const{immediate:n=!0,immediateCallback:i=!1}=e,s=rn(!1);let o;function a(){o&&(clearTimeout(o),o=void 0)}function l(){s.value=!1,a()}function c(...u){i&&r(),a(),s.value=!0,o=setTimeout(()=>{s.value=!1,o=void 0,r(...u)},ye(t))}return n&&(s.value=!0,$u&&c()),kr(l),{isPending:ap(s),start:c,stop:l}}function U2(r=1e3,t={}){const{controls:e=!1,callback:n}=t,i=O2(n!=null?n:Yu,r,t),s=We(()=>!i.isPending.value);return e?{ready:s,...i}:s}function Nx(r,t,e){return Xn(r,t,{...e,immediate:!0})}const Fs=$u?window:void 0;function Ur(r){var t;const e=ye(r);return(t=e==null?void 0:e.$el)!=null?t:e}function Lf(...r){const t=[],e=()=>{t.forEach(a=>a()),t.length=0},n=(a,l,c,u)=>(a.addEventListener(l,c,u),()=>a.removeEventListener(l,c,u)),i=We(()=>{const a=jc(ye(r[0])).filter(l=>l!=null);return a.every(l=>typeof l!="string")?a:void 0}),s=Nx(()=>{var a,l;return[(l=(a=i.value)==null?void 0:a.map(c=>Ur(c)))!=null?l:[Fs].filter(c=>c!=null),jc(ye(i.value?r[1]:r[0])),jc(oe(i.value?r[2]:r[1])),ye(i.value?r[3]:r[2])]},([a,l,c,u])=>{if(e(),!(a!=null&&a.length)||!(l!=null&&l.length)||!(c!=null&&c.length))return;const h=C2(u)?{...u}:u;t.push(...a.flatMap(d=>l.flatMap(f=>c.map(p=>n(d,f,p,h)))))},{flush:"post"}),o=()=>{s(),e()};return kr(e),o}function F2(){const r=rn(!1),t=Ro();return t&&Qc(()=>{r.value=!0},t),r}function Qp(r){const t=F2();return We(()=>(t.value,!!r()))}function tm(r,t={}){const{immediate:e=!0,fpsLimit:n=void 0,window:i=Fs,once:s=!1}=t,o=rn(!1),a=We(()=>n?1e3/ye(n):null);let l=0,c=null;function u(f){if(!o.value||!i)return;l||(l=f);const p=f-l;if(a.value&&p<a.value){c=i.requestAnimationFrame(u);return}if(l=f,r({delta:p,timestamp:f}),s){o.value=!1,c=null;return}c=i.requestAnimationFrame(u)}function h(){!o.value&&i&&(o.value=!0,l=0,c=i.requestAnimationFrame(u))}function d(){o.value=!1,c!=null&&i&&(i.cancelAnimationFrame(c),c=null)}return e&&h(),kr(d),{isActive:tu(o),pause:d,resume:h}}const B2=Symbol("vueuse-ssr-width");function z2(){const r=T0()?Rx(B2,null):null;return typeof r=="number"?r:void 0}function Px(r,t={}){const{window:e=Fs,ssrWidth:n=z2()}=t,i=Qp(()=>e&&"matchMedia"in e&&typeof e.matchMedia=="function"),s=rn(typeof n=="number"),o=rn(),a=rn(!1),l=c=>{a.value=c.matches};return ci(()=>{if(s.value){s.value=!i.value;const c=ye(r).split(",");a.value=c.some(u=>{const h=u.includes("not all"),d=u.match(/\(\s*min-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/),f=u.match(/\(\s*max-width:\s*(-?\d+(?:\.\d*)?[a-z]+\s*)\)/);let p=!!(d||f);return d&&p&&(p=n>=wy(d[1])),f&&p&&(p=n<=wy(f[1])),h?!p:p});return}i.value&&(o.value=e.matchMedia(ye(r)),a.value=o.value.matches)}),Lf(o,"change",l,{passive:!0}),We(()=>a.value)}function k2(r={}){const{window:t=Fs}=r,e=rn(1),n=Px(()=>"(resolution: ".concat(e.value,"dppx)"),r);let i=Yu;return t&&(i=Nx(n,()=>e.value=t.devicePixelRatio)),{pixelRatio:tu(e),stop:i}}function V2(r,t,e={}){const{window:n=Fs,...i}=e;let s;const o=Qp(()=>n&&"ResizeObserver"in n),a=()=>{s&&(s.disconnect(),s=void 0)},l=We(()=>{const h=ye(r);return Array.isArray(h)?h.map(d=>Ur(d)):[Ur(h)]}),c=Xn(l,h=>{if(a(),o.value&&n){s=new ResizeObserver(t);for(const d of h)d&&s.observe(d,i)}},{immediate:!0,flush:"post"}),u=()=>{a(),c()};return kr(u),{isSupported:o,stop:u}}function H2(r,t={width:0,height:0},e={}){const{window:n=Fs,box:i="content-box"}=e,s=We(()=>{var h,d;return(d=(h=Ur(r))==null?void 0:h.namespaceURI)==null?void 0:d.includes("svg")}),o=rn(t.width),a=rn(t.height),{stop:l}=V2(r,([h])=>{const d=i==="border-box"?h.borderBoxSize:i==="content-box"?h.contentBoxSize:h.devicePixelContentBoxSize;if(n&&s.value){const f=Ur(r);if(f){const p=f.getBoundingClientRect();o.value=p.width,a.value=p.height}}else if(d){const f=jc(d);o.value=f.reduce((p,{inlineSize:y})=>p+y,0),a.value=f.reduce((p,{blockSize:y})=>p+y,0)}else o.value=h.contentRect.width,a.value=h.contentRect.height},e);Ix(()=>{const h=Ur(r);h&&(o.value="offsetWidth"in h?h.offsetWidth:t.width,a.value="offsetHeight"in h?h.offsetHeight:t.height)});const c=Xn(()=>Ur(r),h=>{o.value=h?t.width:0,a.value=h?t.height:0});function u(){l(),c()}return{width:o,height:a,stop:u}}function G2(r){var t;const e=rn(0);if(typeof performance>"u")return e;const n=(t=r==null?void 0:r.every)!=null?t:10;let i=performance.now(),s=0;return tm(()=>{if(s+=1,s>=n){const o=performance.now(),a=o-i;e.value=Math.round(1e3/(a/s)),i=o,s=0}}),e}function W2(r={}){const t=tn(),e=Qp(()=>typeof performance<"u"&&"memory"in performance);if(e.value){const{interval:n=1e3}=r;D2(()=>{t.value=performance.memory},n,{immediate:r.immediate,immediateCallback:r.immediateCallback})}return{isSupported:e,memory:t}}function X2(r={}){const{window:t=Fs,initialWidth:e=Number.POSITIVE_INFINITY,initialHeight:n=Number.POSITIVE_INFINITY,listenOrientation:i=!0,includeScrollbar:s=!0,type:o="inner"}=r,a=rn(e),l=rn(n),c=()=>{if(t)if(o==="outer")a.value=t.outerWidth,l.value=t.outerHeight;else if(o==="visual"&&t.visualViewport){const{width:h,height:d,scale:f}=t.visualViewport;a.value=Math.round(h*f),l.value=Math.round(d*f)}else s?(a.value=t.innerWidth,l.value=t.innerHeight):(a.value=t.document.documentElement.clientWidth,l.value=t.document.documentElement.clientHeight)};c(),Ix(c);const u={passive:!0};if(Lf("resize",c,u),t&&o==="visual"&&t.visualViewport&&Lf(t.visualViewport,"resize",c,u),i){const h=Px("(orientation: portrait)");Xn(h,()=>c())}return{width:a,height:l}}const $2="@tresjs/core",Y2="module",q2="5.1.0",j2="pnpm@10.17.0",Z2="Declarative ThreeJS using Vue Components",J2="Alvaro Saburido <hola@alvarosaburido.dev> (https://github.com/alvarosabu/)",K2="MIT",Q2={type:"git",url:"git+https://github.com/Tresjs/tres.git",directory:"packages/core"},tI=["vue","3d","threejs","three","threejs-vue"],eI=!1,nI={".":{types:"./dist/index.d.ts",import:"./dist/tres.js",default:"./dist/tres.js"},"./components":{types:"./dist/src/components/index.d.ts"},"./composables":{types:"./dist/src/composables/index.d.ts"},"./types":{types:"./dist/src/types/index.d.ts"},"./utils":{types:"./dist/src/utils/index.d.ts"},"./*":"./*"},iI="./dist/tres.js",rI="./dist/index.d.ts",sI=["*.d.ts","dist"],oI={access:"public"},aI={build:"vite build",test:"vitest","test:ci":"vitest run","test:ui":"vitest --ui --coverage.enabled=true",coverage:"vitest run --coverage",lint:"eslint .","lint:fix":"eslint . --fix",typecheck:"vue-tsc --noEmit"},lI={three:">=0.133",vue:">=3.4"},cI={"@pmndrs/pointer-events":"^6.6.17","@vue/devtools-api":"^7.7.2","@vueuse/core":"catalog:",radashi:"^12.6.2"},uI={"@tresjs/eslint-config":"workspace:*","@types/three":"catalog:","@typescript-eslint/eslint-plugin":"catalog:","@typescript-eslint/parser":"catalog:","@vitejs/plugin-vue":"catalog:","@vitest/coverage-v8":"3.2.4","@vitest/ui":"catalog:","@vue/test-utils":"catalog:",eslint:"catalog:","eslint-plugin-vue":"catalog:",jsdom:"catalog:",kolorist:"catalog:",pathe:"catalog:","rollup-plugin-analyzer":"catalog:","rollup-plugin-copy":"^3.5.0","rollup-plugin-visualizer":"catalog:",three:"catalog:",vite:"catalog:","vite-plugin-banner":"catalog:","vite-plugin-dts":"catalog:","vite-plugin-inspect":"^11.3.3",vitest:"catalog:",vue:"catalog:","vue-demi":"^0.14.10","vue-tsc":"catalog:"},hI={implicitDependencies:["!@tresjs/core-*"]},dI={name:$2,type:Y2,version:q2,packageManager:j2,description:Z2,author:J2,license:K2,repository:Q2,keywords:tI,sideEffects:eI,exports:nI,module:iI,types:rI,files:sI,publishConfig:oI,scripts:aI,peerDependencies:lI,dependencies:cI,devDependencies:uI,nx:hI};/*! #__NO_SIDE_EFFECTS__ */function fI(r){const t=Object.create(null);for(const e of r.split(","))t[e]=1;return e=>e in t}const pI="html,body,base,head,link,meta,style,title,address,article,aside,footer,header,hgroup,h1,h2,h3,h4,h5,h6,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,summary,template,blockquote,iframe,tfoot",mI=fI(pI);function Ey(r){var n;var t;const e=(n=(t=r==null?void 0:r.replace(/([A-Z])+/g,gI))==null?void 0:t.split(/(?=[A-Z])|[\.\-\s_]/).map(i=>i.toLowerCase()))!=null?n:[];return e.length===0?"":e.length===1?e[0]:e.reduce((i,s)=>"".concat(i).concat(s.charAt(0).toUpperCase()).concat(s.slice(1)))}function gI(r){if(!r||r.length===0)return"";const t=r.toLowerCase();return t.substring(0,1).toUpperCase()+t.substring(1,t.length)}function Lx(r,t){if(Object.is(r,t))return!0;if(r instanceof Date&&t instanceof Date)return r.getTime()===t.getTime();if(r instanceof RegExp&&t instanceof RegExp)return r.toString()===t.toString();if(typeof r!="object"||r===null||typeof t!="object"||t===null)return!1;const e=Reflect.ownKeys(r),n=Reflect.ownKeys(t);if(e.length!==n.length)return!1;for(let i=0;i<e.length;i++)if(!Reflect.has(t,e[i])||!Lx(r[e[i]],t[e[i]]))return!1;return!0}function fs(r){return typeof r=="function"}function Dx(r){return typeof r=="number"&&!Number.isNaN(r)}function em(r){return yI(r,"[object Object]")}function nm(r){return typeof r=="string"}function yI(r,t){return Object.prototype.toString.call(r)===t}function Df(r){return typeof r>"u"}const yi=r=>t=>em(t)&&r in t&&!!t[r],Of=yi("isObject3D"),Ox=yi("isMesh"),Ux=yi("isCamera"),_I=yi("isOrthographicCamera"),Fx=yi("isPerspectiveCamera"),Bx=yi("isColor"),vI=r=>nm(r)||Dx(r)||Bx(r),Ay=r=>r instanceof gl,zx=yi("isBufferGeometry"),kx=yi("isMaterial"),xI=yi("isLight"),Vx=yi("isFog"),Hx=yi("isScene"),Uf=r=>r!==null&&typeof r=="object"&&"set"in r&&typeof r.set=="function",bI=r=>Uf(r)&&"copy"in r&&typeof r.copy=="function",MI=r=>!!(r!=null&&r.constructor),So=r=>Ux(r)||_I(r)||Fx(r),SI=r=>Of(r)||zx(r)||kx(r)||Vx(r),wI=yi("isPrimitive"),TI=r=>SI(r)&&"__tres"in r,EI=(r,t)=>{let e=0;for(let n=0;n<r.length;n++)t(r[n],n)&&(r[e]=r[n],e++);return r.length=e,r},qu="[TresJS ▲ ■ ●] ";function Cy(...r){typeof r[0]=="string"?r[0]=qu+r[0]:r.unshift(qu),console.error(...r)}function AI(...r){typeof r[0]=="string"?r[0]=qu+r[0]:r.unshift(qu),console.warn(...r)}function Ry(r){(t=>"map"in t&&!!t.map)(r)&&r.map.dispose(),r.dispose()}function Gx(r){var t,e;if(r.parent&&((t=r.removeFromParent)==null||t.call(r)),delete r.__tres,[...r.children].forEach(n=>Gx(n)),!(r instanceof _h)){const n=r;r&&((e=r.dispose)==null||e.call(r)),n.geometry&&n.geometry.dispose(),Array.isArray(n.material)?n.material.forEach(i=>Ry(i)):n.material&&Ry(n.material)}}function ju(r,t){let e=r;if(t.includes("-")){const n=t.split("-");let i=n.shift();for(;e&&n.length;)i in e?(e=e[i],i=n.shift()):i=Iy(i,n.shift());return{target:e,key:Iy(i,...n)}}else return{target:e,key:t}}function Iy(...r){return r.map((t,e)=>e===0?t:t.charAt(0).toUpperCase()+t.slice(1)).join("")}function CI(r,t,e){const n=/-\d+$/;if(nm(e)){if(n.test(e)){const o=e.replace(n,""),{target:a,key:l}=ju(r,o);if(!Array.isArray(a[l])){const c=a[l],u=[];u.__tresDetach=()=>{u.every(h=>Df(h))&&(a[l]=c)},a[l]=u}}const{target:i,key:s}=ju(r,e);t.__tres.previousAttach=i[s],i[s]=zo(t)}else t.__tres.previousAttach=e(r,t)}function RI(r,t,e){var n,i,s;if(nm(e)){const{target:o,key:a}=ju(r,e),l=t.__tres.previousAttach;l===void 0?delete o[a]:o[a]=l,"__tresDetach"in o&&o.__tresDetach()}else(i=(n=t.__tres)==null?void 0:n.previousAttach)==null||i.call(n,r,t);(s=t.__tres)==null||delete s.previousAttach}function hs(r,t,e){const n=r;return n.__tres={type:"unknown",root:e,memoizedProps:{},objects:[],parent:null,previousAttach:null,...t},n.__tres.attach||(kx(n)?n.__tres.attach="material":zx(n)?n.__tres.attach="geometry":Vx(n)&&(n.__tres.attach="fog")),n}function Ff(r){var e;const t=(e=r==null?void 0:r.__tres)==null?void 0:e.root;t!=null&&t.renderer&&t.renderer.canBeInvalidated.value&&t.renderer.invalidate()}function II(r,t,e,n,i){var u,h,d;const s=[...t.__tres.objects],o=zo(t);if(r=zo(r),o===r)return!0;const a=hs(r,(u=t.__tres)!=null?u:{},i),l=(d=(h=t.parent)!=null?h:t.__tres.parent)!=null?d:null,c={...t.__tres.memoizedProps};delete c.object;for(const f of s)Wx(f,i),Xx(f,i);o.__tres.objects=[],n.remove(t);for(const[f,p]of Object.entries(c))n.patchProp(a,f,a[f],p);e(r),n.insert(t,l);for(const f of s)n.insert(f,t);return!0}function zo(r){if(wI(r)){const t=r;return t.object.__tres=t.__tres,t.object}else return r}function Wx(r,t){var n,i,s,o;const e=((n=r.__tres)==null?void 0:n.parent)||t.scene.value;r.__tres&&(r.__tres.parent=null),e&&e.__tres&&"objects"in e.__tres&&EI(e.__tres.objects,a=>a!==r),(i=r.__tres)!=null&&i.attach?RI(e,r,r.__tres.attach):((o=(s=r.parent)==null?void 0:s.remove)==null||o.call(s,zo(r)),r.parent=null)}function Xx(r,t){var e;(e=r.traverse)==null||e.call(r,n=>{So(n)&&t.camera.deregisterCamera(n)}),So(r)&&t.camera.deregisterCamera(r),Ff(r)}const NI=({sizes:r})=>{const t=tn([]),e=We(()=>t.value[0]),n=o=>{const a=Ux(o)?o:t.value.find(c=>c.uuid===o);if(!a)return;const l=t.value.filter(({uuid:c})=>c!==a.uuid);t.value=[a,...l]},i=(o,a=!1)=>{t.value.some(({uuid:l})=>l===o.uuid)||(t.value.push(o),a&&n(o.uuid))},s=o=>{t.value=t.value.filter(({uuid:a})=>a!==o.uuid)};return ci(()=>{r.aspectRatio.value&&t.value.forEach(o=>{Fx(o)&&(o.aspect=r.aspectRatio.value,o.updateProjectionMatrix())})}),{activeCamera:e,cameras:t,registerCamera:i,deregisterCamera:s,setActiveCamera:n}};function Ny(){const r=new Map,t=new Set;let e=0,n=!1;const i=()=>{const o=Array.from(r.entries()).sort((a,l)=>{const c=a[1].priority-l[1].priority;return c===0?a[1].addI-l[1].addI:c});t.clear(),o.forEach(a=>t.add(a[0]))},s=o=>{r.delete(o),t.delete(o)};return{on:(o,a=0)=>{r.set(o,{priority:a,addI:e++});const l=()=>s(o);return kr(l),n=!0,{off:l}},off:s,trigger:(...o)=>(n&&(i(),n=!1),Promise.all(Array.from(t).map(a=>a(...o)))),dispose:()=>{r.clear(),t.clear()},get count(){return r.size}}}const Bf=tn({}),zf=r=>Object.assign(Bf.value,r),PI=(r,t,e)=>{var i;if(!fs(r.setPixelRatio))return;let n=0;if(e&&Array.isArray(e)&&e.length>=2){const[s,o]=e;n=ml.clamp(t,s,o)}else Dx(e)?n=e:n=t;n!==((i=r.getPixelRatio)==null?void 0:i.call(r))&&r.setPixelRatio(n)},LI=r=>{const t=new Xp,e={before:il(),after:il()},{pause:n,resume:i,isActive:s}=tm(()=>{const o=()=>({delta:t.getDelta(),elapsed:t.elapsedTime});e.before.trigger(o()),r(),e.after.trigger(o())},{immediate:!1});return{start:()=>{t.start(),i()},stop:()=>{t.stop(),n()},isActive:s,onBeforeLoop:e.before.on,onLoop:e.after.on}};function DI({scene:r,canvas:t,options:e,contextParts:{sizes:n,camera:i}}){const s=fs(e.renderer)?e.renderer({sizes:n,scene:r,camera:i,canvas:t}):new Kp({...e,canvas:Ur(t)}),o=tn(ye(e.renderMode)==="manual"?0:1),a=60,l=We(()=>ye(e.renderMode)==="on-demand"&&o.value===0),c=()=>r.value.traverse(x=>{x instanceof Ue&&x.material instanceof fn&&(x.material.needsUpdate=!0)}),u=(x=1)=>{l.value&&(o.value=Math.min(a,o.value+x))},h=()=>{if(ye(e.renderMode)!=="manual")throw new Error("advance can only be called in manual render mode.");o.value=1},d=()=>{ye(e.renderMode)==="on-demand"&&u()},f=We(()=>ye(e.renderMode)==="always"),p=x=>em(x)&&"isRenderer"in x&&!!x.isRenderer,y=il();let m=!1;p(s)&&(s.init(),y.trigger(s));const g=il(),w=()=>{o.value=f.value?1:Math.max(0,o.value-1),g.trigger(s)};let b=x=>{i.activeCamera.value&&(s.render(r.value,i.activeCamera.value),x())};const M=x=>{b=x},A=LI(()=>{o.value&&b(w)});y.on(A.start),Xn([n.width,n.height],()=>{s.setSize(n.width.value,n.height.value),!m&&s.domElement.width&&s.domElement.height&&(y.trigger(s),m=!0),d()},{immediate:!0});const{pixelRatio:S}=k2();ci(()=>{PI(s,S.value,ye(e.dpr))}),ye(e.renderMode)==="on-demand"&&u(),ye(e.renderMode)==="manual"&&U2(100,{callback:h});const E=We(()=>{const x=ye(e.clearColor),v=ye(e.clearAlpha),_=typeof x=="string"&&x.length===9&&x.startsWith("#");return _&&v!==void 0&&AI("clearColor with alpha (e.g. ".concat(x,") and clearAlpha cannot both be set, using clearColor as source of truth")),_?{alpha:Number.parseInt(x.slice(7,9),16)/255,color:x.slice(0,7)}:{alpha:v,color:x}});return ci(()=>{const x=E.value;x.color===void 0||x.alpha===void 0||s.setClearColor(x.color,x.alpha)}),ci(()=>{const x=e.toneMapping;x&&(s.toneMapping=x)}),ci(()=>{const x=e.toneMappingExposure;x&&(s.toneMappingExposure=x)}),ci(()=>{const x=e.outputColorSpace;x&&(s.outputColorSpace=x)}),ci(()=>{const x=e.shadows;x!==void 0&&(s.shadowMap.enabled=x,c())}),ci(()=>{const x=e.shadowMapType;x!==void 0&&(s.shadowMap.type=x,c())}),As(()=>{s.dispose(),"forceContextLoss"in s&&s.forceContextLoss()}),{loop:A,instance:s,advance:h,onReady:y.on,onRender:g.on,invalidate:u,canBeInvalidated:l,mode:ye(e.renderMode),replaceRenderFunction:M}}function OI(r,t,e=10){const n=ye(r)?X2():H2(We(()=>ye(t).parentElement)),i=tu(Ty(n.width,e)),s=tu(Ty(n.height,e)),o=We(()=>i.value/s.value);return{height:s,width:i,aspectRatio:o}}class UI{constructor(t){Yt(this,"nativeEvent");Yt(this,"NONE",0);Yt(this,"CAPTURING_PHASE",1);Yt(this,"AT_TARGET",2);Yt(this,"BUBBLING_PHASE",3);Yt(this,"relatedTarget",null);this.nativeEvent=t}get altKey(){return this.getFromNative("altKey",!1)}get button(){return this.getFromNative("button",0)}get buttons(){return this.getFromNative("buttons",0)}get clientX(){return this.getFromNative("clientX",0)}get clientY(){return this.getFromNative("clientY",0)}get ctrlKey(){return this.getFromNative("ctrlKey",!1)}get layerX(){return this.getFromNative("layerX",0)}get layerY(){return this.getFromNative("layerY",0)}get metaKey(){return this.getFromNative("metaKey",!1)}get movementX(){return this.getFromNative("movementX",0)}get movementY(){return this.getFromNative("movementY",0)}get offsetX(){return this.getFromNative("offsetX",0)}get offsetY(){return this.getFromNative("offsetY",0)}get pageX(){return this.getFromNative("pageX",0)}get pageY(){return this.getFromNative("pageY",0)}get screenX(){return this.getFromNative("screenX",0)}get screenY(){return this.getFromNative("screenY",0)}get shiftKey(){return this.getFromNative("shiftKey",!1)}get x(){return this.getFromNative("x",0)}get y(){return this.getFromNative("y",0)}get detail(){return this.getFromNative("detail",0)}get view(){return this.getFromNative("view",null)}get which(){return this.getFromNative("which",0)}get cancelBubble(){return this.getFromNative("cancelBubble",!1)}get composed(){return this.getFromNative("composed",!1)}get eventPhase(){return this.getFromNative("eventPhase",0)}get isTrusted(){return this.getFromNative("isTrusted",!1)}get returnValue(){return this.getFromNative("returnValue",!1)}get timeStamp(){return this.getFromNative("timeStamp",0)}get cancelable(){return this.getFromNative("cancelable",!1)}get defaultPrevented(){return this.getFromNative("defaultPrevented",!1)}getFromNative(t,e){return t in this.nativeEvent?this.nativeEvent[t]:e}}const Hd=new L;class An extends UI{constructor(e,n,i,s,o,a,l=o.object,c=l,u={stopped:!n,stoppedImmediate:!1}){super(i);Yt(this,"type");Yt(this,"bubbles");Yt(this,"internalPointer");Yt(this,"intersection");Yt(this,"camera");Yt(this,"currentObject");Yt(this,"object");Yt(this,"propagationState");Yt(this,"_pointer");Yt(this,"_ray");Yt(this,"_intersections",[]);Yt(this,"_unprojectedPoint");this.type=e,this.bubbles=n,this.internalPointer=s,this.intersection=o,this.camera=a,this.currentObject=l,this.object=c,this.propagationState=u}get pointerId(){return this.internalPointer.id}get pointerType(){return this.internalPointer.type}get pointerState(){return this.internalPointer.state}get distance(){return this.intersection.distance}get distanceToRay(){return this.intersection.distanceToRay}get point(){return this.intersection.point}get index(){return this.intersection.index}get face(){return this.intersection.face}get faceIndex(){return this.intersection.faceIndex}get uv(){return this.intersection.uv}get uv1(){return this.intersection.uv1}get normal(){return this.intersection.normal}get instanceId(){return this.intersection.instanceId}get pointOnLine(){return this.intersection.pointOnLine}get batchId(){return this.intersection.batchId}get pointerPosition(){return this.intersection.pointerPosition}get pointerQuaternion(){return this.intersection.pointerQuaternion}get pointOnFace(){return this.intersection.pointOnFace}get localPoint(){return this.intersection.localPoint}get details(){return this.intersection.details}get target(){return this.object}get currentTarget(){return this.currentObject}get eventObject(){return this.currentObject}get srcElement(){return this.currentObject}get pointer(){return this._pointer==null&&(Hd.copy(this.intersection.point).project(this.camera),this._pointer=new at(Hd.x,Hd.y)),this._pointer}get ray(){if(this._ray!=null)return this._ray;switch(this.intersection.details.type){case"screen-ray":case"ray":case"sphere":return this._ray=new Xi(this.intersection.pointerPosition,new L(0,0,-1).applyQuaternion(this.intersection.pointerQuaternion));case"lines":return this._ray=new Xi(this.intersection.details.line.start,this.intersection.details.line.end.clone().sub(this.intersection.details.line.start).normalize())}}get intersections(){return this._intersections==null&&(this._intersections=[{...this.intersection,eventObject:this.currentObject}]),this._intersections}get unprojectedPoint(){if(this._unprojectedPoint==null){const e=this.pointer;this._unprojectedPoint=new L(e.x,e.y,0).unproject(this.camera)}return this._unprojectedPoint}get stopped(){return this.propagationState.stoppedImmediate||this.propagationState.stopped}get stoppedImmediate(){return this.propagationState.stoppedImmediate}get delta(){throw new Error("not supported")}stopPropagation(){this.propagationState.stopped=!0}stopImmediatePropagation(){this.propagationState.stoppedImmediate=!0}retarget(e){return new An(this.type,this.bubbles,this.nativeEvent,this.internalPointer,this.intersection,this.camera,e,this.target,this.propagationState)}}class Zu extends An{get deltaX(){return this.nativeEvent.deltaX}get deltaY(){return this.nativeEvent.deltaY}get deltaZ(){return this.nativeEvent.deltaZ}constructor(t,e,n,i,s,o){super("wheel",!0,t,e,n,i,s,o)}retarget(t){return new Zu(this.nativeEvent,this.internalPointer,this.intersection,this.camera,t,this.target)}}function Fn(r){$x(r,r.currentObject)}function $x(r,t){if(t==null)return;const e=BI(t,r.type);if(e!=null&&e.length>0){const n=r.retarget(t),i=e.length;for(let s=0;s<i&&!n.stoppedImmediate;s++)e[s](n)}r.stopped||$x(r,t.parent)}const Yx={click:"onClick",contextmenu:"onContextMenu",dblclick:"onDoubleClick",pointercancel:"onPointerCancel",pointerdown:"onPointerDown",pointerenter:"onPointerEnter",pointerleave:"onPointerLeave",pointermove:"onPointerMove",pointerout:"onPointerOut",pointerover:"onPointerOver",pointerup:"onPointerUp",wheel:"onWheel"},FI=Object.keys(Yx);function BI(r,t){var n;if(r._listeners!=null&&t in r._listeners)return r._listeners[t];let e;if(r.isVoidObject&&t==="click"&&((n=r.parent)==null?void 0:n.__r3f)!=null&&(e=r.parent.__r3f.root.getState().onPointerMissed),r.__r3f!=null&&(e=r.__r3f.handlers[Yx[t]]),e!=null)return[e]}const zI=1e10,kI=new Yo(zI),Py=new Map;function qx(r){let t=Py.get(r);return t==null&&(t=new Ue(kI),t.isVoidObject=!0,t.parent=r,t.pointerEventsOrder=-1/0,Py.set(r,t)),t}function VI(r,t,e){var i,s;const n=(s=t.normal)!=null?s:(i=t.face)==null?void 0:i.normal;return n==null?!1:(r.setFromNormalAndCoplanarPoint(n,t.localPoint),r.applyMatrix4(e),!0)}function HI(r,t,e){if(t==="none"||t==="listener"&&!r)return!1;if(e==="all")return!0;if(typeof e=="function")return({id:s,type:o,state:a})=>e(s,o,a);let n,i;return"deny"in e?(i=!0,n=e.deny):(i=!1,n=e.allow),Array.isArray(n)?s=>Ly(n.includes(s.type),i):s=>Ly(n===s.type,i)}function Ly(r,t){return t?!r:r}function jx(r,t,e,n=!1,i,s,o){var m,g,w,b,M,A,S;const a=n||GI(r,t),l=(m=t.pointerEvents)!=null?m:i,c=(g=l!=null?l:t.defaultPointerEvents)!=null?g:"listener",u=(b=(w=t.pointerEventsType)!=null?w:s)!=null?b:"all",h=(A=(M=t.pointerEventsOrder)!=null?M:o)!=null?A:0,d=HI(a,c,u),f=e.length;if(f===1)(d===!0||typeof d=="function"&&d(e[0]))&&Gd(e[0],t,c,u,h);else if(d===!0)for(let E=0;E<f;E++)Gd(e[E],t,c,u,h);else if(typeof d=="function")for(let E=0;E<f;E++){const x=e[E];d(x)&&Gd(x,t,c,u,h)}if(t.children.length===0||t.intersectChildren===!1)return;const p=(S=t.interactableDescendants)!=null?S:t.children,y=p.length;for(let E=0;E<y;E++)jx(r,p[E],e,a,l,u,h)}function GI(r,t){var i;if(t.ancestorsHaveListeners||r==="pointer"&&t.ancestorsHavePointerListeners||r==="wheel"&&t.ancestorsHaveWheelListeners||t.__r3f!=null&&((i=t.__r3f)==null?void 0:i.eventCount)>0&&(r==="wheel"&&t.__r3f.handlers.onWheel!=null||r==="pointer"&&Object.keys(t.__r3f.handlers).some(s=>s!="onWheel")))return!0;if(t._listeners==null)return!1;if(r==="wheel"){const s=t._listeners.wheel;return s!=null&&s.length>0}const e=Object.entries(t._listeners),n=e.length;for(let s=0;s<n;s++){const o=e[s];if(o[0]!=="wheel"&&FI.includes(o[0])&&o[1]!=null&&o[1].length>0)return!0}return!1}function Gd({intersector:r,options:t},e,n,i,s){var o;((o=t.filter)==null?void 0:o.call(t,e,n,i,s))!==!1&&r.executeIntersection(e,s)}function WI(r,t,{customSort:e=XI}={},n){let i,s,o;const a=r.length;for(let l=0;l<a;l++){const c=r[l],u=t==null?void 0:t[l];(i==null||e(c,u,i,s)<0)&&(o=l,i=c,s=u)}return o}function XI(r,t=0,e,n=0){return t!=n?n-t:r.distance-e.distance}const Dy=1e7;function $I(r,t,e,n,i,s=0){const o=t.direction.clone().multiplyScalar(Dy),a=Dy;return{distance:a+s,object:qx(r),point:o,normal:t.origin.clone().sub(o).normalize(),details:e(o,a),pointerPosition:n,pointerQuaternion:i,pointOnFace:o,localPoint:o}}function YI(r,t,e){for(;e>0;)r.push(t),--e}const ha=Symbol("buttonsDownTime"),Wd=Symbol("buttonsClickTime");var w0;(w0=globalThis.pointerEventspointerMap)!=null||(globalThis.pointerEventspointerMap=new Map);de.prototype.setPointerCapture=function(r){var t;(t=im(r))==null||t.setCapture(this)};de.prototype.releasePointerCapture=function(r){const t=im(r);t==null||!t.hasCaptured(this)||t.setCapture(void 0)};de.prototype.hasPointerCapture=function(r){var t,e;return(e=(t=im(r))==null?void 0:t.hasCaptured(this))!=null?e:!1};function im(r){var t;return(t=globalThis.pointerEventspointerMap)==null?void 0:t.get(r)}let qI=class{constructor(t,e,n,i,s,o,a,l,c={}){Yt(this,"id");Yt(this,"type");Yt(this,"state");Yt(this,"intersector");Yt(this,"getCamera");Yt(this,"onMoveCommited");Yt(this,"parentSetPointerCapture");Yt(this,"parentReleasePointerCapture");Yt(this,"options");Yt(this,"prevIntersection");Yt(this,"intersection");Yt(this,"prevEnabled",!0);Yt(this,"enabled",!0);Yt(this,"wheelIntersection");Yt(this,"pointerEntered",[]);Yt(this,"pointerEnteredHelper",[]);Yt(this,"pointerCapture");Yt(this,"buttonsDownTime",new Map);Yt(this,"buttonsDown",new Set);Yt(this,"wasMoved",!1);Yt(this,"onFirstMove",[]);var u;this.id=t,this.type=e,this.state=n,this.intersector=i,this.getCamera=s,this.onMoveCommited=o,this.parentSetPointerCapture=a,this.parentReleasePointerCapture=l,this.options=c,(u=globalThis.pointerEventspointerMap)==null||u.set(t,this)}getPointerCapture(){return this.pointerCapture}hasCaptured(t){var e;return((e=this.pointerCapture)==null?void 0:e.object)===t}setCapture(t){var e,n,i;((e=this.pointerCapture)==null?void 0:e.object)!==t&&(this.pointerCapture!=null&&((n=this.parentReleasePointerCapture)==null||n.call(this),this.pointerCapture=void 0),t!=null&&this.intersection!=null&&(this.pointerCapture={object:t,intersection:this.intersection},(i=this.parentSetPointerCapture)==null||i.call(this)))}getButtonsDown(){return this.buttonsDown}getIntersection(){return this.intersection}getEnabled(){return this.enabled}setEnabled(t,e,n=!0){var i;this.enabled!==t&&(!t&&this.pointerCapture!=null&&((i=this.parentReleasePointerCapture)==null||i.call(this),this.pointerCapture=void 0),this.enabled=t,n&&this.commit(e,!1))}computeIntersection(t,e,n){return this.pointerCapture!=null?this.intersector.intersectPointerCapture(this.pointerCapture,n):(this.intersector.startIntersection(n),jx(t,e,[this]),this.intersector.finalizeIntersection(e))}setIntersection(t){this.intersection=t}commit(t,e){var l;const n=this.getCamera(),i=this.prevEnabled?this.prevIntersection:void 0,s=this.enabled?this.intersection:void 0;i!=null&&i.object!=(s==null?void 0:s.object)&&Fn(new An("pointerout",!0,t,this,i,n));const o=this.pointerEntered;this.pointerEntered=[],this.pointerEnteredHelper.length=0,Zx(s==null?void 0:s.object,this.pointerEntered,o,this.pointerEnteredHelper);const a=o.length;for(let c=0;c<a;c++){const u=o[c];Fn(new An("pointerleave",!1,t,this,i,n,u))}s!=null&&(i==null?void 0:i.object)!=s.object&&Fn(new An("pointerover",!0,t,this,s,n));for(let c=this.pointerEnteredHelper.length-1;c>=0;c--){const u=this.pointerEnteredHelper[c];Fn(new An("pointerenter",!1,t,this,s,n,u))}if(e&&s!=null&&Fn(new An("pointermove",!0,t,this,s,n)),this.prevIntersection=this.intersection,this.prevEnabled=this.enabled,!this.wasMoved&&this.intersector.isReady()){this.wasMoved=!0;const c=this.onFirstMove.length;for(let u=0;u<c;u++)this.onFirstMove[u](n);this.onFirstMove.length=0}(l=this.onMoveCommited)==null||l.call(this,this)}move(t,e){this.intersection=this.computeIntersection("pointer",t,e),this.commit(e,!0)}emitMove(t){this.intersection!=null&&Fn(new An("pointermove",!0,t,this,this.intersection,this.getCamera()))}down(t){var n;if(this.buttonsDown.add(t.button),!this.enabled)return;if(!this.wasMoved){this.onFirstMove.push(this.down.bind(this,t));return}if(this.intersection==null)return;Fn(new An("pointerdown",!0,t,this,this.intersection,this.getCamera()));const{object:e}=this.intersection;(n=e[ha])!=null||(e[ha]=new Map),e[ha].set(t.button,t.timeStamp),this.buttonsDownTime.set(t.button,t.timeStamp)}up(t){var h;if(this.buttonsDown.delete(t.button),!this.enabled)return;if(!this.wasMoved){this.onFirstMove.push(this.up.bind(this,t));return}if(this.intersection==null)return;const{clickThesholdMs:e,contextMenuButton:n=2,dblClickThresholdMs:i=500,clickThresholdMs:s=e!=null?e:300}=this.options;this.pointerCapture=void 0;const o=jI(this.buttonsDownTime,this.intersection.object[ha],t.button,t.timeStamp,s),a=this.getCamera();if(o&&t.button===n&&Fn(new An("contextmenu",!0,t,this,this.intersection,a)),Fn(new An("pointerup",!0,t,this,this.intersection,a)),!o||t.button===n)return;Fn(new An("click",!0,t,this,this.intersection,a));const{object:l}=this.intersection,c=(h=l[Wd])!=null?h:l[Wd]=new Map,u=c.get(t.button);if(u==null||t.timeStamp-u>i){c.set(t.button,t.timeStamp);return}Fn(new An("dblclick",!0,t,this,this.intersection,a)),c.delete(t.button)}cancel(t){if(this.enabled){if(!this.wasMoved){this.onFirstMove.push(this.cancel.bind(this,t));return}this.intersection!=null&&Fn(new An("pointercancel",!0,t,this,this.intersection,this.getCamera()))}}wheel(t,e,n=!1){if(!this.enabled)return;if(!this.wasMoved&&n){this.onFirstMove.push(this.wheel.bind(this,t,e,n));return}n||(this.wheelIntersection=this.computeIntersection("wheel",t,e));const i=n?this.intersection:this.wheelIntersection;i!=null&&Fn(new Zu(e,this,i,this.getCamera()))}emitWheel(t,e=!1){if(!this.enabled)return;if(!this.wasMoved&&e){this.onFirstMove.push(this.emitWheel.bind(this,t,e));return}const n=e?this.intersection:this.wheelIntersection;n!=null&&Fn(new Zu(t,this,n,this.getCamera()))}exit(t){var e;this.wasMoved&&(this.pointerCapture!=null&&((e=this.parentReleasePointerCapture)==null||e.call(this),this.pointerCapture=void 0),this.intersection=void 0,this.commit(t,!1)),this.onFirstMove.length=0,this.wasMoved=!1}};function Zx(r,t,e,n){if(r==null)return;const i=e.indexOf(r);i!=-1?e.splice(i,1):n.push(r),t.push(r),Zx(r.parent,t,e,n)}function jI(r,t,e,n,i){if(t==null)return!1;const s=t.get(e);return!(s==null||n-s>i||s!=r.get(e))}const da=new vn,Xd=new vn,Oy=new at,Uy=new at,Fy=new at,$d=new L,ZI=new jt,Cc=new L;function JI(r,t,e){Cc.copy(t).applyMatrix4(ZI.copy(e.matrixWorld).invert());const n=e.geometry.attributes.uv;if(n==null||!(n instanceof Te))return!1;let i;return KI(e,(s,o,a)=>{e.getVertexPosition(s,da.a),e.getVertexPosition(o,da.b),e.getVertexPosition(a,da.c);const l=da.closestPointToPoint(Cc,$d).distanceTo(Cc);i!=null&&l>=i||(i=l,Xd.copy(da),Oy.fromBufferAttribute(n,s),Uy.fromBufferAttribute(n,o),Fy.fromBufferAttribute(n,a))}),i==null?!1:(Xd.closestPointToPoint(Cc,$d),Xd.getInterpolation($d,Oy,Uy,Fy,r),!0)}function KI(r,t){const e=r.geometry.drawRange;if(r.geometry.index!=null){const o=r.geometry.index,a=Math.max(0,e.start),l=Math.min(o.count,e.start+e.count);for(let c=a;c<l;c+=3)t(o.getX(c),o.getX(c+1),o.getX(c+2));return}const n=r.geometry.attributes.position;if(n==null)return;const i=Math.max(0,e.start),s=Math.min(n.count,e.start+e.count);for(let o=i;o<s;o+=3)t(o,o+1,o+2)}new jt;new bx;new L;new Hn;new Xi;new at;new L(0,0,0),new L(0,0,1);const By=new jt,QI=new L;new L(0,0,-1);new Hn;const zy=new at,tN=new L;class eN{constructor(t,e){Yt(this,"prepareTransformation");Yt(this,"options");Yt(this,"raycaster",new jp);Yt(this,"cameraQuaternion",new cn);Yt(this,"fromPosition",new L);Yt(this,"fromQuaternion",new cn);Yt(this,"coords",new at);Yt(this,"viewPlane",new Hn);Yt(this,"intersects",[]);Yt(this,"pointerEventsOrders",[]);this.prepareTransformation=t,this.options=e}isReady(){return!0}intersectPointerCapture({intersection:t,object:e},n){const i=t.details;if(i.type!="screen-ray")throw new Error('unable to process a pointer capture of type "'.concat(t.details.type,'" with a camera ray intersector'));if(!this.startIntersection(n))return t;this.viewPlane.constant-=i.distanceViewPlane;const s=this.raycaster.ray.intersectPlane(this.viewPlane,new L);if(s==null)return t;t.object.updateWorldMatrix(!0,!1),VI(this.viewPlane,t,t.object.matrixWorld);let o=t.uv;return t.object instanceof Ue&&JI(zy,s,t.object)&&(o=zy.clone()),{...t,details:{...i,direction:this.raycaster.ray.direction.clone(),screenPoint:this.coords.clone()},uv:o,object:e,point:s,pointOnFace:s,pointerPosition:this.raycaster.ray.origin.clone(),pointerQuaternion:this.cameraQuaternion.clone()}}startIntersection(t){const e=this.prepareTransformation(t,this.coords);return e==null?!1:(e.updateWorldMatrix(!0,!1),e.matrixWorld.decompose(this.fromPosition,this.fromQuaternion,QI),this.raycaster.setFromCamera(this.coords,e),this.viewPlane.setFromNormalAndCoplanarPoint(e.getWorldDirection(tN),this.raycaster.ray.origin),!0)}executeIntersection(t,e){const n=this.intersects.length;t.raycast(this.raycaster,this.intersects),YI(this.pointerEventsOrders,e,this.intersects.length-n)}finalizeIntersection(t){const e=this.fromPosition.clone(),n=this.cameraQuaternion.clone(),i=this.raycaster.ray.direction.clone(),s=WI(this.intersects,this.pointerEventsOrders,this.options),o=s==null?void 0:this.intersects[s];return this.intersects.length=0,this.pointerEventsOrders.length=0,o==null?$I(t,this.raycaster.ray,(a,l)=>({type:"screen-ray",distanceViewPlane:l,screenPoint:this.coords.clone(),direction:i}),e,n):(o.object.updateWorldMatrix(!0,!1),By.copy(o.object.matrixWorld).invert(),Object.assign(o,{details:{type:"screen-ray",distanceViewPlane:this.viewPlane.distanceToPoint(o.point),screenPoint:this.coords.clone(),direction:i},pointOnFace:o.point,pointerPosition:e,pointerQuaternion:n,localPoint:o.point.clone().applyMatrix4(By)}))}}new L;new at;new jt;new L;new Hn;new un;new L;new L;new L;new L(1e-4,1e-4,1e-4);new jt;let nN=23412;function iN(){return nN++}function rN(r,t,e){if(!(t instanceof globalThis.MouseEvent))return e.set(0,0);const{width:n,height:i,top:s,left:o}=r.getBoundingClientRect(),a=t.clientX-o,l=t.clientY-s;return e.set(a/n*2-1,-(l/i)*2+1)}function sN(r,t,e,n){return oN(r,typeof t=="function"?t:()=>t,e,rN.bind(null,r),r.setPointerCapture.bind(r),i=>{r.hasPointerCapture(i)&&r.releasePointerCapture(i)},{pointerTypePrefix:"screen-",...n})}function oN(r,t,e,n,i,s,o={}){var E,x;const a=(E=o==null?void 0:o.forwardPointerCapture)!=null?E:!0,l=new Map,c=(x=o.pointerTypePrefix)!=null?x:"forward-",u=(v,_)=>{let T=l.get(v.pointerId);return T!=null||(T=new qI(iN(),"".concat(c).concat(v.pointerType),v.pointerState,new eN((I,B)=>(n(I,B),t()),o),t,void 0,a?i.bind(null,v.pointerId):void 0,a?s.bind(null,v.pointerId):void 0,o),_!="move"&&_!="wheel"&&(T.setIntersection(T.computeIntersection("pointer",e,v)),T.commit(v,!1)),l.set(v.pointerId,T)),T},h=new Map,d=new Map,f=[],p=[],y=(v,_,T)=>{switch(v){case"move":T.move(e,_);return;case"wheel":T.wheel(e,_);return;case"cancel":T.cancel(_);return;case"down":if(!ky(_))return;T.down(_);return;case"up":if(!ky(_))return;T.up(_);return;case"exit":d.delete(T),h.delete(T),T.exit(_);return}},m=(v,_)=>{var I;const T=u(_,v);v==="move"&&d.set(T,_),v==="wheel"&&h.set(T,_),(I=o.batchEvents)==null||I?p.push({type:v,event:_}):y(v,_,T)},g=m.bind(null,"move"),w=m.bind(null,"cancel"),b=m.bind(null,"down"),M=m.bind(null,"up"),A=m.bind(null,"wheel"),S=m.bind(null,"exit");return r.addEventListener("pointermove",g),r.addEventListener("pointercancel",w),r.addEventListener("pointerdown",b),r.addEventListener("pointerup",M),r.addEventListener("wheel",A),r.addEventListener("pointerleave",S),{destroy(){r.removeEventListener("pointermove",g),r.removeEventListener("pointercancel",w),r.removeEventListener("pointerdown",b),r.removeEventListener("pointerup",M),r.removeEventListener("wheel",A),r.removeEventListener("pointerleave",S),d.clear(),h.clear()},update(){var _;const v=p.length;for(let T=0;T<v;T++){const{type:I,event:B}=p[T],V=u(B,I);if(I==="move"&&(f.push(V),d.get(V)!=B)){V.emitMove(B);continue}if(I==="wheel"&&h.get(V)!=B){V.emitWheel(B);continue}y(I,B,V)}if(p.length=0,(_=o.intersectEveryFrame)!=null?_:!1)for(const[T,I]of d.entries())f.includes(T)||T.move(e,I);f.length=0}}}function ky(r){return r.button!=null}function aN({canvas:r,contextParts:{scene:t,camera:e,renderer:n}}){const{update:i,destroy:s}=sN(ye(r),()=>ye(e.activeCamera),t.value),{off:o}=n.loop.onLoop(i);As(s),As(o);const a=qx(t.value),l=il();return a.addEventListener("click",l.trigger),{onPointerMissed:l.on}}const lN="useTres",[cN,uN]=E2(({scene:r,canvas:t,windowSize:e,rendererOptions:n})=>{const i=rn(r),s=OI(e,t),o=NI({sizes:s}),a=DI({scene:i,canvas:t,options:n,contextParts:{sizes:s,camera:o}}),l=aN({canvas:t,contextParts:{scene:i,camera:o,renderer:a}}),c={sizes:s,scene:i,camera:o,renderer:a,controls:tn(null),extend:zf,events:l};return c.scene.value.__tres={root:c},c},{injectionKey:"useTres"}),rm=()=>{const r=uN();if(!r)throw new Error("useTresContext must be used together with useTresContextProvider.\n You probably tried to use it above or on the same level as a TresCanvas component.\n It should be used in child components of a TresCanvas instance.");return r};function Fh(){const{scene:r,renderer:t,camera:e,sizes:n,controls:i,extend:s,events:o}=rm();return{scene:r,renderer:t.instance,camera:e.activeCamera,sizes:n,controls:i,extend:s,events:o,invalidate:t.invalidate,advance:t.advance}}const Jx=()=>{const r=Fh(),{renderer:t}=rm(),e=Ny(),n=Ny();t.loop.onBeforeLoop(s=>{e.trigger({...r,...s})}),t.loop.onLoop(s=>{n.trigger({...r,...s})});const i=t.replaceRenderFunction;return{stop:t.loop.stop,start:t.loop.start,isActive:t.loop.isActive,onBeforeRender:e.on,onRender:n.on,render:i}};function hN(r,t={},e={}){let n=r;const i=a=>{n=a};let s=new Proxy({},{});const o={has(a,l){return l in t||l in n},get(a,l,c){return l in t?t[l](n):n[l]},set(a,l,c){return e[l]?e[l](c,n,s,i):n[l]=c,!0}};return s=new Proxy({},o),s}const dN=["onClick","onContextmenu","onPointermove","onPointerenter","onPointerleave","onPointerover","onPointerout","onDblclick","onPointerdown","onPointerup","onPointercancel","onLostpointercapture","onWheel"],fN={onClick:"click",onContextmenu:"contextmenu",onPointermove:"pointermove",onPointerenter:"pointerenter",onPointerleave:"pointerleave",onPointerover:"pointerover",onPointerout:"pointerout",onDblclick:"dblclick",onPointerdown:"pointerdown",onPointerup:"pointerup",onPointercancel:"pointercancel",onLostpointercapture:"lostpointercapture",onWheel:"wheel"},Vy=r=>dN.includes(r),pN=r=>{const t=r.scene.value;function e(u,h,d,f){if(f||(f={}),f.args||(f.args=[]),mI(u))return null;u.includes("-")&&(u=u.replace(/-([a-z])/g,(m,g)=>g.toUpperCase()).replace(/^[a-z]/,m=>m.toUpperCase()));let p=u.replace("Tres",""),y;if(u==="primitive"){(!em(f.object)||xs(f.object))&&Cy("Tres primitives need an 'object' prop, whose value is an object or shallowRef<object>"),p=f.object.type;const m={};y=hN(f.object,{object:g=>g,isPrimitive:()=>!0,__tres:()=>m},{object:(g,w,b,M)=>{II(g,b,M,{patchProp:s,remove:i,insert:n},r)},__tres:g=>{Object.assign(m,g)}})}else{const m=Bf.value[p];m||Cy("".concat(p," is not defined on the THREE namespace. Use extend to add it to the catalog.")),y=new m(...f.args)}return y?(So(y)&&(f!=null&&f.position||y.position.set(3,3,3),f!=null&&f.lookAt||y.lookAt(0,0,0)),y=hs(y,{...TI(y)?y.__tres:{},type:p,memoizedProps:f,primitive:u==="primitive",attach:f.attach},r),y):null}function n(u,h){var p;if(!u)return;h=h||t;const d=u.__tres?u:hs(u,{},r),f=h.__tres?h:hs(h,{},r);u=zo(d),h=zo(f),So(u)&&((p=r.camera)==null||p.registerCamera(u)),d.__tres.attach?CI(f,d,d.__tres.attach):Of(u)&&Of(f)&&(f.add(u),u.dispatchEvent({type:"added"})),d.__tres.parent=f,f.__tres.objects&&!f.__tres.objects.includes(d)&&f.__tres.objects.push(d)}function i(u,h){var y,m;if(!u)return;h=Df(h)?"default":h;const d=(y=u.__tres)==null?void 0:y.dispose;Df(d)||(d===null?h=!1:h=d);const f=(m=u.__tres)==null?void 0:m.primitive,p=h==="default"?!f:!!h;if(u.__tres&&"objects"in u.__tres&&[...u.__tres.objects].forEach(g=>i(g,h)),p&&u.children&&[...u.children].forEach(g=>i(g,h)),Wx(u,r),Xx(u,r),p&&!Hx(u)){if(fs(h))h(u);else if(fs(u.dispose))try{u.dispose()}catch(g){}}"__tres"in u&&delete u.__tres}function s(u,h,d,f){var b,M;if(!u)return;let p=u;const y=h;if(u.__tres&&(u.__tres.memoizedProps[h]=f),h==="attach"){const A=((b=u.__tres)==null?void 0:b.parent)||u.parent;i(u),hs(u,{attach:f},r),A&&n(u,A);return}if(h==="dispose"){u.__tres||(u=hs(u,{},r)),u.__tres.dispose=f;return}Vy(h)&&fs(f)&&u.addEventListener(fN[h],f);let m=Ey(y),g=p==null?void 0:p[m];if(y==="args"){const A=u,S=d!=null?d:[],E=f!=null?f:[],x=((M=u.__tres)==null?void 0:M.type)||u.type;if(x&&S.length&&!Lx(S,E)){const v=new Bf.value[x](...f),_=Object.getOwnPropertyDescriptors(v);Object.entries(_).forEach(([T,I])=>{if(!(!I.writable&&!I.set)&&T in A)try{A[T]=v[T]}catch(B){console.warn("Could not set property ".concat(T," on ").concat(x,":"),B)}}),p=A}return}if(p.type==="BufferGeometry"){if(y==="args")return;p.setAttribute(Ey(y),new Te(...f));return}if(y.includes("-")&&g===void 0){const A=ju(p,y);if(g=A.target,p=A.target,m=A.key,g&&m){g[m]=f,So(u)&&u.updateProjectionMatrix(),Ff(u);return}}let w=f;if(w===""&&(w=!0),fs(g)){Vy(h)||(Array.isArray(w)?u[m](...w):u[m](w)),m.startsWith("on")&&fs(w)&&(p[m]=w);return}Ay(g)&&Ay(w)?g.mask=w.mask:Bx(g)&&vI(w)?g.set(w):bI(g)&&MI(w)&&g.constructor===w.constructor?g.copy(w):Uf(g)&&Array.isArray(w)?"fromArray"in g&&typeof g.fromArray=="function"?g.fromArray(w):g.set(...w):Uf(g)&&typeof w=="number"?"setScalar"in g&&typeof g.setScalar=="function"?g.setScalar(w):g.set(w):p[m]=w,So(u)&&u.updateProjectionMatrix(),Ff(u)}function o(u){var h;return((h=u==null?void 0:u.__tres)==null?void 0:h.parent)||null}function a(u){const h=hs(new de,{type:"Comment"},r);return h.name=u,h}function l(u){var f,p;const h=((p=(f=o(u))==null?void 0:f.__tres)==null?void 0:p.objects)||[],d=h.indexOf(u);return d<0||d>=h.length-1?null:h[d+1]}const c=()=>{};return{insert:n,remove:i,createElement:e,patchProp:s,parentNode:o,createText:c,createComment:a,setText:c,setElementText:c,nextSibling:l,querySelector:c,setScopeId:c,cloneNode:c,insertStaticContent:c}},mN=["asset-load"];class gN{constructor(){Yt(this,"subscribers",new Set);Yt(this,"messageQueue",[]);Yt(this,"maxQueueSize",100)}send(t,e){const n={type:t,data:e,timestamp:Date.now()};this.subscribers.size>0?this.subscribers.forEach(i=>i(n)):mN.includes(t)&&this.queueMessage(n)}queueMessage(t){this.messageQueue.push(t),this.messageQueue.length>this.maxQueueSize&&this.messageQueue.shift()}flushQueue(){this.messageQueue.length===0||this.subscribers.size===0||(this.messageQueue.forEach(t=>{this.subscribers.forEach(e=>e(t))}),this.messageQueue=[])}subscribe(t){return this.subscribers.add(t),this.flushQueue(),()=>{this.subscribers.delete(t)}}get hasSubscribers(){return this.subscribers.size>0}get queueSize(){return this.messageQueue.length}clearQueue(){this.messageQueue=[]}}var yN=Object.create,Kx=Object.defineProperty,_N=Object.getOwnPropertyDescriptor,sm=Object.getOwnPropertyNames,vN=Object.getPrototypeOf,xN=Object.prototype.hasOwnProperty,bN=(r,t)=>function(){return r&&(t=(0,r[sm(r)[0]])(r=0)),t},MN=(r,t)=>function(){return t||(0,r[sm(r)[0]])((t={exports:{}}).exports,t),t.exports},SN=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of sm(t))!xN.call(r,i)&&i!==e&&Kx(r,i,{get:()=>t[i],enumerable:!(n=_N(t,i))||n.enumerable});return r},wN=(r,t,e)=>(e=r!=null?yN(vN(r)):{},SN(Kx(e,"default",{value:r,enumerable:!0}),r)),wl=bN({"../../node_modules/.pnpm/tsup@8.4.0_@microsoft+api-extractor@7.51.1_@types+node@22.13.14__jiti@2.4.2_postcss@8.5_96eb05a9d65343021e53791dd83f3773/node_modules/tsup/assets/esm_shims.js"(){}}),TN=MN({"../../node_modules/.pnpm/rfdc@1.4.1/node_modules/rfdc/index.js"(r,t){wl(),t.exports=n;function e(s){return s instanceof Buffer?Buffer.from(s):new s.constructor(s.buffer.slice(),s.byteOffset,s.length)}function n(s){if(s=s||{},s.circles)return i(s);const o=new Map;if(o.set(Date,h=>new Date(h)),o.set(Map,(h,d)=>new Map(l(Array.from(h),d))),o.set(Set,(h,d)=>new Set(l(Array.from(h),d))),s.constructorHandlers)for(const h of s.constructorHandlers)o.set(h[0],h[1]);let a=null;return s.proto?u:c;function l(h,d){const f=Object.keys(h),p=new Array(f.length);for(let y=0;y<f.length;y++){const m=f[y],g=h[m];typeof g!="object"||g===null?p[m]=g:g.constructor!==Object&&(a=o.get(g.constructor))?p[m]=a(g,d):ArrayBuffer.isView(g)?p[m]=e(g):p[m]=d(g)}return p}function c(h){if(typeof h!="object"||h===null)return h;if(Array.isArray(h))return l(h,c);if(h.constructor!==Object&&(a=o.get(h.constructor)))return a(h,c);const d={};for(const f in h){if(Object.hasOwnProperty.call(h,f)===!1)continue;const p=h[f];typeof p!="object"||p===null?d[f]=p:p.constructor!==Object&&(a=o.get(p.constructor))?d[f]=a(p,c):ArrayBuffer.isView(p)?d[f]=e(p):d[f]=c(p)}return d}function u(h){if(typeof h!="object"||h===null)return h;if(Array.isArray(h))return l(h,u);if(h.constructor!==Object&&(a=o.get(h.constructor)))return a(h,u);const d={};for(const f in h){const p=h[f];typeof p!="object"||p===null?d[f]=p:p.constructor!==Object&&(a=o.get(p.constructor))?d[f]=a(p,u):ArrayBuffer.isView(p)?d[f]=e(p):d[f]=u(p)}return d}}function i(s){const o=[],a=[],l=new Map;if(l.set(Date,f=>new Date(f)),l.set(Map,(f,p)=>new Map(u(Array.from(f),p))),l.set(Set,(f,p)=>new Set(u(Array.from(f),p))),s.constructorHandlers)for(const f of s.constructorHandlers)l.set(f[0],f[1]);let c=null;return s.proto?d:h;function u(f,p){const y=Object.keys(f),m=new Array(y.length);for(let g=0;g<y.length;g++){const w=y[g],b=f[w];if(typeof b!="object"||b===null)m[w]=b;else if(b.constructor!==Object&&(c=l.get(b.constructor)))m[w]=c(b,p);else if(ArrayBuffer.isView(b))m[w]=e(b);else{const M=o.indexOf(b);M!==-1?m[w]=a[M]:m[w]=p(b)}}return m}function h(f){if(typeof f!="object"||f===null)return f;if(Array.isArray(f))return u(f,h);if(f.constructor!==Object&&(c=l.get(f.constructor)))return c(f,h);const p={};o.push(f),a.push(p);for(const y in f){if(Object.hasOwnProperty.call(f,y)===!1)continue;const m=f[y];if(typeof m!="object"||m===null)p[y]=m;else if(m.constructor!==Object&&(c=l.get(m.constructor)))p[y]=c(m,h);else if(ArrayBuffer.isView(m))p[y]=e(m);else{const g=o.indexOf(m);g!==-1?p[y]=a[g]:p[y]=h(m)}}return o.pop(),a.pop(),p}function d(f){if(typeof f!="object"||f===null)return f;if(Array.isArray(f))return u(f,d);if(f.constructor!==Object&&(c=l.get(f.constructor)))return c(f,d);const p={};o.push(f),a.push(p);for(const y in f){const m=f[y];if(typeof m!="object"||m===null)p[y]=m;else if(m.constructor!==Object&&(c=l.get(m.constructor)))p[y]=c(m,d);else if(ArrayBuffer.isView(m))p[y]=e(m);else{const g=o.indexOf(m);g!==-1?p[y]=a[g]:p[y]=d(m)}}return o.pop(),a.pop(),p}}}});wl();wl();wl();var Qx=typeof navigator<"u",Ut=typeof window<"u"?window:typeof globalThis<"u"?globalThis:typeof global<"u"?global:{};typeof Ut.chrome<"u"&&Ut.chrome.devtools;Qx&&(Ut.self,Ut.top);var Hy;typeof navigator<"u"&&((Hy=navigator.userAgent)==null||Hy.toLowerCase().includes("electron"));wl();var EN=wN(TN()),AN=/(?:^|[-_/])(\w)/g;function CN(r,t){return t?t.toUpperCase():""}function RN(r){return r&&"".concat(r).replace(AN,CN)}function IN(r,t){let e=r.replace(/^[a-z]:/i,"").replace(/\\/g,"/");e.endsWith("index".concat(t))&&(e=e.replace("/index".concat(t),t));const n=e.lastIndexOf("/"),i=e.substring(n+1);{const s=i.lastIndexOf(t);return i.substring(0,s)}}var Gy=(0,EN.default)({circles:!0});const NN={trailing:!0};function ko(r,t=25,e={}){if(e={...NN,...e},!Number.isFinite(t))throw new TypeError("Expected `wait` to be a finite number");let n,i,s=[],o,a;const l=(c,u)=>(o=PN(r,c,u),o.finally(()=>{if(o=null,e.trailing&&a&&!i){const h=l(c,a);return a=null,h}}),o);return function(...c){return o?(e.trailing&&(a=c),o):new Promise(u=>{const h=!i&&e.leading;clearTimeout(i),i=setTimeout(()=>{i=null;const d=e.leading?n:l(this,c);for(const f of s)f(d);s=[]},t),h?(n=l(this,c),u(n)):s.push(u)})}}async function PN(r,t,e){return await r.apply(t,e)}function kf(r,t={},e){for(const n in r){const i=r[n],s=e?"".concat(e,":").concat(n):n;typeof i=="object"&&i!==null?kf(i,t,s):typeof i=="function"&&(t[s]=i)}return t}const LN={run:r=>r()},DN=()=>LN,tb=typeof console.createTask<"u"?console.createTask:DN;function ON(r,t){const e=t.shift(),n=tb(e);return r.reduce((i,s)=>i.then(()=>n.run(()=>s(...t))),Promise.resolve())}function UN(r,t){const e=t.shift(),n=tb(e);return Promise.all(r.map(i=>n.run(()=>i(...t))))}function Yd(r,t){for(const e of[...r])e(t)}class FN{constructor(){this._hooks={},this._before=void 0,this._after=void 0,this._deprecatedMessages=void 0,this._deprecatedHooks={},this.hook=this.hook.bind(this),this.callHook=this.callHook.bind(this),this.callHookWith=this.callHookWith.bind(this)}hook(t,e,n={}){if(!t||typeof e!="function")return()=>{};const i=t;let s;for(;this._deprecatedHooks[t];)s=this._deprecatedHooks[t],t=s.to;if(s&&!n.allowDeprecated){let o=s.message;o||(o="".concat(i," hook has been deprecated")+(s.to?", please use ".concat(s.to):"")),this._deprecatedMessages||(this._deprecatedMessages=new Set),this._deprecatedMessages.has(o)||(console.warn(o),this._deprecatedMessages.add(o))}if(!e.name)try{Object.defineProperty(e,"name",{get:()=>"_"+t.replace(/\W+/g,"_")+"_hook_cb",configurable:!0})}catch(o){}return this._hooks[t]=this._hooks[t]||[],this._hooks[t].push(e),()=>{e&&(this.removeHook(t,e),e=void 0)}}hookOnce(t,e){let n,i=(...s)=>(typeof n=="function"&&n(),n=void 0,i=void 0,e(...s));return n=this.hook(t,i),n}removeHook(t,e){if(this._hooks[t]){const n=this._hooks[t].indexOf(e);n!==-1&&this._hooks[t].splice(n,1),this._hooks[t].length===0&&delete this._hooks[t]}}deprecateHook(t,e){this._deprecatedHooks[t]=typeof e=="string"?{to:e}:e;const n=this._hooks[t]||[];delete this._hooks[t];for(const i of n)this.hook(t,i)}deprecateHooks(t){Object.assign(this._deprecatedHooks,t);for(const e in t)this.deprecateHook(e,t[e])}addHooks(t){const e=kf(t),n=Object.keys(e).map(i=>this.hook(i,e[i]));return()=>{for(const i of n.splice(0,n.length))i()}}removeHooks(t){const e=kf(t);for(const n in e)this.removeHook(n,e[n])}removeAllHooks(){for(const t in this._hooks)delete this._hooks[t]}callHook(t,...e){return e.unshift(t),this.callHookWith(ON,t,...e)}callHookParallel(t,...e){return e.unshift(t),this.callHookWith(UN,t,...e)}callHookWith(t,e,...n){const i=this._before||this._after?{name:e,args:n,context:{}}:void 0;this._before&&Yd(this._before,i);const s=t(e in this._hooks?[...this._hooks[e]]:[],n);return s instanceof Promise?s.finally(()=>{this._after&&i&&Yd(this._after,i)}):(this._after&&i&&Yd(this._after,i),s)}beforeEach(t){return this._before=this._before||[],this._before.push(t),()=>{if(this._before!==void 0){const e=this._before.indexOf(t);e!==-1&&this._before.splice(e,1)}}}afterEach(t){return this._after=this._after||[],this._after.push(t),()=>{if(this._after!==void 0){const e=this._after.indexOf(t);e!==-1&&this._after.splice(e,1)}}}}function eb(){return new FN}var BN=Object.create,nb=Object.defineProperty,zN=Object.getOwnPropertyDescriptor,om=Object.getOwnPropertyNames,kN=Object.getPrototypeOf,VN=Object.prototype.hasOwnProperty,HN=(r,t)=>function(){return r&&(t=(0,r[om(r)[0]])(r=0)),t},ib=(r,t)=>function(){return t||(0,r[om(r)[0]])((t={exports:{}}).exports,t),t.exports},GN=(r,t,e,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of om(t))!VN.call(r,i)&&i!==e&&nb(r,i,{get:()=>t[i],enumerable:!(n=zN(t,i))||n.enumerable});return r},WN=(r,t,e)=>(e=r!=null?BN(kN(r)):{},GN(nb(e,"default",{value:r,enumerable:!0}),r)),vt=HN({"../../node_modules/.pnpm/tsup@8.4.0_@microsoft+api-extractor@7.51.1_@types+node@22.13.14__jiti@2.4.2_postcss@8.5_96eb05a9d65343021e53791dd83f3773/node_modules/tsup/assets/esm_shims.js"(){}}),XN=ib({"../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/lib/speakingurl.js"(r,t){vt(),function(e){var n={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"Ae",Å:"A",Æ:"AE",Ç:"C",È:"E",É:"E",Ê:"E",Ë:"E",Ì:"I",Í:"I",Î:"I",Ï:"I",Ð:"D",Ñ:"N",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"Oe",Ő:"O",Ø:"O",Ù:"U",Ú:"U",Û:"U",Ü:"Ue",Ű:"U",Ý:"Y",Þ:"TH",ß:"ss",à:"a",á:"a",â:"a",ã:"a",ä:"ae",å:"a",æ:"ae",ç:"c",è:"e",é:"e",ê:"e",ë:"e",ì:"i",í:"i",î:"i",ï:"i",ð:"d",ñ:"n",ò:"o",ó:"o",ô:"o",õ:"o",ö:"oe",ő:"o",ø:"o",ù:"u",ú:"u",û:"u",ü:"ue",ű:"u",ý:"y",þ:"th",ÿ:"y","ẞ":"SS",ا:"a",أ:"a",إ:"i",آ:"aa",ؤ:"u",ئ:"e",ء:"a",ب:"b",ت:"t",ث:"th",ج:"j",ح:"h",خ:"kh",د:"d",ذ:"th",ر:"r",ز:"z",س:"s",ش:"sh",ص:"s",ض:"dh",ط:"t",ظ:"z",ع:"a",غ:"gh",ف:"f",ق:"q",ك:"k",ل:"l",م:"m",ن:"n",ه:"h",و:"w",ي:"y",ى:"a",ة:"h",ﻻ:"la",ﻷ:"laa",ﻹ:"lai",ﻵ:"laa",گ:"g",چ:"ch",پ:"p",ژ:"zh",ک:"k",ی:"y","َ":"a","ً":"an","ِ":"e","ٍ":"en","ُ":"u","ٌ":"on","ْ":"","٠":"0","١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","۰":"0","۱":"1","۲":"2","۳":"3","۴":"4","۵":"5","۶":"6","۷":"7","۸":"8","۹":"9",က:"k",ခ:"kh",ဂ:"g",ဃ:"ga",င:"ng",စ:"s",ဆ:"sa",ဇ:"z","စျ":"za",ည:"ny",ဋ:"t",ဌ:"ta",ဍ:"d",ဎ:"da",ဏ:"na",တ:"t",ထ:"ta",ဒ:"d",ဓ:"da",န:"n",ပ:"p",ဖ:"pa",ဗ:"b",ဘ:"ba",မ:"m",ယ:"y",ရ:"ya",လ:"l",ဝ:"w",သ:"th",ဟ:"h",ဠ:"la",အ:"a","ြ":"y","ျ":"ya","ွ":"w","ြွ":"yw","ျွ":"ywa","ှ":"h",ဧ:"e","၏":"-e",ဣ:"i",ဤ:"-i",ဉ:"u",ဦ:"-u",ဩ:"aw","သြော":"aw",ဪ:"aw","၀":"0","၁":"1","၂":"2","၃":"3","၄":"4","၅":"5","၆":"6","၇":"7","၈":"8","၉":"9","္":"","့":"","း":"",č:"c",ď:"d",ě:"e",ň:"n",ř:"r",š:"s",ť:"t",ů:"u",ž:"z",Č:"C",Ď:"D",Ě:"E",Ň:"N",Ř:"R",Š:"S",Ť:"T",Ů:"U",Ž:"Z",ހ:"h",ށ:"sh",ނ:"n",ރ:"r",ބ:"b",ޅ:"lh",ކ:"k",އ:"a",ވ:"v",މ:"m",ފ:"f",ދ:"dh",ތ:"th",ލ:"l",ގ:"g",ޏ:"gn",ސ:"s",ޑ:"d",ޒ:"z",ޓ:"t",ޔ:"y",ޕ:"p",ޖ:"j",ޗ:"ch",ޘ:"tt",ޙ:"hh",ޚ:"kh",ޛ:"th",ޜ:"z",ޝ:"sh",ޞ:"s",ޟ:"d",ޠ:"t",ޡ:"z",ޢ:"a",ޣ:"gh",ޤ:"q",ޥ:"w","ަ":"a","ާ":"aa","ި":"i","ީ":"ee","ު":"u","ޫ":"oo","ެ":"e","ޭ":"ey","ޮ":"o","ޯ":"oa","ް":"",ა:"a",ბ:"b",გ:"g",დ:"d",ე:"e",ვ:"v",ზ:"z",თ:"t",ი:"i",კ:"k",ლ:"l",მ:"m",ნ:"n",ო:"o",პ:"p",ჟ:"zh",რ:"r",ს:"s",ტ:"t",უ:"u",ფ:"p",ქ:"k",ღ:"gh",ყ:"q",შ:"sh",ჩ:"ch",ც:"ts",ძ:"dz",წ:"ts",ჭ:"ch",ხ:"kh",ჯ:"j",ჰ:"h",α:"a",β:"v",γ:"g",δ:"d",ε:"e",ζ:"z",η:"i",θ:"th",ι:"i",κ:"k",λ:"l",μ:"m",ν:"n",ξ:"ks",ο:"o",π:"p",ρ:"r",σ:"s",τ:"t",υ:"y",φ:"f",χ:"x",ψ:"ps",ω:"o",ά:"a",έ:"e",ί:"i",ό:"o",ύ:"y",ή:"i",ώ:"o",ς:"s",ϊ:"i",ΰ:"y",ϋ:"y",ΐ:"i",Α:"A",Β:"B",Γ:"G",Δ:"D",Ε:"E",Ζ:"Z",Η:"I",Θ:"TH",Ι:"I",Κ:"K",Λ:"L",Μ:"M",Ν:"N",Ξ:"KS",Ο:"O",Π:"P",Ρ:"R",Σ:"S",Τ:"T",Υ:"Y",Φ:"F",Χ:"X",Ψ:"PS",Ω:"O",Ά:"A",Έ:"E",Ί:"I",Ό:"O",Ύ:"Y",Ή:"I",Ώ:"O",Ϊ:"I",Ϋ:"Y",ā:"a",ē:"e",ģ:"g",ī:"i",ķ:"k",ļ:"l",ņ:"n",ū:"u",Ā:"A",Ē:"E",Ģ:"G",Ī:"I",Ķ:"k",Ļ:"L",Ņ:"N",Ū:"U",Ќ:"Kj",ќ:"kj",Љ:"Lj",љ:"lj",Њ:"Nj",њ:"nj",Тс:"Ts",тс:"ts",ą:"a",ć:"c",ę:"e",ł:"l",ń:"n",ś:"s",ź:"z",ż:"z",Ą:"A",Ć:"C",Ę:"E",Ł:"L",Ń:"N",Ś:"S",Ź:"Z",Ż:"Z",Є:"Ye",І:"I",Ї:"Yi",Ґ:"G",є:"ye",і:"i",ї:"yi",ґ:"g",ă:"a",Ă:"A",ș:"s",Ș:"S",ț:"t",Ț:"T",ţ:"t",Ţ:"T",а:"a",б:"b",в:"v",г:"g",д:"d",е:"e",ё:"yo",ж:"zh",з:"z",и:"i",й:"i",к:"k",л:"l",м:"m",н:"n",о:"o",п:"p",р:"r",с:"s",т:"t",у:"u",ф:"f",х:"kh",ц:"c",ч:"ch",ш:"sh",щ:"sh",ъ:"",ы:"y",ь:"",э:"e",ю:"yu",я:"ya",А:"A",Б:"B",В:"V",Г:"G",Д:"D",Е:"E",Ё:"Yo",Ж:"Zh",З:"Z",И:"I",Й:"I",К:"K",Л:"L",М:"M",Н:"N",О:"O",П:"P",Р:"R",С:"S",Т:"T",У:"U",Ф:"F",Х:"Kh",Ц:"C",Ч:"Ch",Ш:"Sh",Щ:"Sh",Ъ:"",Ы:"Y",Ь:"",Э:"E",Ю:"Yu",Я:"Ya",ђ:"dj",ј:"j",ћ:"c",џ:"dz",Ђ:"Dj",Ј:"j",Ћ:"C",Џ:"Dz",ľ:"l",ĺ:"l",ŕ:"r",Ľ:"L",Ĺ:"L",Ŕ:"R",ş:"s",Ş:"S",ı:"i",İ:"I",ğ:"g",Ğ:"G",ả:"a",Ả:"A",ẳ:"a",Ẳ:"A",ẩ:"a",Ẩ:"A",đ:"d",Đ:"D",ẹ:"e",Ẹ:"E",ẽ:"e",Ẽ:"E",ẻ:"e",Ẻ:"E",ế:"e",Ế:"E",ề:"e",Ề:"E",ệ:"e",Ệ:"E",ễ:"e",Ễ:"E",ể:"e",Ể:"E",ỏ:"o",ọ:"o",Ọ:"o",ố:"o",Ố:"O",ồ:"o",Ồ:"O",ổ:"o",Ổ:"O",ộ:"o",Ộ:"O",ỗ:"o",Ỗ:"O",ơ:"o",Ơ:"O",ớ:"o",Ớ:"O",ờ:"o",Ờ:"O",ợ:"o",Ợ:"O",ỡ:"o",Ỡ:"O",Ở:"o",ở:"o",ị:"i",Ị:"I",ĩ:"i",Ĩ:"I",ỉ:"i",Ỉ:"i",ủ:"u",Ủ:"U",ụ:"u",Ụ:"U",ũ:"u",Ũ:"U",ư:"u",Ư:"U",ứ:"u",Ứ:"U",ừ:"u",Ừ:"U",ự:"u",Ự:"U",ữ:"u",Ữ:"U",ử:"u",Ử:"ư",ỷ:"y",Ỷ:"y",ỳ:"y",Ỳ:"Y",ỵ:"y",Ỵ:"Y",ỹ:"y",Ỹ:"Y",ạ:"a",Ạ:"A",ấ:"a",Ấ:"A",ầ:"a",Ầ:"A",ậ:"a",Ậ:"A",ẫ:"a",Ẫ:"A",ắ:"a",Ắ:"A",ằ:"a",Ằ:"A",ặ:"a",Ặ:"A",ẵ:"a",Ẵ:"A","⓪":"0","①":"1","②":"2","③":"3","④":"4","⑤":"5","⑥":"6","⑦":"7","⑧":"8","⑨":"9","⑩":"10","⑪":"11","⑫":"12","⑬":"13","⑭":"14","⑮":"15","⑯":"16","⑰":"17","⑱":"18","⑲":"18","⑳":"18","⓵":"1","⓶":"2","⓷":"3","⓸":"4","⓹":"5","⓺":"6","⓻":"7","⓼":"8","⓽":"9","⓾":"10","⓿":"0","⓫":"11","⓬":"12","⓭":"13","⓮":"14","⓯":"15","⓰":"16","⓱":"17","⓲":"18","⓳":"19","⓴":"20","Ⓐ":"A","Ⓑ":"B","Ⓒ":"C","Ⓓ":"D","Ⓔ":"E","Ⓕ":"F","Ⓖ":"G","Ⓗ":"H","Ⓘ":"I","Ⓙ":"J","Ⓚ":"K","Ⓛ":"L","Ⓜ":"M","Ⓝ":"N","Ⓞ":"O","Ⓟ":"P","Ⓠ":"Q","Ⓡ":"R","Ⓢ":"S","Ⓣ":"T","Ⓤ":"U","Ⓥ":"V","Ⓦ":"W","Ⓧ":"X","Ⓨ":"Y","Ⓩ":"Z","ⓐ":"a","ⓑ":"b","ⓒ":"c","ⓓ":"d","ⓔ":"e","ⓕ":"f","ⓖ":"g","ⓗ":"h","ⓘ":"i","ⓙ":"j","ⓚ":"k","ⓛ":"l","ⓜ":"m","ⓝ":"n","ⓞ":"o","ⓟ":"p","ⓠ":"q","ⓡ":"r","ⓢ":"s","ⓣ":"t","ⓤ":"u","ⓦ":"v","ⓥ":"w","ⓧ":"x","ⓨ":"y","ⓩ":"z","“":'"',"”":'"',"‘":"'","’":"'","∂":"d",ƒ:"f","™":"(TM)","©":"(C)",œ:"oe",Œ:"OE","®":"(R)","†":"+","℠":"(SM)","…":"...","˚":"o",º:"o",ª:"a","•":"*","၊":",","။":".",$:"USD","€":"EUR","₢":"BRN","₣":"FRF","£":"GBP","₤":"ITL","₦":"NGN","₧":"ESP","₩":"KRW","₪":"ILS","₫":"VND","₭":"LAK","₮":"MNT","₯":"GRD","₱":"ARS","₲":"PYG","₳":"ARA","₴":"UAH","₵":"GHS","¢":"cent","¥":"CNY",元:"CNY",円:"YEN","﷼":"IRR","₠":"EWE","฿":"THB","₨":"INR","₹":"INR","₰":"PF","₺":"TRY","؋":"AFN","₼":"AZN",лв:"BGN","៛":"KHR","₡":"CRC","₸":"KZT",ден:"MKD",zł:"PLN","₽":"RUB","₾":"GEL"},i=["်","ް"],s={"ာ":"a","ါ":"a","ေ":"e","ဲ":"e","ိ":"i","ီ":"i","ို":"o","ု":"u","ူ":"u","ေါင်":"aung","ော":"aw","ော်":"aw","ေါ":"aw","ေါ်":"aw","်":"်","က်":"et","ိုက်":"aik","ောက်":"auk","င်":"in","ိုင်":"aing","ောင်":"aung","စ်":"it","ည်":"i","တ်":"at","ိတ်":"eik","ုတ်":"ok","ွတ်":"ut","ေတ်":"it","ဒ်":"d","ိုဒ်":"ok","ုဒ်":"ait","န်":"an","ာန်":"an","ိန်":"ein","ုန်":"on","ွန်":"un","ပ်":"at","ိပ်":"eik","ုပ်":"ok","ွပ်":"ut","န်ုပ်":"nub","မ်":"an","ိမ်":"ein","ုမ်":"on","ွမ်":"un","ယ်":"e","ိုလ်":"ol","ဉ်":"in","ံ":"an","ိံ":"ein","ုံ":"on","ައް":"ah","ަށް":"ah"},o={en:{},az:{ç:"c",ə:"e",ğ:"g",ı:"i",ö:"o",ş:"s",ü:"u",Ç:"C",Ə:"E",Ğ:"G",İ:"I",Ö:"O",Ş:"S",Ü:"U"},cs:{č:"c",ď:"d",ě:"e",ň:"n",ř:"r",š:"s",ť:"t",ů:"u",ž:"z",Č:"C",Ď:"D",Ě:"E",Ň:"N",Ř:"R",Š:"S",Ť:"T",Ů:"U",Ž:"Z"},fi:{ä:"a",Ä:"A",ö:"o",Ö:"O"},hu:{ä:"a",Ä:"A",ö:"o",Ö:"O",ü:"u",Ü:"U",ű:"u",Ű:"U"},lt:{ą:"a",č:"c",ę:"e",ė:"e",į:"i",š:"s",ų:"u",ū:"u",ž:"z",Ą:"A",Č:"C",Ę:"E",Ė:"E",Į:"I",Š:"S",Ų:"U",Ū:"U"},lv:{ā:"a",č:"c",ē:"e",ģ:"g",ī:"i",ķ:"k",ļ:"l",ņ:"n",š:"s",ū:"u",ž:"z",Ā:"A",Č:"C",Ē:"E",Ģ:"G",Ī:"i",Ķ:"k",Ļ:"L",Ņ:"N",Š:"S",Ū:"u",Ž:"Z"},pl:{ą:"a",ć:"c",ę:"e",ł:"l",ń:"n",ó:"o",ś:"s",ź:"z",ż:"z",Ą:"A",Ć:"C",Ę:"e",Ł:"L",Ń:"N",Ó:"O",Ś:"S",Ź:"Z",Ż:"Z"},sv:{ä:"a",Ä:"A",ö:"o",Ö:"O"},sk:{ä:"a",Ä:"A"},sr:{љ:"lj",њ:"nj",Љ:"Lj",Њ:"Nj",đ:"dj",Đ:"Dj"},tr:{Ü:"U",Ö:"O",ü:"u",ö:"o"}},a={ar:{"∆":"delta","∞":"la-nihaya","♥":"hob","&":"wa","|":"aw","<":"aqal-men",">":"akbar-men","∑":"majmou","¤":"omla"},az:{},ca:{"∆":"delta","∞":"infinit","♥":"amor","&":"i","|":"o","<":"menys que",">":"mes que","∑":"suma dels","¤":"moneda"},cs:{"∆":"delta","∞":"nekonecno","♥":"laska","&":"a","|":"nebo","<":"mensi nez",">":"vetsi nez","∑":"soucet","¤":"mena"},de:{"∆":"delta","∞":"unendlich","♥":"Liebe","&":"und","|":"oder","<":"kleiner als",">":"groesser als","∑":"Summe von","¤":"Waehrung"},dv:{"∆":"delta","∞":"kolunulaa","♥":"loabi","&":"aai","|":"noonee","<":"ah vure kuda",">":"ah vure bodu","∑":"jumula","¤":"faisaa"},en:{"∆":"delta","∞":"infinity","♥":"love","&":"and","|":"or","<":"less than",">":"greater than","∑":"sum","¤":"currency"},es:{"∆":"delta","∞":"infinito","♥":"amor","&":"y","|":"u","<":"menos que",">":"mas que","∑":"suma de los","¤":"moneda"},fa:{"∆":"delta","∞":"bi-nahayat","♥":"eshgh","&":"va","|":"ya","<":"kamtar-az",">":"bishtar-az","∑":"majmooe","¤":"vahed"},fi:{"∆":"delta","∞":"aarettomyys","♥":"rakkaus","&":"ja","|":"tai","<":"pienempi kuin",">":"suurempi kuin","∑":"summa","¤":"valuutta"},fr:{"∆":"delta","∞":"infiniment","♥":"Amour","&":"et","|":"ou","<":"moins que",">":"superieure a","∑":"somme des","¤":"monnaie"},ge:{"∆":"delta","∞":"usasruloba","♥":"siqvaruli","&":"da","|":"an","<":"naklebi",">":"meti","∑":"jami","¤":"valuta"},gr:{},hu:{"∆":"delta","∞":"vegtelen","♥":"szerelem","&":"es","|":"vagy","<":"kisebb mint",">":"nagyobb mint","∑":"szumma","¤":"penznem"},it:{"∆":"delta","∞":"infinito","♥":"amore","&":"e","|":"o","<":"minore di",">":"maggiore di","∑":"somma","¤":"moneta"},lt:{"∆":"delta","∞":"begalybe","♥":"meile","&":"ir","|":"ar","<":"maziau nei",">":"daugiau nei","∑":"suma","¤":"valiuta"},lv:{"∆":"delta","∞":"bezgaliba","♥":"milestiba","&":"un","|":"vai","<":"mazak neka",">":"lielaks neka","∑":"summa","¤":"valuta"},my:{"∆":"kwahkhyaet","∞":"asaonasme","♥":"akhyait","&":"nhin","|":"tho","<":"ngethaw",">":"kyithaw","∑":"paungld","¤":"ngwekye"},mk:{},nl:{"∆":"delta","∞":"oneindig","♥":"liefde","&":"en","|":"of","<":"kleiner dan",">":"groter dan","∑":"som","¤":"valuta"},pl:{"∆":"delta","∞":"nieskonczonosc","♥":"milosc","&":"i","|":"lub","<":"mniejsze niz",">":"wieksze niz","∑":"suma","¤":"waluta"},pt:{"∆":"delta","∞":"infinito","♥":"amor","&":"e","|":"ou","<":"menor que",">":"maior que","∑":"soma","¤":"moeda"},ro:{"∆":"delta","∞":"infinit","♥":"dragoste","&":"si","|":"sau","<":"mai mic ca",">":"mai mare ca","∑":"suma","¤":"valuta"},ru:{"∆":"delta","∞":"beskonechno","♥":"lubov","&":"i","|":"ili","<":"menshe",">":"bolshe","∑":"summa","¤":"valjuta"},sk:{"∆":"delta","∞":"nekonecno","♥":"laska","&":"a","|":"alebo","<":"menej ako",">":"viac ako","∑":"sucet","¤":"mena"},sr:{},tr:{"∆":"delta","∞":"sonsuzluk","♥":"ask","&":"ve","|":"veya","<":"kucuktur",">":"buyuktur","∑":"toplam","¤":"para birimi"},uk:{"∆":"delta","∞":"bezkinechnist","♥":"lubov","&":"i","|":"abo","<":"menshe",">":"bilshe","∑":"suma","¤":"valjuta"},vn:{"∆":"delta","∞":"vo cuc","♥":"yeu","&":"va","|":"hoac","<":"nho hon",">":"lon hon","∑":"tong","¤":"tien te"}},l=[";","?",":","@","&","=","+","$",",","/"].join(""),c=[";","?",":","@","&","=","+","$",","].join(""),u=[".","!","~","*","'","(",")"].join(""),h=function(y,m){var g="-",w="",b="",M=!0,A={},S,E,x,v,_,T,I,B,V,H,U,Q,W,lt,ut="";if(typeof y!="string")return"";if(typeof m=="string"&&(g=m),I=a.en,B=o.en,typeof m=="object"){S=m.maintainCase||!1,A=m.custom&&typeof m.custom=="object"?m.custom:A,x=+m.truncate>1&&m.truncate||!1,v=m.uric||!1,_=m.uricNoSlash||!1,T=m.mark||!1,M=!(m.symbols===!1||m.lang===!1),g=m.separator||g,v&&(ut+=l),_&&(ut+=c),T&&(ut+=u),I=m.lang&&a[m.lang]&&M?a[m.lang]:M?a.en:{},B=m.lang&&o[m.lang]?o[m.lang]:m.lang===!1||m.lang===!0?{}:o.en,m.titleCase&&typeof m.titleCase.length=="number"&&Array.prototype.toString.call(m.titleCase)?(m.titleCase.forEach(function(mt){A[mt+""]=mt+""}),E=!0):E=!!m.titleCase,m.custom&&typeof m.custom.length=="number"&&Array.prototype.toString.call(m.custom)&&m.custom.forEach(function(mt){A[mt+""]=mt+""}),Object.keys(A).forEach(function(mt){var Xt;mt.length>1?Xt=new RegExp("\\b"+f(mt)+"\\b","gi"):Xt=new RegExp(f(mt),"gi"),y=y.replace(Xt,A[mt])});for(U in A)ut+=U}for(ut+=g,ut=f(ut),y=y.replace(/(^\s+|\s+$)/g,""),W=!1,lt=!1,H=0,Q=y.length;H<Q;H++)U=y[H],p(U,A)?W=!1:B[U]?(U=W&&B[U].match(/[A-Za-z0-9]/)?" "+B[U]:B[U],W=!1):U in n?(H+1<Q&&i.indexOf(y[H+1])>=0?(b+=U,U=""):lt===!0?(U=s[b]+n[U],b=""):U=W&&n[U].match(/[A-Za-z0-9]/)?" "+n[U]:n[U],W=!1,lt=!1):U in s?(b+=U,U="",H===Q-1&&(U=s[b]),lt=!0):I[U]&&!(v&&l.indexOf(U)!==-1)&&!(_&&c.indexOf(U)!==-1)?(U=W||w.substr(-1).match(/[A-Za-z0-9]/)?g+I[U]:I[U],U+=y[H+1]!==void 0&&y[H+1].match(/[A-Za-z0-9]/)?g:"",W=!0):(lt===!0?(U=s[b]+U,b="",lt=!1):W&&(/[A-Za-z0-9]/.test(U)||w.substr(-1).match(/A-Za-z0-9]/))&&(U=" "+U),W=!1),w+=U.replace(new RegExp("[^\\w\\s"+ut+"_-]","g"),g);return E&&(w=w.replace(/(\w)(\S*)/g,function(mt,Xt,te){var qt=Xt.toUpperCase()+(te!==null?te:"");return Object.keys(A).indexOf(qt.toLowerCase())<0?qt:qt.toLowerCase()})),w=w.replace(/\s+/g,g).replace(new RegExp("\\"+g+"+","g"),g).replace(new RegExp("(^\\"+g+"+|\\"+g+"+$)","g"),""),x&&w.length>x&&(V=w.charAt(x)===g,w=w.slice(0,x),V||(w=w.slice(0,w.lastIndexOf(g)))),!S&&!E&&(w=w.toLowerCase()),w},d=function(y){return function(m){return h(m,y)}},f=function(y){return y.replace(/[-\\^$*+?.()|[\]{}\/]/g,"\\$&")},p=function(y,m){for(var g in m)if(m[g]===y)return!0};if(typeof t<"u"&&t.exports)t.exports=h,t.exports.createSlug=d;else if(typeof define<"u"&&define.amd)define([],function(){return h});else try{if(e.getSlug||e.createSlug)throw"speakingurl: globals exists /(getSlug|createSlug)/";e.getSlug=h,e.createSlug=d}catch(y){}}(r)}}),$N=ib({"../../node_modules/.pnpm/speakingurl@14.0.1/node_modules/speakingurl/index.js"(r,t){vt(),t.exports=XN()}});vt();vt();vt();vt();vt();vt();vt();vt();function YN(r){var t;const e=r.name||r._componentTag||r.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__||r.__name;return e==="index"&&(t=r.__file)!=null&&t.endsWith("index.vue")?"":e}function qN(r){const t=r.__file;if(t)return RN(IN(t,".vue"))}function Wy(r,t){return r.type.__VUE_DEVTOOLS_COMPONENT_GUSSED_NAME__=t,t}function am(r){if(r.__VUE_DEVTOOLS_NEXT_APP_RECORD__)return r.__VUE_DEVTOOLS_NEXT_APP_RECORD__;if(r.root)return r.appContext.app.__VUE_DEVTOOLS_NEXT_APP_RECORD__}function rb(r){var t,e;const n=(t=r.subTree)==null?void 0:t.type,i=am(r);return i?((e=i==null?void 0:i.types)==null?void 0:e.Fragment)===n:!1}function Bh(r){var t,e,n;const i=YN((r==null?void 0:r.type)||{});if(i)return i;if((r==null?void 0:r.root)===r)return"Root";for(const o in(e=(t=r.parent)==null?void 0:t.type)==null?void 0:e.components)if(r.parent.type.components[o]===(r==null?void 0:r.type))return Wy(r,o);for(const o in(n=r.appContext)==null?void 0:n.components)if(r.appContext.components[o]===(r==null?void 0:r.type))return Wy(r,o);return qN((r==null?void 0:r.type)||{})||"Anonymous Component"}function jN(r){var t,e,n;const i=(n=(e=(t=r==null?void 0:r.appContext)==null?void 0:t.app)==null?void 0:e.__VUE_DEVTOOLS_NEXT_APP_RECORD_ID__)!=null?n:0,s=r===(r==null?void 0:r.root)?"root":r.uid;return"".concat(i,":").concat(s)}function Vf(r,t){return t=t||"".concat(r.id,":root"),r.instanceMap.get(t)||r.instanceMap.get(":root")}function ZN(){const r={top:0,bottom:0,left:0,right:0,get width(){return r.right-r.left},get height(){return r.bottom-r.top}};return r}var Rc;function JN(r){return Rc||(Rc=document.createRange()),Rc.selectNode(r),Rc.getBoundingClientRect()}function KN(r){const t=ZN();if(!r.children)return t;for(let e=0,n=r.children.length;e<n;e++){const i=r.children[e];let s;if(i.component)s=Ns(i.component);else if(i.el){const o=i.el;o.nodeType===1||o.getBoundingClientRect?s=o.getBoundingClientRect():o.nodeType===3&&o.data.trim()&&(s=JN(o))}s&&QN(t,s)}return t}function QN(r,t){return(!r.top||t.top<r.top)&&(r.top=t.top),(!r.bottom||t.bottom>r.bottom)&&(r.bottom=t.bottom),(!r.left||t.left<r.left)&&(r.left=t.left),(!r.right||t.right>r.right)&&(r.right=t.right),r}var Xy={top:0,left:0,right:0,bottom:0,width:0,height:0};function Ns(r){const t=r.subTree.el;return typeof window>"u"?Xy:rb(r)?KN(r.subTree):(t==null?void 0:t.nodeType)===1?t==null?void 0:t.getBoundingClientRect():r.subTree.component?Ns(r.subTree.component):Xy}vt();function lm(r){return rb(r)?tP(r.subTree):r.subTree?[r.subTree.el]:[]}function tP(r){if(!r.children)return[];const t=[];return r.children.forEach(e=>{e.component?t.push(...lm(e.component)):e!=null&&e.el&&t.push(e.el)}),t}var sb="__vue-devtools-component-inspector__",ob="__vue-devtools-component-inspector__card__",ab="__vue-devtools-component-inspector__name__",lb="__vue-devtools-component-inspector__indicator__",cb={display:"block",zIndex:2147483640,position:"fixed",backgroundColor:"#42b88325",border:"1px solid #42b88350",borderRadius:"5px",transition:"all 0.1s ease-in",pointerEvents:"none"},eP={fontFamily:"Arial, Helvetica, sans-serif",padding:"5px 8px",borderRadius:"4px",textAlign:"left",position:"absolute",left:0,color:"#e9e9e9",fontSize:"14px",fontWeight:600,lineHeight:"24px",backgroundColor:"#42b883",boxShadow:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1)"},nP={display:"inline-block",fontWeight:400,fontStyle:"normal",fontSize:"12px",opacity:.7};function jo(){return document.getElementById(sb)}function iP(){return document.getElementById(ob)}function rP(){return document.getElementById(lb)}function sP(){return document.getElementById(ab)}function cm(r){return{left:"".concat(Math.round(r.left*100)/100,"px"),top:"".concat(Math.round(r.top*100)/100,"px"),width:"".concat(Math.round(r.width*100)/100,"px"),height:"".concat(Math.round(r.height*100)/100,"px")}}function um(r){var t;const e=document.createElement("div");e.id=(t=r.elementId)!=null?t:sb,Object.assign(e.style,{...cb,...cm(r.bounds),...r.style});const n=document.createElement("span");n.id=ob,Object.assign(n.style,{...eP,top:r.bounds.top<35?0:"-35px"});const i=document.createElement("span");i.id=ab,i.innerHTML="&lt;".concat(r.name,"&gt;&nbsp;&nbsp;");const s=document.createElement("i");return s.id=lb,s.innerHTML="".concat(Math.round(r.bounds.width*100)/100," x ").concat(Math.round(r.bounds.height*100)/100),Object.assign(s.style,nP),n.appendChild(i),n.appendChild(s),e.appendChild(n),document.body.appendChild(e),e}function hm(r){const t=jo(),e=iP(),n=sP(),i=rP();t&&(Object.assign(t.style,{...cb,...cm(r.bounds)}),Object.assign(e.style,{top:r.bounds.top<35?0:"-35px"}),n.innerHTML="&lt;".concat(r.name,"&gt;&nbsp;&nbsp;"),i.innerHTML="".concat(Math.round(r.bounds.width*100)/100," x ").concat(Math.round(r.bounds.height*100)/100))}function oP(r){const t=Ns(r);if(!t.width&&!t.height)return;const e=Bh(r);jo()?hm({bounds:t,name:e}):um({bounds:t,name:e})}function ub(){const r=jo();r&&(r.style.display="none")}var Hf=null;function Gf(r){const t=r.target;if(t){const e=t.__vueParentComponent;if(e&&(Hf=e,e.vnode.el)){const n=Ns(e),i=Bh(e);jo()?hm({bounds:n,name:i}):um({bounds:n,name:i})}}}function aP(r,t){if(r.preventDefault(),r.stopPropagation(),Hf){const e=jN(Hf);t(e)}}var Ju=null;function lP(){ub(),window.removeEventListener("mouseover",Gf),window.removeEventListener("click",Ju,!0),Ju=null}function cP(){return window.addEventListener("mouseover",Gf),new Promise(r=>{function t(e){e.preventDefault(),e.stopPropagation(),aP(e,n=>{window.removeEventListener("click",t,!0),Ju=null,window.removeEventListener("mouseover",Gf);const i=jo();i&&(i.style.display="none"),r(JSON.stringify({id:n}))})}Ju=t,window.addEventListener("click",t,!0)})}function uP(r){const t=Vf(Cn.value,r.id);if(t){const[e]=lm(t);if(typeof e.scrollIntoView=="function")e.scrollIntoView({behavior:"smooth"});else{const n=Ns(t),i=document.createElement("div"),s={...cm(n),position:"absolute"};Object.assign(i.style,s),document.body.appendChild(i),i.scrollIntoView({behavior:"smooth"}),setTimeout(()=>{document.body.removeChild(i)},2e3)}setTimeout(()=>{const n=Ns(t);if(n.width||n.height){const i=Bh(t),s=jo();s?hm({...r,name:i,bounds:n}):um({...r,name:i,bounds:n}),setTimeout(()=>{s&&(s.style.display="none")},1500)}},1200)}}vt();var $y;($y=Ut).__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__!=null||($y.__VUE_DEVTOOLS_COMPONENT_INSPECTOR_ENABLED__=!0);function hP(r){let t=0;const e=setInterval(()=>{Ut.__VUE_INSPECTOR__&&(clearInterval(e),t+=30,r()),t>=5e3&&clearInterval(e)},30)}function dP(){const r=Ut.__VUE_INSPECTOR__,t=r.openInEditor;r.openInEditor=async(...e)=>{r.disable(),t(...e)}}function fP(){return new Promise(r=>{function t(){dP(),r(Ut.__VUE_INSPECTOR__)}Ut.__VUE_INSPECTOR__?t():hP(()=>{t()})})}vt();vt();function pP(r){return!!(r&&r.__v_isReadonly)}function hb(r){return pP(r)?hb(r.__v_raw):!!(r&&r.__v_isReactive)}function qd(r){return!!(r&&r.__v_isRef===!0)}function Ea(r){const t=r&&r.__v_raw;return t?Ea(t):r}var mP=class{constructor(){this.refEditor=new gP}set(r,t,e,n){const i=Array.isArray(t)?t:t.split(".");for(;i.length>1;){const a=i.shift();r instanceof Map?r=r.get(a):r instanceof Set?r=Array.from(r.values())[a]:r=r[a],this.refEditor.isRef(r)&&(r=this.refEditor.get(r))}const s=i[0],o=this.refEditor.get(r)[s];n?n(r,s,e):this.refEditor.isRef(o)?this.refEditor.set(o,e):r[s]=e}get(r,t){const e=Array.isArray(t)?t:t.split(".");for(let n=0;n<e.length;n++)if(r instanceof Map?r=r.get(e[n]):r=r[e[n]],this.refEditor.isRef(r)&&(r=this.refEditor.get(r)),!r)return;return r}has(r,t,e=!1){if(typeof r>"u")return!1;const n=Array.isArray(t)?t.slice():t.split("."),i=e?2:1;for(;r&&n.length>i;){const s=n.shift();r=r[s],this.refEditor.isRef(r)&&(r=this.refEditor.get(r))}return r!=null&&Object.prototype.hasOwnProperty.call(r,n[0])}createDefaultSetCallback(r){return(t,e,n)=>{if((r.remove||r.newKey)&&(Array.isArray(t)?t.splice(e,1):Ea(t)instanceof Map?t.delete(e):Ea(t)instanceof Set?t.delete(Array.from(t.values())[e]):Reflect.deleteProperty(t,e)),!r.remove){const i=t[r.newKey||e];this.refEditor.isRef(i)?this.refEditor.set(i,n):Ea(t)instanceof Map?t.set(r.newKey||e,n):Ea(t)instanceof Set?t.add(n):t[r.newKey||e]=n}}}},gP=class{set(t,e){if(qd(t))t.value=e;else{if(t instanceof Set&&Array.isArray(e)){t.clear(),e.forEach(s=>t.add(s));return}const n=Object.keys(e);if(t instanceof Map){const s=new Set(t.keys());n.forEach(o=>{t.set(o,Reflect.get(e,o)),s.delete(o)}),s.forEach(o=>t.delete(o));return}const i=new Set(Object.keys(t));n.forEach(s=>{Reflect.set(t,s,Reflect.get(e,s)),i.delete(s)}),i.forEach(s=>Reflect.deleteProperty(t,s))}}get(t){return qd(t)?t.value:t}isRef(t){return qd(t)||hb(t)}};vt();vt();vt();var yP="__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS_STATE__";function _P(){if(!Qx||typeof localStorage>"u"||localStorage===null)return{recordingState:!1,mouseEventEnabled:!1,keyboardEventEnabled:!1,componentEventEnabled:!1,performanceEventEnabled:!1,selected:""};const r=localStorage.getItem(yP);return r?JSON.parse(r):{recordingState:!1,mouseEventEnabled:!1,keyboardEventEnabled:!1,componentEventEnabled:!1,performanceEventEnabled:!1,selected:""}}vt();vt();vt();var Yy;(Yy=Ut).__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS!=null||(Yy.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS=[]);var vP=new Proxy(Ut.__VUE_DEVTOOLS_KIT_TIMELINE_LAYERS,{get(r,t,e){return Reflect.get(r,t,e)}});function xP(r,t){en.timelineLayersState[t.id]=!1,vP.push({...r,descriptorId:t.id,appRecord:am(t.app)})}var qy;(qy=Ut).__VUE_DEVTOOLS_KIT_INSPECTOR__!=null||(qy.__VUE_DEVTOOLS_KIT_INSPECTOR__=[]);var dm=new Proxy(Ut.__VUE_DEVTOOLS_KIT_INSPECTOR__,{get(r,t,e){return Reflect.get(r,t,e)}}),db=ko(()=>{Zo.hooks.callHook("sendInspectorToClient",fb())});function bP(r,t){var e,n;dm.push({options:r,descriptor:t,treeFilterPlaceholder:(e=r.treeFilterPlaceholder)!=null?e:"Search tree...",stateFilterPlaceholder:(n=r.stateFilterPlaceholder)!=null?n:"Search state...",treeFilter:"",selectedNodeId:"",appRecord:am(t.app)}),db()}function fb(){return dm.filter(r=>r.descriptor.app===Cn.value.app).filter(r=>r.descriptor.id!=="components").map(r=>{var t;const e=r.descriptor,n=r.options;return{id:n.id,label:n.label,logo:e.logo,icon:"custom-ic-baseline-".concat((t=n==null?void 0:n.icon)==null?void 0:t.replace(/_/g,"-")),packageName:e.packageName,homepage:e.homepage,pluginId:e.id}})}function Zc(r,t){return dm.find(e=>e.options.id===r&&(t?e.descriptor.app===t:!0))}function MP(){const r=eb();r.hook("addInspector",({inspector:n,plugin:i})=>{bP(n,i.descriptor)});const t=ko(async({inspectorId:n,plugin:i})=>{var s;if(!n||!((s=i==null?void 0:i.descriptor)!=null&&s.app)||en.highPerfModeEnabled)return;const o=Zc(n,i.descriptor.app),a={app:i.descriptor.app,inspectorId:n,filter:(o==null?void 0:o.treeFilter)||"",rootNodes:[]};await new Promise(l=>{r.callHookWith(async c=>{await Promise.all(c.map(u=>u(a))),l()},"getInspectorTree")}),r.callHookWith(async l=>{await Promise.all(l.map(c=>c({inspectorId:n,rootNodes:a.rootNodes})))},"sendInspectorTreeToClient")},120);r.hook("sendInspectorTree",t);const e=ko(async({inspectorId:n,plugin:i})=>{var s;if(!n||!((s=i==null?void 0:i.descriptor)!=null&&s.app)||en.highPerfModeEnabled)return;const o=Zc(n,i.descriptor.app),a={app:i.descriptor.app,inspectorId:n,nodeId:(o==null?void 0:o.selectedNodeId)||"",state:null},l={currentTab:"custom-inspector:".concat(n)};a.nodeId&&await new Promise(c=>{r.callHookWith(async u=>{await Promise.all(u.map(h=>h(a,l))),c()},"getInspectorState")}),r.callHookWith(async c=>{await Promise.all(c.map(u=>u({inspectorId:n,nodeId:a.nodeId,state:a.state})))},"sendInspectorStateToClient")},120);return r.hook("sendInspectorState",e),r.hook("customInspectorSelectNode",({inspectorId:n,nodeId:i,plugin:s})=>{const o=Zc(n,s.descriptor.app);o&&(o.selectedNodeId=i)}),r.hook("timelineLayerAdded",({options:n,plugin:i})=>{xP(n,i.descriptor)}),r.hook("timelineEventAdded",({options:n,plugin:i})=>{var s;const o=["performance","component-event","keyboard","mouse"];en.highPerfModeEnabled||!((s=en.timelineLayersState)!=null&&s[i.descriptor.id])&&!o.includes(n.layerId)||r.callHookWith(async a=>{await Promise.all(a.map(l=>l(n)))},"sendTimelineEventToClient")}),r.hook("getComponentInstances",async({app:n})=>{const i=n.__VUE_DEVTOOLS_NEXT_APP_RECORD__;if(!i)return null;const s=i.id.toString();return[...i.instanceMap].filter(([o])=>o.split(":")[0]===s).map(([,o])=>o)}),r.hook("getComponentBounds",async({instance:n})=>Ns(n)),r.hook("getComponentName",({instance:n})=>Bh(n)),r.hook("componentHighlight",({uid:n})=>{const i=Cn.value.instanceMap.get(n);i&&oP(i)}),r.hook("componentUnhighlight",()=>{ub()}),r}var jy;(jy=Ut).__VUE_DEVTOOLS_KIT_APP_RECORDS__!=null||(jy.__VUE_DEVTOOLS_KIT_APP_RECORDS__=[]);var Zy;(Zy=Ut).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__!=null||(Zy.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__={});var Jy;(Jy=Ut).__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__!=null||(Jy.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__="");var Ky;(Ky=Ut).__VUE_DEVTOOLS_KIT_CUSTOM_TABS__!=null||(Ky.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__=[]);var Qy;(Qy=Ut).__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__!=null||(Qy.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__=[]);var _s="__VUE_DEVTOOLS_KIT_GLOBAL_STATE__";function SP(){return{connected:!1,clientConnected:!1,vitePluginDetected:!0,appRecords:[],activeAppRecordId:"",tabs:[],commands:[],highPerfModeEnabled:!0,devtoolsClientDetected:{},perfUniqueGroupId:0,timelineLayersState:_P()}}var t_;(t_=Ut)[_s]!=null||(t_[_s]=SP());var wP=ko(r=>{Zo.hooks.callHook("devtoolsStateUpdated",{state:r})});ko((r,t)=>{Zo.hooks.callHook("devtoolsConnectedUpdated",{state:r,oldState:t})});var zh=new Proxy(Ut.__VUE_DEVTOOLS_KIT_APP_RECORDS__,{get(r,t,e){return t==="value"?Ut.__VUE_DEVTOOLS_KIT_APP_RECORDS__:Ut.__VUE_DEVTOOLS_KIT_APP_RECORDS__[t]}}),Cn=new Proxy(Ut.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__,{get(r,t,e){return t==="value"?Ut.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__:t==="id"?Ut.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__:Ut.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__[t]}});function pb(){wP({...Ut[_s],appRecords:zh.value,activeAppRecordId:Cn.id,tabs:Ut.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__,commands:Ut.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__})}function TP(r){Ut.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD__=r,pb()}function EP(r){Ut.__VUE_DEVTOOLS_KIT_ACTIVE_APP_RECORD_ID__=r,pb()}var en=new Proxy(Ut[_s],{get(r,t){return t==="appRecords"?zh:t==="activeAppRecordId"?Cn.id:t==="tabs"?Ut.__VUE_DEVTOOLS_KIT_CUSTOM_TABS__:t==="commands"?Ut.__VUE_DEVTOOLS_KIT_CUSTOM_COMMANDS__:Ut[_s][t]},deleteProperty(r,t){return delete r[t],!0},set(r,t,e){return{...Ut[_s]},r[t]=e,Ut[_s][t]=e,!0}});function AP(r={}){var t,e,n;const{file:i,host:s,baseUrl:o=window.location.origin,line:a=0,column:l=0}=r;if(i){if(s==="chrome-extension"){const c=i.replace(/\\/g,"\\\\"),u=(e=(t=window.VUE_DEVTOOLS_CONFIG)==null?void 0:t.openInEditorHost)!=null?e:"/";fetch("".concat(u,"__open-in-editor?file=").concat(encodeURI(i))).then(h=>{if(!h.ok){const d="Opening component ".concat(c," failed");console.log("%c".concat(d),"color:red")}})}else if(en.vitePluginDetected){const c=(n=Ut.__VUE_DEVTOOLS_OPEN_IN_EDITOR_BASE_URL__)!=null?n:o;Ut.__VUE_INSPECTOR__.openInEditor(c,i,a,l)}}}vt();vt();vt();vt();vt();var e_;(e_=Ut).__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__!=null||(e_.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__=[]);var fm=new Proxy(Ut.__VUE_DEVTOOLS_KIT_PLUGIN_BUFFER__,{get(r,t,e){return Reflect.get(r,t,e)}});function Wf(r){const t={};return Object.keys(r).forEach(e=>{t[e]=r[e].defaultValue}),t}function pm(r){return"__VUE_DEVTOOLS_NEXT_PLUGIN_SETTINGS__".concat(r,"__")}function CP(r){var t,e,n;const i=(e=(t=fm.find(s=>{var o;return s[0].id===r&&!!((o=s[0])!=null&&o.settings)}))==null?void 0:t[0])!=null?e:null;return(n=i==null?void 0:i.settings)!=null?n:null}function mb(r,t){var e,n,i;const s=pm(r);if(s){const o=localStorage.getItem(s);if(o)return JSON.parse(o)}if(r){const o=(n=(e=fm.find(a=>a[0].id===r))==null?void 0:e[0])!=null?n:null;return Wf((i=o==null?void 0:o.settings)!=null?i:{})}return Wf(t)}function RP(r,t){const e=pm(r);localStorage.getItem(e)||localStorage.setItem(e,JSON.stringify(Wf(t)))}function IP(r,t,e){const n=pm(r),i=localStorage.getItem(n),s=JSON.parse(i||"{}"),o={...s,[t]:e};localStorage.setItem(n,JSON.stringify(o)),Zo.hooks.callHookWith(a=>{a.forEach(l=>l({pluginId:r,key:t,oldValue:s[t],newValue:e,settings:o}))},"setPluginSettings")}vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();var n_,i_,ti=(i_=(n_=Ut).__VUE_DEVTOOLS_HOOK)!=null?i_:n_.__VUE_DEVTOOLS_HOOK=eb(),NP={vueAppInit(r){ti.hook("app:init",r)},vueAppUnmount(r){ti.hook("app:unmount",r)},vueAppConnected(r){ti.hook("app:connected",r)},componentAdded(r){return ti.hook("component:added",r)},componentEmit(r){return ti.hook("component:emit",r)},componentUpdated(r){return ti.hook("component:updated",r)},componentRemoved(r){return ti.hook("component:removed",r)},setupDevtoolsPlugin(r){ti.hook("devtools-plugin:setup",r)},perfStart(r){return ti.hook("perf:start",r)},perfEnd(r){return ti.hook("perf:end",r)}},gb={on:NP,setupDevToolsPlugin(r,t){return ti.callHook("devtools-plugin:setup",r,t)}},PP=class{constructor({plugin:r,ctx:t}){this.hooks=t.hooks,this.plugin=r}get on(){return{visitComponentTree:r=>{this.hooks.hook("visitComponentTree",r)},inspectComponent:r=>{this.hooks.hook("inspectComponent",r)},editComponentState:r=>{this.hooks.hook("editComponentState",r)},getInspectorTree:r=>{this.hooks.hook("getInspectorTree",r)},getInspectorState:r=>{this.hooks.hook("getInspectorState",r)},editInspectorState:r=>{this.hooks.hook("editInspectorState",r)},inspectTimelineEvent:r=>{this.hooks.hook("inspectTimelineEvent",r)},timelineCleared:r=>{this.hooks.hook("timelineCleared",r)},setPluginSettings:r=>{this.hooks.hook("setPluginSettings",r)}}}notifyComponentUpdate(r){var t;if(en.highPerfModeEnabled)return;const e=fb().find(n=>n.packageName===this.plugin.descriptor.packageName);if(e!=null&&e.id){if(r){const n=[r.appContext.app,r.uid,(t=r.parent)==null?void 0:t.uid,r];ti.callHook("component:updated",...n)}else ti.callHook("component:updated");this.hooks.callHook("sendInspectorState",{inspectorId:e.id,plugin:this.plugin})}}addInspector(r){this.hooks.callHook("addInspector",{inspector:r,plugin:this.plugin}),this.plugin.descriptor.settings&&RP(r.id,this.plugin.descriptor.settings)}sendInspectorTree(r){en.highPerfModeEnabled||this.hooks.callHook("sendInspectorTree",{inspectorId:r,plugin:this.plugin})}sendInspectorState(r){en.highPerfModeEnabled||this.hooks.callHook("sendInspectorState",{inspectorId:r,plugin:this.plugin})}selectInspectorNode(r,t){this.hooks.callHook("customInspectorSelectNode",{inspectorId:r,nodeId:t,plugin:this.plugin})}visitComponentTree(r){return this.hooks.callHook("visitComponentTree",r)}now(){return en.highPerfModeEnabled?0:Date.now()}addTimelineLayer(r){this.hooks.callHook("timelineLayerAdded",{options:r,plugin:this.plugin})}addTimelineEvent(r){en.highPerfModeEnabled||this.hooks.callHook("timelineEventAdded",{options:r,plugin:this.plugin})}getSettings(r){return mb(r!=null?r:this.plugin.descriptor.id,this.plugin.descriptor.settings)}getComponentInstances(r){return this.hooks.callHook("getComponentInstances",{app:r})}getComponentBounds(r){return this.hooks.callHook("getComponentBounds",{instance:r})}getComponentName(r){return this.hooks.callHook("getComponentName",{instance:r})}highlightElement(r){const t=r.__VUE_DEVTOOLS_NEXT_UID__;return this.hooks.callHook("componentHighlight",{uid:t})}unhighlightElement(){return this.hooks.callHook("componentUnhighlight")}},LP=PP;vt();vt();vt();vt();var DP="__vue_devtool_undefined__",OP="__vue_devtool_infinity__",UP="__vue_devtool_negative_infinity__",FP="__vue_devtool_nan__";vt();vt();var BP={[DP]:"undefined",[FP]:"NaN",[OP]:"Infinity",[UP]:"-Infinity"};Object.entries(BP).reduce((r,[t,e])=>(r[e]=t,r),{});vt();vt();vt();vt();vt();var r_;(r_=Ut).__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__!=null||(r_.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__=new Set);function zP(r,t){return gb.setupDevToolsPlugin(r,t)}function kP(r,t){const[e,n]=r;if(e.app!==t)return;const i=new LP({plugin:{setupFn:n,descriptor:e},ctx:Zo});e.packageName==="vuex"&&i.on.editInspectorState(s=>{i.sendInspectorState(s.inspectorId)}),n(i)}function yb(r,t){Ut.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.has(r)||en.highPerfModeEnabled&&!(t!=null&&t.inspectingComponent)||(Ut.__VUE_DEVTOOLS_KIT__REGISTERED_PLUGIN_APPS__.add(r),fm.forEach(e=>{kP(e,r)}))}vt();vt();var rl="__VUE_DEVTOOLS_ROUTER__",Vo="__VUE_DEVTOOLS_ROUTER_INFO__",s_;(s_=Ut)[Vo]!=null||(s_[Vo]={currentRoute:null,routes:[]});var o_;(o_=Ut)[rl]!=null||(o_[rl]={});new Proxy(Ut[Vo],{get(r,t){return Ut[Vo][t]}});new Proxy(Ut[rl],{get(r,t){if(t==="value")return Ut[rl]}});function VP(r){const t=new Map;return((r==null?void 0:r.getRoutes())||[]).filter(e=>!t.has(e.path)&&t.set(e.path,1))}function mm(r){return r.map(t=>{let{path:e,name:n,children:i,meta:s}=t;return i!=null&&i.length&&(i=mm(i)),{path:e,name:n,children:i,meta:s}})}function HP(r){if(r){const{fullPath:t,hash:e,href:n,path:i,name:s,matched:o,params:a,query:l}=r;return{fullPath:t,hash:e,href:n,path:i,name:s,params:a,query:l,matched:mm(o)}}return r}function GP(r,t){function e(){var n;const i=(n=r.app)==null?void 0:n.config.globalProperties.$router,s=HP(i==null?void 0:i.currentRoute.value),o=mm(VP(i)),a=console.warn;console.warn=()=>{},Ut[Vo]={currentRoute:s?Gy(s):{},routes:Gy(o)},Ut[rl]=i,console.warn=a}e(),gb.on.componentUpdated(ko(()=>{var n;((n=t.value)==null?void 0:n.app)===r.app&&(e(),!en.highPerfModeEnabled&&Zo.hooks.callHook("routerInfoUpdated",{state:Ut[Vo]}))},200))}function WP(r){return{async getInspectorTree(t){const e={...t,app:Cn.value.app,rootNodes:[]};return await new Promise(n=>{r.callHookWith(async i=>{await Promise.all(i.map(s=>s(e))),n()},"getInspectorTree")}),e.rootNodes},async getInspectorState(t){const e={...t,app:Cn.value.app,state:null},n={currentTab:"custom-inspector:".concat(t.inspectorId)};return await new Promise(i=>{r.callHookWith(async s=>{await Promise.all(s.map(o=>o(e,n))),i()},"getInspectorState")}),e.state},editInspectorState(t){const e=new mP,n={...t,app:Cn.value.app,set:(i,s=t.path,o=t.state.value,a)=>{e.set(i,s,o,a||e.createDefaultSetCallback(t.state))}};r.callHookWith(i=>{i.forEach(s=>s(n))},"editInspectorState")},sendInspectorState(t){const e=Zc(t);r.callHook("sendInspectorState",{inspectorId:t,plugin:{descriptor:e.descriptor,setupFn:()=>({})}})},inspectComponentInspector(){return cP()},cancelInspectComponentInspector(){return lP()},getComponentRenderCode(t){const e=Vf(Cn.value,t);if(e)return typeof(e==null?void 0:e.type)!="function"?e.render.toString():e.type.toString()},scrollToComponent(t){return uP({id:t})},openInEditor:AP,getVueInspector:fP,toggleApp(t,e){const n=zh.value.find(i=>i.id===t);n&&(EP(t),TP(n),GP(n,Cn),db(),yb(n.app,e))},inspectDOM(t){const e=Vf(Cn.value,t);if(e){const[n]=lm(e);n&&(Ut.__VUE_DEVTOOLS_INSPECT_DOM_TARGET__=n)}},updatePluginSettings(t,e,n){IP(t,e,n)},getPluginSettings(t){return{options:CP(t),values:mb(t)}}}}vt();var a_;(a_=Ut).__VUE_DEVTOOLS_ENV__!=null||(a_.__VUE_DEVTOOLS_ENV__={vitePluginDetected:!1});var l_=MP(),c_;(c_=Ut).__VUE_DEVTOOLS_KIT_CONTEXT__!=null||(c_.__VUE_DEVTOOLS_KIT_CONTEXT__={hooks:l_,get state(){return{...en,activeAppRecordId:Cn.id,activeAppRecord:Cn.value,appRecords:zh.value}},api:WP(l_)});var Zo=Ut.__VUE_DEVTOOLS_KIT_CONTEXT__;vt();WN($N());var u_;(u_=Ut).__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__!=null||(u_.__VUE_DEVTOOLS_NEXT_APP_RECORD_INFO__={id:0,appIds:new Set});vt();vt();function XP(r){en.highPerfModeEnabled=r!=null?r:!en.highPerfModeEnabled,!r&&Cn.value&&yb(Cn.value.app)}vt();vt();vt();function $P(r){en.devtoolsClientDetected={...en.devtoolsClientDetected,...r};const t=Object.values(en.devtoolsClientDetected).some(Boolean);XP(!t)}var h_;(h_=Ut).__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__!=null||(h_.__VUE_DEVTOOLS_UPDATE_CLIENT_DETECTED__=$P);vt();vt();vt();vt();vt();vt();vt();var YP=class{constructor(){this.keyToValue=new Map,this.valueToKey=new Map}set(r,t){this.keyToValue.set(r,t),this.valueToKey.set(t,r)}getByKey(r){return this.keyToValue.get(r)}getByValue(r){return this.valueToKey.get(r)}clear(){this.keyToValue.clear(),this.valueToKey.clear()}},_b=class{constructor(t){this.generateIdentifier=t,this.kv=new YP}register(t,e){this.kv.getByValue(t)||(e||(e=this.generateIdentifier(t)),this.kv.set(e,t))}clear(){this.kv.clear()}getIdentifier(t){return this.kv.getByValue(t)}getValue(t){return this.kv.getByKey(t)}},qP=class extends _b{constructor(){super(r=>r.name),this.classToAllowedProps=new Map}register(r,t){typeof t=="object"?(t.allowProps&&this.classToAllowedProps.set(r,t.allowProps),super.register(r,t.identifier)):super.register(r,t)}getAllowedProps(r){return this.classToAllowedProps.get(r)}};vt();vt();function jP(r){if("values"in Object)return Object.values(r);const t=[];for(const e in r)r.hasOwnProperty(e)&&t.push(r[e]);return t}function ZP(r,t){const e=jP(r);if("find"in e)return e.find(t);const n=e;for(let i=0;i<n.length;i++){const s=n[i];if(t(s))return s}}function Ho(r,t){Object.entries(r).forEach(([e,n])=>t(n,e))}function Jc(r,t){return r.indexOf(t)!==-1}function d_(r,t){for(let e=0;e<r.length;e++){const n=r[e];if(t(n))return n}}var JP=class{constructor(){this.transfomers={}}register(r){this.transfomers[r.name]=r}findApplicable(r){return ZP(this.transfomers,t=>t.isApplicable(r))}findByName(r){return this.transfomers[r]}};vt();vt();var KP=r=>Object.prototype.toString.call(r).slice(8,-1),vb=r=>typeof r>"u",QP=r=>r===null,sl=r=>typeof r!="object"||r===null||r===Object.prototype?!1:Object.getPrototypeOf(r)===null?!0:Object.getPrototypeOf(r)===Object.prototype,Xf=r=>sl(r)&&Object.keys(r).length===0,Vr=r=>Array.isArray(r),t3=r=>typeof r=="string",e3=r=>typeof r=="number"&&!isNaN(r),n3=r=>typeof r=="boolean",i3=r=>r instanceof RegExp,ol=r=>r instanceof Map,al=r=>r instanceof Set,xb=r=>KP(r)==="Symbol",r3=r=>r instanceof Date&&!isNaN(r.valueOf()),s3=r=>r instanceof Error,f_=r=>typeof r=="number"&&isNaN(r),o3=r=>n3(r)||QP(r)||vb(r)||e3(r)||t3(r)||xb(r),a3=r=>typeof r=="bigint",l3=r=>r===1/0||r===-1/0,c3=r=>ArrayBuffer.isView(r)&&!(r instanceof DataView),u3=r=>r instanceof URL;vt();var bb=r=>r.replace(/\./g,"\\."),jd=r=>r.map(String).map(bb).join("."),Ua=r=>{const t=[];let e="";for(let i=0;i<r.length;i++){let s=r.charAt(i);if(s==="\\"&&r.charAt(i+1)==="."){e+=".",i++;continue}if(s==="."){t.push(e),e="";continue}e+=s}const n=e;return t.push(n),t};vt();function Oi(r,t,e,n){return{isApplicable:r,annotation:t,transform:e,untransform:n}}var Mb=[Oi(vb,"undefined",()=>null,()=>{}),Oi(a3,"bigint",r=>r.toString(),r=>typeof BigInt<"u"?BigInt(r):(console.error("Please add a BigInt polyfill."),r)),Oi(r3,"Date",r=>r.toISOString(),r=>new Date(r)),Oi(s3,"Error",(r,t)=>{const e={name:r.name,message:r.message};return t.allowedErrorProps.forEach(n=>{e[n]=r[n]}),e},(r,t)=>{const e=new Error(r.message);return e.name=r.name,e.stack=r.stack,t.allowedErrorProps.forEach(n=>{e[n]=r[n]}),e}),Oi(i3,"regexp",r=>""+r,r=>{const t=r.slice(1,r.lastIndexOf("/")),e=r.slice(r.lastIndexOf("/")+1);return new RegExp(t,e)}),Oi(al,"set",r=>[...r.values()],r=>new Set(r)),Oi(ol,"map",r=>[...r.entries()],r=>new Map(r)),Oi(r=>f_(r)||l3(r),"number",r=>f_(r)?"NaN":r>0?"Infinity":"-Infinity",Number),Oi(r=>r===0&&1/r===-1/0,"number",()=>"-0",Number),Oi(u3,"URL",r=>r.toString(),r=>new URL(r))];function kh(r,t,e,n){return{isApplicable:r,annotation:t,transform:e,untransform:n}}var Sb=kh((r,t)=>xb(r)?!!t.symbolRegistry.getIdentifier(r):!1,(r,t)=>["symbol",t.symbolRegistry.getIdentifier(r)],r=>r.description,(r,t,e)=>{const n=e.symbolRegistry.getValue(t[1]);if(!n)throw new Error("Trying to deserialize unknown symbol");return n}),h3=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array,Uint8ClampedArray].reduce((r,t)=>(r[t.name]=t,r),{}),wb=kh(c3,r=>["typed-array",r.constructor.name],r=>[...r],(r,t)=>{const e=h3[t[1]];if(!e)throw new Error("Trying to deserialize unknown typed array");return new e(r)});function Tb(r,t){return r!=null&&r.constructor?!!t.classRegistry.getIdentifier(r.constructor):!1}var Eb=kh(Tb,(r,t)=>["class",t.classRegistry.getIdentifier(r.constructor)],(r,t)=>{const e=t.classRegistry.getAllowedProps(r.constructor);if(!e)return{...r};const n={};return e.forEach(i=>{n[i]=r[i]}),n},(r,t,e)=>{const n=e.classRegistry.getValue(t[1]);if(!n)throw new Error("Trying to deserialize unknown class '".concat(t[1],"' - check https://github.com/blitz-js/superjson/issues/116#issuecomment-773996564"));return Object.assign(Object.create(n.prototype),r)}),Ab=kh((r,t)=>!!t.customTransformerRegistry.findApplicable(r),(r,t)=>["custom",t.customTransformerRegistry.findApplicable(r).name],(r,t)=>t.customTransformerRegistry.findApplicable(r).serialize(r),(r,t,e)=>{const n=e.customTransformerRegistry.findByName(t[1]);if(!n)throw new Error("Trying to deserialize unknown custom value");return n.deserialize(r)}),d3=[Eb,Sb,Ab,wb],p_=(r,t)=>{const e=d_(d3,i=>i.isApplicable(r,t));if(e)return{value:e.transform(r,t),type:e.annotation(r,t)};const n=d_(Mb,i=>i.isApplicable(r,t));if(n)return{value:n.transform(r,t),type:n.annotation}},Cb={};Mb.forEach(r=>{Cb[r.annotation]=r});var f3=(r,t,e)=>{if(Vr(t))switch(t[0]){case"symbol":return Sb.untransform(r,t,e);case"class":return Eb.untransform(r,t,e);case"custom":return Ab.untransform(r,t,e);case"typed-array":return wb.untransform(r,t,e);default:throw new Error("Unknown transformation: "+t)}else{const n=Cb[t];if(!n)throw new Error("Unknown transformation: "+t);return n.untransform(r,e)}};vt();var wo=(r,t)=>{if(t>r.size)throw new Error("index out of bounds");const e=r.keys();for(;t>0;)e.next(),t--;return e.next().value};function Rb(r){if(Jc(r,"__proto__"))throw new Error("__proto__ is not allowed as a property");if(Jc(r,"prototype"))throw new Error("prototype is not allowed as a property");if(Jc(r,"constructor"))throw new Error("constructor is not allowed as a property")}var p3=(r,t)=>{Rb(t);for(let e=0;e<t.length;e++){const n=t[e];if(al(r))r=wo(r,+n);else if(ol(r)){const i=+n,s=+t[++e]==0?"key":"value",o=wo(r,i);switch(s){case"key":r=o;break;case"value":r=r.get(o);break}}else r=r[n]}return r},$f=(r,t,e)=>{if(Rb(t),t.length===0)return e(r);let n=r;for(let s=0;s<t.length-1;s++){const o=t[s];if(Vr(n)){const a=+o;n=n[a]}else if(sl(n))n=n[o];else if(al(n)){const a=+o;n=wo(n,a)}else if(ol(n)){if(s===t.length-2)break;const a=+o,l=+t[++s]==0?"key":"value",c=wo(n,a);switch(l){case"key":n=c;break;case"value":n=n.get(c);break}}}const i=t[t.length-1];if(Vr(n)?n[+i]=e(n[+i]):sl(n)&&(n[i]=e(n[i])),al(n)){const s=wo(n,+i),o=e(s);s!==o&&(n.delete(s),n.add(o))}if(ol(n)){const s=+t[t.length-2],o=wo(n,s);switch(+i==0?"key":"value"){case"key":{const a=e(o);n.set(a,n.get(o)),a!==o&&n.delete(o);break}case"value":{n.set(o,e(n.get(o)));break}}}return r};function Yf(r,t,e=[]){if(!r)return;if(!Vr(r)){Ho(r,(s,o)=>Yf(s,t,[...e,...Ua(o)]));return}const[n,i]=r;i&&Ho(i,(s,o)=>{Yf(s,t,[...e,...Ua(o)])}),t(n,e)}function m3(r,t,e){return Yf(t,(n,i)=>{r=$f(r,i,s=>f3(s,n,e))}),r}function g3(r,t){function e(n,i){const s=p3(r,Ua(i));n.map(Ua).forEach(o=>{r=$f(r,o,()=>s)})}if(Vr(t)){const[n,i]=t;n.forEach(s=>{r=$f(r,Ua(s),()=>r)}),i&&Ho(i,e)}else Ho(t,e);return r}var y3=(r,t)=>sl(r)||Vr(r)||ol(r)||al(r)||Tb(r,t);function _3(r,t,e){const n=e.get(r);n?n.push(t):e.set(r,[t])}function v3(r,t){const e={};let n;return r.forEach(i=>{if(i.length<=1)return;t||(i=i.map(a=>a.map(String)).sort((a,l)=>a.length-l.length));const[s,...o]=i;s.length===0?n=o.map(jd):e[jd(s)]=o.map(jd)}),n?Xf(e)?[n]:[n,e]:Xf(e)?void 0:e}var Ib=(r,t,e,n,i=[],s=[],o=new Map)=>{var a;const l=o3(r);if(!l){_3(r,i,t);const p=o.get(r);if(p)return n?{transformedValue:null}:p}if(!y3(r,e)){const p=p_(r,e),y=p?{transformedValue:p.value,annotations:[p.type]}:{transformedValue:r};return l||o.set(r,y),y}if(Jc(s,r))return{transformedValue:null};const c=p_(r,e),u=(a=c==null?void 0:c.value)!=null?a:r,h=Vr(u)?[]:{},d={};Ho(u,(p,y)=>{if(y==="__proto__"||y==="constructor"||y==="prototype")throw new Error("Detected property ".concat(y,". This is a prototype pollution risk, please remove it from your object."));const m=Ib(p,t,e,n,[...i,y],[...s,r],o);h[y]=m.transformedValue,Vr(m.annotations)?d[y]=m.annotations:sl(m.annotations)&&Ho(m.annotations,(g,w)=>{d[bb(y)+"."+w]=g})});const f=Xf(d)?{transformedValue:h,annotations:c?[c.type]:void 0}:{transformedValue:h,annotations:c?[c.type,d]:d};return l||o.set(r,f),f};vt();vt();function Nb(r){return Object.prototype.toString.call(r).slice(8,-1)}function m_(r){return Nb(r)==="Array"}function x3(r){if(Nb(r)!=="Object")return!1;const t=Object.getPrototypeOf(r);return!!t&&t.constructor===Object&&t===Object.prototype}function b3(r,t,e,n,i){const s={}.propertyIsEnumerable.call(n,t)?"enumerable":"nonenumerable";s==="enumerable"&&(r[t]=e),i&&s==="nonenumerable"&&Object.defineProperty(r,t,{value:e,enumerable:!1,writable:!0,configurable:!0})}function qf(r,t={}){if(m_(r))return r.map(i=>qf(i,t));if(!x3(r))return r;const e=Object.getOwnPropertyNames(r),n=Object.getOwnPropertySymbols(r);return[...e,...n].reduce((i,s)=>{if(m_(t.props)&&!t.props.includes(s))return i;const o=r[s],a=qf(o,t);return b3(i,s,a,r,t.nonenumerable),i},{})}var Pe=class{constructor({dedupe:r=!1}={}){this.classRegistry=new qP,this.symbolRegistry=new _b(t=>{var e;return(e=t.description)!=null?e:""}),this.customTransformerRegistry=new JP,this.allowedErrorProps=[],this.dedupe=r}serialize(r){const t=new Map,e=Ib(r,t,this,this.dedupe),n={json:e.transformedValue};e.annotations&&(n.meta={...n.meta,values:e.annotations});const i=v3(t,this.dedupe);return i&&(n.meta={...n.meta,referentialEqualities:i}),n}deserialize(r){const{json:t,meta:e}=r;let n=qf(t);return e!=null&&e.values&&(n=m3(n,e.values,this)),e!=null&&e.referentialEqualities&&(n=g3(n,e.referentialEqualities)),n}stringify(r){return JSON.stringify(this.serialize(r))}parse(r){return this.deserialize(JSON.parse(r))}registerClass(r,t){this.classRegistry.register(r,t)}registerSymbol(r,t){this.symbolRegistry.register(r,t)}registerCustom(r,t){this.customTransformerRegistry.register({name:t,...r})}allowErrorProps(...r){this.allowedErrorProps.push(...r)}};Pe.defaultInstance=new Pe;Pe.serialize=Pe.defaultInstance.serialize.bind(Pe.defaultInstance);Pe.deserialize=Pe.defaultInstance.deserialize.bind(Pe.defaultInstance);Pe.stringify=Pe.defaultInstance.stringify.bind(Pe.defaultInstance);Pe.parse=Pe.defaultInstance.parse.bind(Pe.defaultInstance);Pe.registerClass=Pe.defaultInstance.registerClass.bind(Pe.defaultInstance);Pe.registerSymbol=Pe.defaultInstance.registerSymbol.bind(Pe.defaultInstance);Pe.registerCustom=Pe.defaultInstance.registerCustom.bind(Pe.defaultInstance);Pe.allowErrorProps=Pe.defaultInstance.allowErrorProps.bind(Pe.defaultInstance);vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();vt();var g_;(g_=Ut).__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__!=null||(g_.__VUE_DEVTOOLS_KIT_MESSAGE_CHANNELS__=[]);var y_;(y_=Ut).__VUE_DEVTOOLS_KIT_RPC_CLIENT__!=null||(y_.__VUE_DEVTOOLS_KIT_RPC_CLIENT__=null);var __;(__=Ut).__VUE_DEVTOOLS_KIT_RPC_SERVER__!=null||(__.__VUE_DEVTOOLS_KIT_RPC_SERVER__=null);var v_;(v_=Ut).__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__!=null||(v_.__VUE_DEVTOOLS_KIT_VITE_RPC_CLIENT__=null);var x_;(x_=Ut).__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__!=null||(x_.__VUE_DEVTOOLS_KIT_VITE_RPC_SERVER__=null);var b_;(b_=Ut).__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__!=null||(b_.__VUE_DEVTOOLS_KIT_BROADCAST_RPC_SERVER__=null);vt();vt();vt();vt();vt();vt();vt();function M3(r,t){const e="▲ ■ ●".concat(r);typeof M_=="function"?M_(e,t):console.log(e)}function M_(r,t){throw new Error(r+t)}function gm(r){let t=0;return r.traverse(e=>{if(Ox(e)&&e.type!=="HightlightMesh"){const n=e.geometry,i=n.attributes.position.count*3*Float32Array.BYTES_PER_ELEMENT,s=n.index?n.index.count*Uint32Array.BYTES_PER_ELEMENT:0,o=n.attributes.normal?n.attributes.normal.count*3*Float32Array.BYTES_PER_ELEMENT:0,a=n.attributes.uv?n.attributes.uv.count*2*Float32Array.BYTES_PER_ELEMENT:0,l=i+s+o+a;t+=l}}),t}function S_(r,t,e){r.push(t),r.length>e&&r.shift()}function S3(r){return(r/1024).toFixed(2)}function w3(r){if(!r)return;typeof window<"u"&&!window.__TRES__DEVTOOLS__&&(window.__TRES__DEVTOOLS__=new gN);const t={maxFrames:160,fps:{value:0,accumulator:[]},memory:{currentMem:0,allocatedMem:0,accumulator:[]}},e=100,n=G2({every:e}),{isSupported:i,memory:s}=W2({interval:e}),o=160;let a=performance.now(),l=0;const c=1,u=({timestamp:d})=>{var f;r.scene.value&&(t.memory.allocatedMem=gm(r.scene.value)),d-a>=e&&(a=d,S_(t.fps.accumulator,n.value,o),t.fps.value=n.value,i.value&&((f=s.value)!=null&&f.usedJSHeapSize)&&(S_(t.memory.accumulator,s.value.usedJSHeapSize/1024/1024,o),t.memory.accumulator.length>0&&(t.memory.currentMem=t.memory.accumulator.reduce((p,y)=>p+y,0)/t.memory.accumulator.length)))},{pause:h}=tm(({delta:d})=>{window.__TRES__DEVTOOLS__&&(u({timestamp:performance.now()}),l+=d,l>=c&&(window.__TRES__DEVTOOLS__.send("context",r),window.__TRES__DEVTOOLS__.send("performance",t),l=0))},{immediate:!0});As(()=>{h()})}const Pb=(r,t)=>{if(r.uuid===t)return r;for(const e of r.children){const n=Pb(e,t);if(n)return n}};class T3 extends Ue{constructor(...e){super(...e);Yt(this,"type","HightlightMesh");Yt(this,"createTime");this.createTime=Date.now()}onBeforeRender(){const e=(Date.now()-this.createTime)/1e3,n=1+.07*Math.sin(2.5*e);this.scale.set(n,n,n)}}const Lb=r=>{const t={id:"scene-".concat(r.uuid),label:r.type,children:[],tags:[]};r.name!==""&&t.tags.push({label:r.name,textColor:5750629,backgroundColor:15793395});const e=gm(r);return e>0&&t.tags.push({label:"".concat(S3(e)," KB"),textColor:15707189,backgroundColor:16775644,tooltip:"Memory usage"}),r.type.includes("Light")&&(xI(r)&&t.tags.push({label:"".concat(r.intensity),textColor:9738662,backgroundColor:16316922,tooltip:"Intensity"}),t.tags.push({label:"#".concat(new At(r.color).getHexString()),textColor:9738662,backgroundColor:16316922,tooltip:"Color"})),r.type.includes("Camera")&&(t.tags.push({label:"".concat(r.fov,"°"),textColor:9738662,backgroundColor:16316922,tooltip:"Field of view"}),t.tags.push({label:"x: ".concat(Math.round(r.position.x)," y: ").concat(Math.round(r.position.y)," z: ").concat(Math.round(r.position.z)),textColor:9738662,backgroundColor:16316922,tooltip:"Position"})),t};function E3(r,t,e=""){const n=e?"".concat(e,".").concat(r):r;return{id:"context-".concat(t,"-").concat(n),label:r,children:[],tags:[]}}function Db(r,t,e=""){r.children.forEach(n=>{if(n.type==="HightlightMesh"||e&&!n.type.includes(e)&&!n.name.includes(e))return;const i=Lb(n);t.children.push(i),Db(n,i,e)})}function jf(r,t,e=new WeakSet,n=0,i=4,s,o=""){var l,c;if(n>=i||!r||e.has(r))return;const a=n===0?((c=(l=r==null?void 0:r.scene)==null?void 0:l.value)==null?void 0:c.uuid)||Math.random().toString(36).slice(2,11):s;e.add(r),Object.entries(r).forEach(([u,h])=>{if(u.startsWith("_")||typeof h=="function")return;const d=o?"".concat(o,".").concat(u):u,f=E3(u,a,o);u!=="scene"&&(xs(h)?(f.tags.push({label:"Ref<".concat(typeof h.value,">"),textColor:4372611,backgroundColor:15793395}),h.value&&typeof h.value=="object"?jf(h.value,f,e,n+1,i,a,d):f.label="".concat(u,": ").concat(JSON.stringify(h.value))):h&&typeof h=="object"&&!Array.isArray(h)?Object.keys(h).length>0?e.has(h)?f.tags.push({label:"Circular",textColor:16711680,backgroundColor:16773360}):jf(h,f,e,n+1,i,a,d):f.label="".concat(u,": {}"):Array.isArray(h)?(f.label="".concat(u,": Array(").concat(h.length,")"),f.tags.push({label:"length: ".concat(h.length),textColor:9738662,backgroundColor:16316922})):f.label="".concat(u,": ").concat(JSON.stringify(h)),t.children.push(f))})}const A3=r=>t=>{if(t.inspectorId===ll){const e=Lb(r.scene.value);Db(r.scene.value,e,t.filter);const n={id:"context-root",label:"Context",children:[],tags:[]};jf(r,n),t.rootNodes=[e,n]}},C3=(r,{highlightMesh:t,prevInstance:e})=>n=>{var s;if(n.inspectorId!==ll)return;const i=new vr({color:11003607,transparent:!0,opacity:.2,depthTest:!1,side:ni});if(n.nodeId.includes("scene")){const o=n.nodeId.match(/^scene-(.+)$/),a=o?o[1]:null;if(!a)return;const[l]=r.scene.value.getObjectsByProperty("uuid",a);if(!l)return;if(e&&t&&t.parent&&e.remove(t),Ox(l)){const c=new T3(l.geometry.clone(),i);l.add(c),t=c,e=l}if(n.state={object:Object.entries(l).map(([c,u])=>c==="children"?{key:c,value:u.filter(h=>h.type!=="HightlightMesh")}:{key:c,value:u,editable:!0}).filter(({key:c})=>c!=="parent")},Hx(l)){const c={...n.state,state:[{key:"Scene Info",value:{objects:l.children.length,memory:gm(l),calls:r.renderer.instance.info.render.calls,triangles:r.renderer.instance.info.render.triangles,points:r.renderer.instance.info.render.points,lines:r.renderer.instance.info.render.lines}}]};"programs"in r.renderer.instance.info&&c.state.push({key:"Programs",value:(s=r.renderer.instance.info.programs)==null?void 0:s.map(u=>({...u,programName:u.name}))}),n.state=c}}else if(n.nodeId.includes("context")){const o=n.nodeId.match(/^context-([^-]+(?:-[^-]+)*)-(.+)$/),a=o?o[2]:"context";if(!a||a==="context"){n.state={object:Object.entries(r).filter(([u])=>!u.startsWith("_")&&u!=="parent").map(([u,h])=>({key:u,value:xs(h)?h.value:h,editable:!1}))};return}const l=a.split(".");let c=r;for(const u of l){if(!c||typeof c!="object")break;c=xs(c[u])?c[u].value:c[u]}c!==void 0&&(n.state={object:Object.entries(c).filter(([u])=>!u.startsWith("_")&&u!=="parent").map(([u,h])=>xs(h)?{key:u,value:h.value,editable:!1}:typeof h=="function"?{key:u,value:"ƒ()",editable:!1}:h&&typeof h=="object"?{key:u,value:Array.isArray(h)?"Array(".concat(h.length,")"):"Object",editable:!1}:{key:u,value:h,editable:!1})})}},R3=(r,t,e,n)=>{const i=Pb(r,t);if(!i){console.warn("Object with UUID not found in the scene.");return}let s=i;for(let a=0;a<e.length-1;a++)if(s[e[a]]!==void 0)s=s[e[a]];else{console.warn("Property path is not valid: ".concat(e.join(".")));return}const o=e[e.length-1];s[o]!==void 0?s[o]=n:console.warn("Property path is not valid: ".concat(e.join(".")))},I3=r=>t=>{if(t.inspectorId===ll&&t.nodeId.includes("scene")){const e=t.nodeId.match(/^scene-(.+)$/),n=e?e[1]:null;if(!n)return;R3(r.scene.value,n,t.path,t.state.value)}},ll="tres:inspector";function N3(r,t){const e={id:"dev.esm.tres",label:"TresJS 🪐",logo:"https://raw.githubusercontent.com/Tresjs/tres/main/public/favicon.svg",packageName:"tresjs",homepage:"https://docs.tresjs.org",app:r},n=null,i=null;w3(t),zP(e,s=>{typeof s.now!="function"&&M3("You seem to be using an outdated version of Vue Devtools. Are you still using the Beta release instead of the stable one? You can find the links at https://devtools.vuejs.org/guide/installation.html."),s.addInspector({id:ll,label:"TresJS 🪐",icon:"account_tree",treeFilterPlaceholder:"Search instances"}),setInterval(()=>{s.sendInspectorTree(ll)},1e3),setInterval(()=>{s.notifyComponentUpdate()},5e3),s.on.getInspectorTree(A3(t)),s.on.getInspectorState(C3(t,{highlightMesh:n,prevInstance:i})),s.on.editInspectorState(I3(t))})}const P3=["data-scene","data-tres"],L3=fr({__name:"TresCanvas",props:{camera:{},windowSize:{type:Boolean,default:void 0},enableProvideBridge:{type:Boolean,default:!0},antialias:{type:Boolean,default:!0},stencil:{type:Boolean,default:void 0},depth:{type:Boolean,default:void 0},precision:{},logarithmicDepthBuffer:{type:Boolean,default:void 0},preserveDrawingBuffer:{type:Boolean,default:void 0},powerPreference:{},alpha:{type:Boolean,default:void 0},premultipliedAlpha:{type:Boolean},failIfMajorPerformanceCaveat:{type:Boolean,default:void 0},clearColor:{default:"#000000"},clearAlpha:{default:1},shadows:{type:Boolean,default:void 0},toneMapping:{default:up},shadowMapType:{default:cp},useLegacyLights:{type:Boolean,default:void 0},outputColorSpace:{},toneMappingExposure:{},renderMode:{default:"always"},dpr:{},renderer:{}},emits:["ready","pointermissed","render","beforeLoop","loop","click","contextmenu","pointermove","pointerenter","pointerleave","pointerover","pointerout","dblclick","pointerdown","pointerup","pointercancel","lostpointercapture","wheel"],setup(r,{expose:t,emit:e}){const n=r,i=e,s=C0(),o=tn(),a=rn(new _h),l=Ro();zf(w2);const c=(p,y=!1)=>fr({setup(){var b;const m=(b=Ro())==null?void 0:b.appContext;m&&(m.app=l==null?void 0:l.appContext.app);const g={};function w(M){M&&(M.parent&&w(M.parent),M.provides&&Object.assign(g,M.provides))}return l!=null&&l.parent&&n.enableProvideBridge&&(w(l.parent),Reflect.ownKeys(g).forEach(M=>{Xc(M,g[M])})),Xc(lN,p),Xc("extend",zf),typeof window<"u"&&(m!=null&&m.app)&&N3(m==null?void 0:m.app,p),()=>Ym(eu,null,y?[]:s.default())}}),u=(p,y=!1)=>{const m=c(p,y),{render:g}=eS(pN(p));g(Ym(m),a.value)},h=(p,y=!1)=>{Gx(p.scene.value),y&&(p.renderer.instance.dispose(),p.renderer.instance instanceof Kp&&(p.renderer.instance.renderLists.dispose(),p.renderer.instance.forceContextLoss())),a.value.__tres={root:p}},d=rn(null);t({context:d,dispose:()=>h(d.value,!0)});const f=()=>{h(d.value),u(d.value,!0)};return Qc(()=>{var S;const p=o;d.value=cN({scene:a.value,canvas:p,windowSize:(S=n.windowSize)!=null?S:!1,rendererOptions:n});const{camera:y,renderer:m}=d.value,{registerCamera:g,cameras:w,activeCamera:b,deregisterCamera:M}=y;u(d.value);const A=()=>{const E=new Fe(45,window.innerWidth/window.innerHeight,.1,1e3);E.position.set(3,3,3),E.lookAt(0,0,0),g(E);const x=ci(()=>{w.value.length>=2&&(E.removeFromParent(),M(E),x==null||x())})};d.value.events.onPointerMissed(E=>{i("pointermissed",E)}),Xn(()=>n.camera,(E,x)=>{E&&g(ye(E),!0),x&&(ye(x).removeFromParent(),M(ye(x)))},{immediate:!0}),b.value||A(),m.onRender(()=>{d.value&&i("render",d.value)}),m.loop.onLoop(E=>{d.value&&i("loop",{...d.value,...E})}),m.loop.onBeforeLoop(E=>{d.value&&i("beforeLoop",{...d.value,...E})}),m.onReady(()=>{i("ready",d.value)})}),Qc(async()=>{await N2(3e3),d.value&&(!d.value.sizes.width||!d.value.sizes.height.value)&&console.warn("TresCanvas: The canvas has no area, so nothing can be rendered. Set it manually on the parent element or use the prop windowSize.")}),As(f),(p,y)=>(Ye(),xn("canvas",{ref_key:"canvasRef",ref:o,"data-scene":a.value.uuid,class:tS(p.$attrs.class),"data-tres":"tresjs ".concat(oe(dI).version),style:QM({display:"block",width:"100%",height:"100%",position:r.windowSize?"fixed":"relative",top:0,left:0,pointerEvents:"auto",touchAction:"none",...p.$attrs.style})},null,14,P3))}});function D3(r){return E0()?(A0(r),!0):!1}const O3=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const U3=Object.prototype.toString,F3=r=>U3.call(r)==="[object Object]";function Zd(r){return Array.isArray(r)?r:[r]}function B3(r,t,e){return Xn(r,t,{...e,immediate:!0})}const z3=O3?window:void 0;function k3(r){var t;const e=ye(r);return(t=e==null?void 0:e.$el)!=null?t:e}function Jd(...r){const t=[],e=()=>{t.forEach(a=>a()),t.length=0},n=(a,l,c,u)=>(a.addEventListener(l,c,u),()=>a.removeEventListener(l,c,u)),i=We(()=>{const a=Zd(ye(r[0])).filter(l=>l!=null);return a.every(l=>typeof l!="string")?a:void 0}),s=B3(()=>{var a,l;return[(l=(a=i.value)==null?void 0:a.map(c=>k3(c)))!=null?l:[z3].filter(c=>c!=null),Zd(ye(i.value?r[1]:r[0])),Zd(oe(i.value?r[2]:r[1])),ye(i.value?r[3]:r[2])]},([a,l,c,u])=>{if(e(),!(a!=null&&a.length)||!(l!=null&&l.length)||!(c!=null&&c.length))return;const h=F3(u)?{...u}:u;t.push(...a.flatMap(d=>l.flatMap(f=>c.map(p=>n(d,f,p,h)))))},{flush:"post"}),o=()=>{s(),e()};return D3(e),o}function ym(r,t,e,n){const i=class extends $n{constructor(o={}){const a=Object.entries(r);super({uniforms:a.reduce((l,[c,u])=>{const h=ph.clone({[c]:{value:u}});return{...l,...h}},{}),vertexShader:t,fragmentShader:e});Yt(this,"key","");a.forEach(([l])=>Object.defineProperty(this,l,{get:()=>this.uniforms[l].value,set:c=>this.uniforms[l].value=c})),Object.assign(this,o)}};return i.key=ml.generateUUID(),i}ym({color:new At("white"),scale:new at(1,1),imageBounds:new at(1,1),resolution:1024,map:null,zoom:1,radius:0,grayscale:0,opacity:1},"\n    varying vec2 vUv;\n    varying vec2 vPos;\n    void main() {\n      gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.);\n      vUv = uv;\n      vPos = position.xy;\n    }\n  ","\n    // mostly from https://gist.github.com/statico/df64c5d167362ecf7b34fca0b1459a44\n    varying vec2 vUv;\n    varying vec2 vPos;\n    uniform vec2 scale;\n    uniform vec2 imageBounds;\n    uniform float resolution;\n    uniform vec3 color;\n    uniform sampler2D map;\n    uniform float radius;\n    uniform float zoom;\n    uniform float grayscale;\n    uniform float opacity;\n    const vec3 luma = vec3(.299, 0.587, 0.114);\n    vec4 toGrayscale(vec4 color, float intensity) {\n      return vec4(mix(color.rgb, vec3(dot(color.rgb, luma)), intensity), color.a);\n    }\n    vec2 aspect(vec2 size) {\n      return size / min(size.x, size.y);\n    }\n    \n    const float PI = 3.14159265;\n      \n    // from https://iquilezles.org/articles/distfunctions\n    float udRoundBox( vec2 p, vec2 b, float r ) {\n      return length(max(abs(p)-b+r,0.0))-r;\n    }\n  \n    void main() {\n      vec2 s = aspect(scale);\n      vec2 i = aspect(imageBounds);\n      float rs = s.x / s.y;\n      float ri = i.x / i.y;\n      vec2 new = rs < ri ? vec2(i.x * s.y / i.y, s.y) : vec2(s.x, i.y * s.x / i.x);\n      vec2 offset = (rs < ri ? vec2((new.x - s.x) / 2.0, 0.0) : vec2(0.0, (new.y - s.y) / 2.0)) / new;\n      vec2 uv = vUv * s / new + offset;\n      vec2 zUv = (uv - vec2(0.5, 0.5)) / zoom + vec2(0.5, 0.5);\n  \n      vec2 res = vec2(scale * resolution);\n      vec2 halfRes = 0.5 * res;\n      float b = udRoundBox(vUv.xy * res - halfRes, halfRes, resolution * radius);    \n        vec3 a = mix(vec3(1.0,0.0,0.0), vec3(0.0,0.0,0.0), smoothstep(0.0, 1.0, b));\n      gl_FragColor = toGrayscale(texture2D(map, zUv) * vec4(color, opacity * a), grayscale);\n      \n      #include <tonemapping_fragment>\n      #include <colorspace_fragment>\n    }\n  ");(function(){const r=new ce,t=new Float32Array([-1,-1,0,0,0,1,-1,0,1,0,1,1,0,1,1,-1,1,0,0,1]),e=new _l(t,5);return r.setIndex([0,1,2,0,2,3]),r.setAttribute("position",new yr(e,3,0,!1)),r.setAttribute("uv",new yr(e,2,3,!1)),r})();ml.clamp;ml.lerp;const V3=parseInt(dl.replace(/\D+/g,""));var Tl=Uint8Array,Ob=Uint16Array,H3=Uint32Array,G3=new Tl([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),W3=new Tl([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),Ub=function(r,t){for(var e=new Ob(31),n=0;n<31;++n)e[n]=t+=1<<r[n-1];for(var i=new H3(e[30]),n=1;n<30;++n)for(var s=e[n];s<e[n+1];++s)i[s]=s-e[n]<<5|n;return[e,i]},Fb=Ub(G3,2),X3=Fb[0],$3=Fb[1];X3[28]=258,$3[258]=28;Ub(W3,0);var Y3=new Ob(32768);for(var Oe=0;Oe<32768;++Oe){var Cr=(Oe&43690)>>>1|(Oe&21845)<<1;Cr=(Cr&52428)>>>2|(Cr&13107)<<2,Cr=(Cr&61680)>>>4|(Cr&3855)<<4,Y3[Oe]=((Cr&65280)>>>8|(Cr&255)<<8)>>>1}var Vh=new Tl(288);for(var Oe=0;Oe<144;++Oe)Vh[Oe]=8;for(var Oe=144;Oe<256;++Oe)Vh[Oe]=9;for(var Oe=256;Oe<280;++Oe)Vh[Oe]=7;for(var Oe=280;Oe<288;++Oe)Vh[Oe]=8;var q3=new Tl(32);for(var Oe=0;Oe<32;++Oe)q3[Oe]=5;var j3=new Tl(0),Z3=typeof TextDecoder<"u"&&new TextDecoder,J3=0;try{Z3.decode(j3,{stream:!0}),J3=1}catch(r){}var K3=Object.defineProperty,Q3=(r,t,e)=>t in r?K3(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,tL=(r,t,e)=>(Q3(r,t+"",e),e);const w_=(()=>{const r=class extends Ue{constructor(e,n={}){super(e),this.isReflector=!0,this.type="Reflector",this.camera=new Fe;const i=this,s=n.color!==void 0?new At(n.color):new At(8355711),o=n.textureWidth||512,a=n.textureHeight||512,l=n.clipBias||0,c=n.shader||r.ReflectorShader,u=n.multisample!==void 0?n.multisample:4,h=new Hn,d=new L,f=new L,p=new L,y=new jt,m=new L(0,0,-1),g=new _e,w=new L,b=new L,M=new _e,A=new jt,S=this.camera,E=new Ri(o,a,{samples:u,type:Ps}),x=new $n({uniforms:ph.clone(c.uniforms),fragmentShader:c.fragmentShader,vertexShader:c.vertexShader});x.uniforms.tDiffuse.value=E.texture,x.uniforms.color.value=s,x.uniforms.textureMatrix.value=A,this.material=x,this.onBeforeRender=function(v,_,T){if(f.setFromMatrixPosition(i.matrixWorld),p.setFromMatrixPosition(T.matrixWorld),y.extractRotation(i.matrixWorld),d.set(0,0,1),d.applyMatrix4(y),w.subVectors(f,p),w.dot(d)>0)return;w.reflect(d).negate(),w.add(f),y.extractRotation(T.matrixWorld),m.set(0,0,-1),m.applyMatrix4(y),m.add(p),b.subVectors(f,m),b.reflect(d).negate(),b.add(f),S.position.copy(w),S.up.set(0,1,0),S.up.applyMatrix4(y),S.up.reflect(d),S.lookAt(b),S.far=T.far,S.updateMatrixWorld(),S.projectionMatrix.copy(T.projectionMatrix),A.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),A.multiply(S.projectionMatrix),A.multiply(S.matrixWorldInverse),A.multiply(i.matrixWorld),h.setFromNormalAndCoplanarPoint(d,f),h.applyMatrix4(S.matrixWorldInverse),g.set(h.normal.x,h.normal.y,h.normal.z,h.constant);const I=S.projectionMatrix;M.x=(Math.sign(g.x)+I.elements[8])/I.elements[0],M.y=(Math.sign(g.y)+I.elements[9])/I.elements[5],M.z=-1,M.w=(1+I.elements[10])/I.elements[14],g.multiplyScalar(2/g.dot(M)),I.elements[2]=g.x,I.elements[6]=g.y,I.elements[10]=g.z+1-l,I.elements[14]=g.w,i.visible=!1;const B=v.getRenderTarget(),V=v.xr.enabled,H=v.shadowMap.autoUpdate,U=v.toneMapping;let Q=!1;"outputColorSpace"in v?Q=v.outputColorSpace==="srgb":Q=v.outputEncoding===3001,v.xr.enabled=!1,v.shadowMap.autoUpdate=!1,"outputColorSpace"in v?v.outputColorSpace="srgb-linear":v.outputEncoding=3e3,v.toneMapping=Gi,v.setRenderTarget(E),v.state.buffers.depth.setMask(!0),v.autoClear===!1&&v.clear(),v.render(_,S),v.xr.enabled=V,v.shadowMap.autoUpdate=H,v.toneMapping=U,"outputColorSpace"in v?v.outputColorSpace=Q?"srgb":"srgb-linear":v.outputEncoding=Q?3001:3e3,v.setRenderTarget(B);const W=T.viewport;W!==void 0&&v.state.viewport(W),i.visible=!0},this.getRenderTarget=function(){return E},this.dispose=function(){E.dispose(),i.material.dispose()}}};let t=r;return tL(t,"ReflectorShader",{uniforms:{color:{value:null},tDiffuse:{value:null},textureMatrix:{value:null}},vertexShader:"\n		uniform mat4 textureMatrix;\n		varying vec4 vUv;\n\n		#include <common>\n		#include <logdepthbuf_pars_vertex>\n\n		void main() {\n\n			vUv = textureMatrix * vec4( position, 1.0 );\n\n			gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n			#include <logdepthbuf_vertex>\n\n		}",fragmentShader:"\n		uniform vec3 color;\n		uniform sampler2D tDiffuse;\n		varying vec4 vUv;\n\n		#include <logdepthbuf_pars_fragment>\n\n		float blendOverlay( float base, float blend ) {\n\n			return( base < 0.5 ? ( 2.0 * base * blend ) : ( 1.0 - 2.0 * ( 1.0 - base ) * ( 1.0 - blend ) ) );\n\n		}\n\n		vec3 blendOverlay( vec3 base, vec3 blend ) {\n\n			return vec3( blendOverlay( base.r, blend.r ), blendOverlay( base.g, blend.g ), blendOverlay( base.b, blend.b ) );\n\n		}\n\n		void main() {\n\n			#include <logdepthbuf_fragment>\n\n			vec4 base = texture2DProj( tDiffuse, vUv );\n			gl_FragColor = vec4( blendOverlay( base.rgb, color ), 1.0 );\n\n			#include <tonemapping_fragment>\n			#include <".concat(V3>=154?"colorspace_fragment":"encodings_fragment",">\n\n		}")}),t})();var eL=Object.defineProperty,nL=(r,t,e)=>t in r?eL(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,iL=(r,t,e)=>(nL(r,t+"",e),e);let rL=class{constructor(){iL(this,"_listeners")}addEventListener(r,t){this._listeners===void 0&&(this._listeners={});const e=this._listeners;e[r]===void 0&&(e[r]=[]),e[r].indexOf(t)===-1&&e[r].push(t)}hasEventListener(r,t){if(this._listeners===void 0)return!1;const e=this._listeners;return e[r]!==void 0&&e[r].indexOf(t)!==-1}removeEventListener(r,t){if(this._listeners===void 0)return;const e=this._listeners[r];if(e!==void 0){const n=e.indexOf(t);n!==-1&&e.splice(n,1)}}dispatchEvent(r){if(this._listeners===void 0)return;const t=this._listeners[r.type];if(t!==void 0){r.target=this;const e=t.slice(0);for(let n=0,i=e.length;n<i;n++)e[n].call(this,r);r.target=null}}};var sL=Object.defineProperty,oL=(r,t,e)=>t in r?sL(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,Kt=(r,t,e)=>(oL(r,typeof t!="symbol"?t+"":t,e),e);const Ic=new Xi,T_=new Hn,aL=Math.cos(70*(Math.PI/180)),E_=(r,t)=>(r%t+t)%t;class lL extends rL{constructor(t,e){super(),Kt(this,"object"),Kt(this,"domElement"),Kt(this,"enabled",!0),Kt(this,"target",new L),Kt(this,"minDistance",0),Kt(this,"maxDistance",1/0),Kt(this,"minZoom",0),Kt(this,"maxZoom",1/0),Kt(this,"minPolarAngle",0),Kt(this,"maxPolarAngle",Math.PI),Kt(this,"minAzimuthAngle",-1/0),Kt(this,"maxAzimuthAngle",1/0),Kt(this,"enableDamping",!1),Kt(this,"dampingFactor",.05),Kt(this,"enableZoom",!0),Kt(this,"zoomSpeed",1),Kt(this,"enableRotate",!0),Kt(this,"rotateSpeed",1),Kt(this,"enablePan",!0),Kt(this,"panSpeed",1),Kt(this,"screenSpacePanning",!0),Kt(this,"keyPanSpeed",7),Kt(this,"zoomToCursor",!1),Kt(this,"autoRotate",!1),Kt(this,"autoRotateSpeed",2),Kt(this,"reverseOrbit",!1),Kt(this,"reverseHorizontalOrbit",!1),Kt(this,"reverseVerticalOrbit",!1),Kt(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),Kt(this,"mouseButtons",{LEFT:ki.ROTATE,MIDDLE:ki.DOLLY,RIGHT:ki.PAN}),Kt(this,"touches",{ONE:sr.ROTATE,TWO:sr.DOLLY_PAN}),Kt(this,"target0"),Kt(this,"position0"),Kt(this,"zoom0"),Kt(this,"_domElementKeyEvents",null),Kt(this,"getPolarAngle"),Kt(this,"getAzimuthalAngle"),Kt(this,"setPolarAngle"),Kt(this,"setAzimuthalAngle"),Kt(this,"getDistance"),Kt(this,"getZoomScale"),Kt(this,"listenToKeyEvents"),Kt(this,"stopListenToKeyEvents"),Kt(this,"saveState"),Kt(this,"reset"),Kt(this,"update"),Kt(this,"connect"),Kt(this,"dispose"),Kt(this,"dollyIn"),Kt(this,"dollyOut"),Kt(this,"getScale"),Kt(this,"setScale"),this.object=t,this.domElement=e,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this.getPolarAngle=()=>u.phi,this.getAzimuthalAngle=()=>u.theta,this.setPolarAngle=F=>{let j=E_(F,2*Math.PI),wt=u.phi;wt<0&&(wt+=2*Math.PI),j<0&&(j+=2*Math.PI);let k=Math.abs(j-wt);2*Math.PI-k<k&&(j<wt?j+=2*Math.PI:wt+=2*Math.PI),h.phi=j-wt,n.update()},this.setAzimuthalAngle=F=>{let j=E_(F,2*Math.PI),wt=u.theta;wt<0&&(wt+=2*Math.PI),j<0&&(j+=2*Math.PI);let k=Math.abs(j-wt);2*Math.PI-k<k&&(j<wt?j+=2*Math.PI:wt+=2*Math.PI),h.theta=j-wt,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=F=>{F.addEventListener("keydown",it),this._domElementKeyEvents=F},this.stopListenToKeyEvents=()=>{this._domElementKeyEvents.removeEventListener("keydown",it),this._domElementKeyEvents=null},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(i),n.update(),l=a.NONE},this.update=(()=>{const F=new L,j=new L(0,1,0),wt=new cn().setFromUnitVectors(t.up,j),k=wt.clone().invert(),_t=new L,Mt=new cn,Ot=2*Math.PI;return function(){const xt=n.object.position;wt.setFromUnitVectors(t.up,j),k.copy(wt).invert(),F.copy(xt).sub(n.target),F.applyQuaternion(wt),u.setFromVector3(F),n.autoRotate&&l===a.NONE&&V(I()),n.enableDamping?(u.theta+=h.theta*n.dampingFactor,u.phi+=h.phi*n.dampingFactor):(u.theta+=h.theta,u.phi+=h.phi);let ft=n.minAzimuthAngle,Lt=n.maxAzimuthAngle;isFinite(ft)&&isFinite(Lt)&&(ft<-Math.PI?ft+=Ot:ft>Math.PI&&(ft-=Ot),Lt<-Math.PI?Lt+=Ot:Lt>Math.PI&&(Lt-=Ot),ft<=Lt?u.theta=Math.max(ft,Math.min(Lt,u.theta)):u.theta=u.theta>(ft+Lt)/2?Math.max(ft,u.theta):Math.min(Lt,u.theta)),u.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,u.phi)),u.makeSafe(),n.enableDamping===!0?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),n.zoomToCursor&&v||n.object.isOrthographicCamera?u.radius=te(u.radius):u.radius=te(u.radius*d),F.setFromSpherical(u),F.applyQuaternion(k),xt.copy(n.target).add(F),n.object.matrixAutoUpdate||n.object.updateMatrix(),n.object.lookAt(n.target),n.enableDamping===!0?(h.theta*=1-n.dampingFactor,h.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(h.set(0,0,0),f.set(0,0,0));let ne=!1;if(n.zoomToCursor&&v){let Me=null;if(n.object instanceof Fe&&n.object.isPerspectiveCamera){const fe=F.length();Me=te(fe*d);const Dn=fe-Me;n.object.position.addScaledVector(E,Dn),n.object.updateMatrixWorld()}else if(n.object.isOrthographicCamera){const fe=new L(x.x,x.y,0);fe.unproject(n.object),n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/d)),n.object.updateProjectionMatrix(),ne=!0;const Dn=new L(x.x,x.y,0);Dn.unproject(n.object),n.object.position.sub(Dn).add(fe),n.object.updateMatrixWorld(),Me=F.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),n.zoomToCursor=!1;Me!==null&&(n.screenSpacePanning?n.target.set(0,0,-1).transformDirection(n.object.matrix).multiplyScalar(Me).add(n.object.position):(Ic.origin.copy(n.object.position),Ic.direction.set(0,0,-1).transformDirection(n.object.matrix),Math.abs(n.object.up.dot(Ic.direction))<aL?t.lookAt(n.target):(T_.setFromNormalAndCoplanarPoint(n.object.up,n.target),Ic.intersectPlane(T_,n.target))))}else n.object instanceof ur&&n.object.isOrthographicCamera&&(ne=d!==1,ne&&(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/d)),n.object.updateProjectionMatrix()));return d=1,v=!1,ne||_t.distanceToSquared(n.object.position)>c||8*(1-Mt.dot(n.object.quaternion))>c?(n.dispatchEvent(i),_t.copy(n.object.position),Mt.copy(n.object.quaternion),ne=!1,!0):!1}})(),this.connect=F=>{n.domElement=F,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",kt),n.domElement.addEventListener("pointerdown",Pt),n.domElement.addEventListener("pointercancel",C),n.domElement.addEventListener("wheel",gt)},this.dispose=()=>{var F,j,wt,k,_t,Mt;n.domElement&&(n.domElement.style.touchAction="auto"),(F=n.domElement)==null||F.removeEventListener("contextmenu",kt),(j=n.domElement)==null||j.removeEventListener("pointerdown",Pt),(wt=n.domElement)==null||wt.removeEventListener("pointercancel",C),(k=n.domElement)==null||k.removeEventListener("wheel",gt),(_t=n.domElement)==null||_t.ownerDocument.removeEventListener("pointermove",O),(Mt=n.domElement)==null||Mt.ownerDocument.removeEventListener("pointerup",C),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",it)};const n=this,i={type:"change"},s={type:"start"},o={type:"end"},a={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let l=a.NONE;const c=1e-6,u=new Rf,h=new Rf;let d=1;const f=new L,p=new at,y=new at,m=new at,g=new at,w=new at,b=new at,M=new at,A=new at,S=new at,E=new L,x=new at;let v=!1;const _=[],T={};function I(){return 2*Math.PI/60/60*n.autoRotateSpeed}function B(){return Math.pow(.95,n.zoomSpeed)}function V(F){n.reverseOrbit||n.reverseHorizontalOrbit?h.theta+=F:h.theta-=F}function H(F){n.reverseOrbit||n.reverseVerticalOrbit?h.phi+=F:h.phi-=F}const U=(()=>{const F=new L;return function(j,wt){F.setFromMatrixColumn(wt,0),F.multiplyScalar(-j),f.add(F)}})(),Q=(()=>{const F=new L;return function(j,wt){n.screenSpacePanning===!0?F.setFromMatrixColumn(wt,1):(F.setFromMatrixColumn(wt,0),F.crossVectors(n.object.up,F)),F.multiplyScalar(j),f.add(F)}})(),W=(()=>{const F=new L;return function(j,wt){const k=n.domElement;if(k&&n.object instanceof Fe&&n.object.isPerspectiveCamera){const _t=n.object.position;F.copy(_t).sub(n.target);let Mt=F.length();Mt*=Math.tan(n.object.fov/2*Math.PI/180),U(2*j*Mt/k.clientHeight,n.object.matrix),Q(2*wt*Mt/k.clientHeight,n.object.matrix)}else k&&n.object instanceof ur&&n.object.isOrthographicCamera?(U(j*(n.object.right-n.object.left)/n.object.zoom/k.clientWidth,n.object.matrix),Q(wt*(n.object.top-n.object.bottom)/n.object.zoom/k.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function lt(F){n.object instanceof Fe&&n.object.isPerspectiveCamera||n.object instanceof ur&&n.object.isOrthographicCamera?d=F:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function ut(F){lt(d/F)}function mt(F){lt(d*F)}function Xt(F){if(!n.zoomToCursor||!n.domElement)return;v=!0;const j=n.domElement.getBoundingClientRect(),wt=F.clientX-j.left,k=F.clientY-j.top,_t=j.width,Mt=j.height;x.x=wt/_t*2-1,x.y=-(k/Mt)*2+1,E.set(x.x,x.y,1).unproject(n.object).sub(n.object.position).normalize()}function te(F){return Math.max(n.minDistance,Math.min(n.maxDistance,F))}function qt(F){p.set(F.clientX,F.clientY)}function $t(F){Xt(F),M.set(F.clientX,F.clientY)}function ct(F){g.set(F.clientX,F.clientY)}function pt(F){y.set(F.clientX,F.clientY),m.subVectors(y,p).multiplyScalar(n.rotateSpeed);const j=n.domElement;j&&(V(2*Math.PI*m.x/j.clientHeight),H(2*Math.PI*m.y/j.clientHeight)),p.copy(y),n.update()}function K(F){A.set(F.clientX,F.clientY),S.subVectors(A,M),S.y>0?ut(B()):S.y<0&&mt(B()),M.copy(A),n.update()}function R(F){w.set(F.clientX,F.clientY),b.subVectors(w,g).multiplyScalar(n.panSpeed),W(b.x,b.y),g.copy(w),n.update()}function D(F){Xt(F),F.deltaY<0?mt(B()):F.deltaY>0&&ut(B()),n.update()}function z(F){let j=!1;switch(F.code){case n.keys.UP:W(0,n.keyPanSpeed),j=!0;break;case n.keys.BOTTOM:W(0,-n.keyPanSpeed),j=!0;break;case n.keys.LEFT:W(n.keyPanSpeed,0),j=!0;break;case n.keys.RIGHT:W(-n.keyPanSpeed,0),j=!0;break}j&&(F.preventDefault(),n.update())}function J(){if(_.length==1)p.set(_[0].pageX,_[0].pageY);else{const F=.5*(_[0].pageX+_[1].pageX),j=.5*(_[0].pageY+_[1].pageY);p.set(F,j)}}function N(){if(_.length==1)g.set(_[0].pageX,_[0].pageY);else{const F=.5*(_[0].pageX+_[1].pageX),j=.5*(_[0].pageY+_[1].pageY);g.set(F,j)}}function G(){const F=_[0].pageX-_[1].pageX,j=_[0].pageY-_[1].pageY,wt=Math.sqrt(F*F+j*j);M.set(0,wt)}function Z(){n.enableZoom&&G(),n.enablePan&&N()}function tt(){n.enableZoom&&G(),n.enableRotate&&J()}function nt(F){if(_.length==1)y.set(F.pageX,F.pageY);else{const wt=Jt(F),k=.5*(F.pageX+wt.x),_t=.5*(F.pageY+wt.y);y.set(k,_t)}m.subVectors(y,p).multiplyScalar(n.rotateSpeed);const j=n.domElement;j&&(V(2*Math.PI*m.x/j.clientHeight),H(2*Math.PI*m.y/j.clientHeight)),p.copy(y)}function ht(F){if(_.length==1)w.set(F.pageX,F.pageY);else{const j=Jt(F),wt=.5*(F.pageX+j.x),k=.5*(F.pageY+j.y);w.set(wt,k)}b.subVectors(w,g).multiplyScalar(n.panSpeed),W(b.x,b.y),g.copy(w)}function dt(F){const j=Jt(F),wt=F.pageX-j.x,k=F.pageY-j.y,_t=Math.sqrt(wt*wt+k*k);A.set(0,_t),S.set(0,Math.pow(A.y/M.y,n.zoomSpeed)),ut(S.y),M.copy(A)}function yt(F){n.enableZoom&&dt(F),n.enablePan&&ht(F)}function It(F){n.enableZoom&&dt(F),n.enableRotate&&nt(F)}function Pt(F){var j,wt;n.enabled!==!1&&(_.length===0&&((j=n.domElement)==null||j.ownerDocument.addEventListener("pointermove",O),(wt=n.domElement)==null||wt.ownerDocument.addEventListener("pointerup",C)),Vt(F),F.pointerType==="touch"?Ft(F):q(F))}function O(F){n.enabled!==!1&&(F.pointerType==="touch"?Et(F):st(F))}function C(F){var j,wt,k;bt(F),_.length===0&&((j=n.domElement)==null||j.releasePointerCapture(F.pointerId),(wt=n.domElement)==null||wt.ownerDocument.removeEventListener("pointermove",O),(k=n.domElement)==null||k.ownerDocument.removeEventListener("pointerup",C)),n.dispatchEvent(o),l=a.NONE}function q(F){let j;switch(F.button){case 0:j=n.mouseButtons.LEFT;break;case 1:j=n.mouseButtons.MIDDLE;break;case 2:j=n.mouseButtons.RIGHT;break;default:j=-1}switch(j){case ki.DOLLY:if(n.enableZoom===!1)return;$t(F),l=a.DOLLY;break;case ki.ROTATE:if(F.ctrlKey||F.metaKey||F.shiftKey){if(n.enablePan===!1)return;ct(F),l=a.PAN}else{if(n.enableRotate===!1)return;qt(F),l=a.ROTATE}break;case ki.PAN:if(F.ctrlKey||F.metaKey||F.shiftKey){if(n.enableRotate===!1)return;qt(F),l=a.ROTATE}else{if(n.enablePan===!1)return;ct(F),l=a.PAN}break;default:l=a.NONE}l!==a.NONE&&n.dispatchEvent(s)}function st(F){if(n.enabled!==!1)switch(l){case a.ROTATE:if(n.enableRotate===!1)return;pt(F);break;case a.DOLLY:if(n.enableZoom===!1)return;K(F);break;case a.PAN:if(n.enablePan===!1)return;R(F);break}}function gt(F){n.enabled===!1||n.enableZoom===!1||l!==a.NONE&&l!==a.ROTATE||(F.preventDefault(),n.dispatchEvent(s),D(F),n.dispatchEvent(o))}function it(F){n.enabled===!1||n.enablePan===!1||z(F)}function Ft(F){switch(Rt(F),_.length){case 1:switch(n.touches.ONE){case sr.ROTATE:if(n.enableRotate===!1)return;J(),l=a.TOUCH_ROTATE;break;case sr.PAN:if(n.enablePan===!1)return;N(),l=a.TOUCH_PAN;break;default:l=a.NONE}break;case 2:switch(n.touches.TWO){case sr.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Z(),l=a.TOUCH_DOLLY_PAN;break;case sr.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;tt(),l=a.TOUCH_DOLLY_ROTATE;break;default:l=a.NONE}break;default:l=a.NONE}l!==a.NONE&&n.dispatchEvent(s)}function Et(F){switch(Rt(F),l){case a.TOUCH_ROTATE:if(n.enableRotate===!1)return;nt(F),n.update();break;case a.TOUCH_PAN:if(n.enablePan===!1)return;ht(F),n.update();break;case a.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;yt(F),n.update();break;case a.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;It(F),n.update();break;default:l=a.NONE}}function kt(F){n.enabled!==!1&&F.preventDefault()}function Vt(F){_.push(F)}function bt(F){delete T[F.pointerId];for(let j=0;j<_.length;j++)if(_[j].pointerId==F.pointerId){_.splice(j,1);return}}function Rt(F){let j=T[F.pointerId];j===void 0&&(j=new at,T[F.pointerId]=j),j.set(F.pageX,F.pageY)}function Jt(F){const j=F.pointerId===_[0].pointerId?_[1]:_[0];return T[j.pointerId]}this.dollyIn=(F=B())=>{mt(F),n.update()},this.dollyOut=(F=B())=>{ut(F),n.update()},this.getScale=()=>d,this.setScale=F=>{lt(F),n.update()},this.getZoomScale=()=>B(),e!==void 0&&this.connect(e),this.update()}}ym({screenspace:!1,color:new At("black"),opacity:1,thickness:.05,size:new at(1,1)},"#include <common>\n   #include <morphtarget_pars_vertex>\n   #include <skinning_pars_vertex>\n   uniform float thickness;\n   uniform bool screenspace;\n   uniform vec2 size;\n   void main() {\n     #if defined (USE_SKINNING)\n       #include <beginnormal_vertex>\n       #include <morphnormal_vertex>\n       #include <skinbase_vertex>\n       #include <skinnormal_vertex>\n       #include <defaultnormal_vertex>\n     #endif\n     #include <begin_vertex>\n     #include <morphtarget_vertex>\n     #include <skinning_vertex>\n     #include <project_vertex>\n     vec4 tNormal = vec4(normal, 0.0);\n     vec4 tPosition = vec4(transformed, 1.0);\n     #ifdef USE_INSTANCING\n       tNormal = instanceMatrix * tNormal;\n       tPosition = instanceMatrix * tPosition;\n     #endif\n     if (screenspace) {\n       vec3 newPosition = tPosition.xyz + tNormal.xyz * thickness;\n       gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0); \n     } else {\n       vec4 clipPosition = projectionMatrix * modelViewMatrix * tPosition;\n       vec4 clipNormal = projectionMatrix * modelViewMatrix * tNormal;\n       vec2 offset = normalize(clipNormal.xy) * thickness / size * clipPosition.w * 2.0;\n       clipPosition.xy += offset;\n       gl_Position = clipPosition;\n     }\n   }","uniform vec3 color;\n   uniform float opacity;\n   void main(){\n     gl_FragColor = vec4(color, opacity);\n     #include <tonemapping_fragment>\n     #include <colorspace_fragment>\n   }");const cL=["args","material-uniforms-color-value"];w_.ReflectorShader;new L;new L;new L;var Kd;/Mac/.test((Kd=globalThis==null?void 0:globalThis.navigator)===null||Kd===void 0?void 0:Kd.platform);const uL=["target","auto-rotate","auto-rotate-speed","enable-damping","damping-factor","enable-pan","key-pan-speed","keys","max-azimuth-angle","min-azimuth-angle","max-polar-angle","min-polar-angle","min-distance","max-distance","min-zoom","max-zoom","touches","enable-zoom","zoom-speed","enable-rotate","rotate-speed","mouse-buttons","args"],hL=fr({__name:"OrbitControls",props:{makeDefault:{type:Boolean,default:!1},camera:{},domElement:{},target:{default:()=>[0,0,0]},enableDamping:{type:Boolean,default:!0},dampingFactor:{default:.05},autoRotate:{type:Boolean,default:!1},autoRotateSpeed:{default:2},enablePan:{type:Boolean,default:!0},keyPanSpeed:{default:7},keys:{},maxAzimuthAngle:{default:Number.POSITIVE_INFINITY},minAzimuthAngle:{default:Number.NEGATIVE_INFINITY},maxPolarAngle:{default:Math.PI},minPolarAngle:{default:0},minDistance:{default:0},maxDistance:{default:Number.POSITIVE_INFINITY},minZoom:{default:0},maxZoom:{default:Number.POSITIVE_INFINITY},touches:{default:()=>({ONE:sr.ROTATE,TWO:sr.DOLLY_PAN})},enableZoom:{type:Boolean,default:!0},zoomSpeed:{default:1},enableRotate:{type:Boolean,default:!0},rotateSpeed:{default:1},mouseButtons:{default:()=>({LEFT:ki.ROTATE,MIDDLE:ki.DOLLY,RIGHT:ki.PAN})}},emits:["change","start","end"],setup(r,{expose:t,emit:e}){const n=r,i=e,{makeDefault:s,autoRotate:o,autoRotateSpeed:a,enableDamping:l,dampingFactor:c,enablePan:u,keyPanSpeed:h,maxAzimuthAngle:d,minAzimuthAngle:f,maxPolarAngle:p,minPolarAngle:y,minDistance:m,maxDistance:g,minZoom:w,maxZoom:b,enableZoom:M,zoomSpeed:A,enableRotate:S,touches:E,rotateSpeed:x,target:v,mouseButtons:_}=ih(n),{camera:T,renderer:I,extend:B,controls:V,invalidate:H}=Fh(),U=rn(null);B({OrbitControls:lL}),Xn(U,lt=>{Q(),lt&&s.value?V.value=lt:V.value=null});function Q(){Jd(U.value,"change",()=>{i("change",U.value),H()}),Jd(U.value,"start",()=>i("start",U.value)),Jd(U.value,"end",()=>i("end",U.value))}const{onBeforeRender:W}=Jx();return W(()=>{U.value&&(l.value||o.value)&&(U.value.update(),o.value)}),As(()=>{U.value&&U.value.dispose()}),t({instance:U}),(lt,ut)=>{var mt;return(r.camera||oe(T))&&(r.domElement||oe(I).domElement)?(Ye(),xn("TresOrbitControls",{ref_key:"controlsRef",ref:U,key:(mt=r.camera||oe(T))==null?void 0:mt.uuid,target:oe(v),"auto-rotate":oe(o),"auto-rotate-speed":oe(a),"enable-damping":oe(l),"damping-factor":oe(c),"enable-pan":oe(u),"key-pan-speed":oe(h),keys:r.keys,"max-azimuth-angle":oe(d),"min-azimuth-angle":oe(f),"max-polar-angle":oe(p),"min-polar-angle":oe(y),"min-distance":oe(m),"max-distance":oe(g),"min-zoom":oe(w),"max-zoom":oe(b),touches:oe(E),"enable-zoom":oe(M),"zoom-speed":oe(A),"enable-rotate":oe(S),"rotate-speed":oe(x),"mouse-buttons":oe(_),args:[r.camera||oe(T),r.domElement||oe(I).domElement]},null,8,uL)):nu("",!0)}}});function Nc(r){throw new Error('Could not dynamically require "'+r+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var A_={exports:{}},C_;function dL(){return C_||(C_=1,function(r,t){(function(e){r.exports=e()})(function(){return function e(n,i,s){function o(c,u){if(!i[c]){if(!n[c]){var h=typeof Nc=="function"&&Nc;if(!u&&h)return h(c,!0);if(a)return a(c,!0);throw new Error("Cannot find module '"+c+"'")}u=i[c]={exports:{}},n[c][0].call(u.exports,function(d){var f=n[c][1][d];return o(f||d)},u,u.exports,e,n,i,s)}return i[c].exports}for(var a=typeof Nc=="function"&&Nc,l=0;l<s.length;l++)o(s[l]);return o}({1:[function(e,n,i){(function(s,o,a,l,c,u,h,d,f){var p=e("crypto");function y(S,E){E=w(S,E);var x;return(x=E.algorithm!=="passthrough"?p.createHash(E.algorithm):new A).write===void 0&&(x.write=x.update,x.end=x.update),M(E,x).dispatch(S),x.update||x.end(""),x.digest?x.digest(E.encoding==="buffer"?void 0:E.encoding):(S=x.read(),E.encoding!=="buffer"?S.toString(E.encoding):S)}(i=n.exports=y).sha1=function(S){return y(S)},i.keys=function(S){return y(S,{excludeValues:!0,algorithm:"sha1",encoding:"hex"})},i.MD5=function(S){return y(S,{algorithm:"md5",encoding:"hex"})},i.keysMD5=function(S){return y(S,{algorithm:"md5",encoding:"hex",excludeValues:!0})};var m=p.getHashes?p.getHashes().slice():["sha1","md5"],g=(m.push("passthrough"),["buffer","hex","binary","base64"]);function w(S,E){var x={};if(x.algorithm=(E=E||{}).algorithm||"sha1",x.encoding=E.encoding||"hex",x.excludeValues=!!E.excludeValues,x.algorithm=x.algorithm.toLowerCase(),x.encoding=x.encoding.toLowerCase(),x.ignoreUnknown=E.ignoreUnknown===!0,x.respectType=E.respectType!==!1,x.respectFunctionNames=E.respectFunctionNames!==!1,x.respectFunctionProperties=E.respectFunctionProperties!==!1,x.unorderedArrays=E.unorderedArrays===!0,x.unorderedSets=E.unorderedSets!==!1,x.unorderedObjects=E.unorderedObjects!==!1,x.replacer=E.replacer||void 0,x.excludeKeys=E.excludeKeys||void 0,S===void 0)throw new Error("Object argument required.");for(var v=0;v<m.length;++v)m[v].toLowerCase()===x.algorithm.toLowerCase()&&(x.algorithm=m[v]);if(m.indexOf(x.algorithm)===-1)throw new Error('Algorithm "'+x.algorithm+'"  not supported. supported values: '+m.join(", "));if(g.indexOf(x.encoding)===-1&&x.algorithm!=="passthrough")throw new Error('Encoding "'+x.encoding+'"  not supported. supported values: '+g.join(", "));return x}function b(S){if(typeof S=="function")return/^function\s+\w*\s*\(\s*\)\s*{\s+\[native code\]\s+}$/i.exec(Function.prototype.toString.call(S))!=null}function M(S,E,x){x=x||[];function v(_){return E.update?E.update(_,"utf8"):E.write(_,"utf8")}return{dispatch:function(_){return this["_"+((_=S.replacer?S.replacer(_):_)===null?"null":typeof _)](_)},_object:function(_){var T,I=Object.prototype.toString.call(_),B=/\[object (.*)\]/i.exec(I);if(B=(B=B?B[1]:"unknown:["+I+"]").toLowerCase(),0<=(I=x.indexOf(_)))return this.dispatch("[CIRCULAR:"+I+"]");if(x.push(_),a!==void 0&&a.isBuffer&&a.isBuffer(_))return v("buffer:"),v(_);if(B==="object"||B==="function"||B==="asyncfunction")return I=Object.keys(_),S.unorderedObjects&&(I=I.sort()),S.respectType===!1||b(_)||I.splice(0,0,"prototype","__proto__","constructor"),S.excludeKeys&&(I=I.filter(function(V){return!S.excludeKeys(V)})),v("object:"+I.length+":"),T=this,I.forEach(function(V){T.dispatch(V),v(":"),S.excludeValues||T.dispatch(_[V]),v(",")});if(!this["_"+B]){if(S.ignoreUnknown)return v("["+B+"]");throw new Error('Unknown object type "'+B+'"')}this["_"+B](_)},_array:function(_,V){V=V!==void 0?V:S.unorderedArrays!==!1;var I=this;if(v("array:"+_.length+":"),!V||_.length<=1)return _.forEach(function(H){return I.dispatch(H)});var B=[],V=_.map(function(H){var U=new A,Q=x.slice();return M(S,U,Q).dispatch(H),B=B.concat(Q.slice(x.length)),U.read().toString()});return x=x.concat(B),V.sort(),this._array(V,!1)},_date:function(_){return v("date:"+_.toJSON())},_symbol:function(_){return v("symbol:"+_.toString())},_error:function(_){return v("error:"+_.toString())},_boolean:function(_){return v("bool:"+_.toString())},_string:function(_){v("string:"+_.length+":"),v(_.toString())},_function:function(_){v("fn:"),b(_)?this.dispatch("[native]"):this.dispatch(_.toString()),S.respectFunctionNames!==!1&&this.dispatch("function-name:"+String(_.name)),S.respectFunctionProperties&&this._object(_)},_number:function(_){return v("number:"+_.toString())},_xml:function(_){return v("xml:"+_.toString())},_null:function(){return v("Null")},_undefined:function(){return v("Undefined")},_regexp:function(_){return v("regex:"+_.toString())},_uint8array:function(_){return v("uint8array:"),this.dispatch(Array.prototype.slice.call(_))},_uint8clampedarray:function(_){return v("uint8clampedarray:"),this.dispatch(Array.prototype.slice.call(_))},_int8array:function(_){return v("int8array:"),this.dispatch(Array.prototype.slice.call(_))},_uint16array:function(_){return v("uint16array:"),this.dispatch(Array.prototype.slice.call(_))},_int16array:function(_){return v("int16array:"),this.dispatch(Array.prototype.slice.call(_))},_uint32array:function(_){return v("uint32array:"),this.dispatch(Array.prototype.slice.call(_))},_int32array:function(_){return v("int32array:"),this.dispatch(Array.prototype.slice.call(_))},_float32array:function(_){return v("float32array:"),this.dispatch(Array.prototype.slice.call(_))},_float64array:function(_){return v("float64array:"),this.dispatch(Array.prototype.slice.call(_))},_arraybuffer:function(_){return v("arraybuffer:"),this.dispatch(new Uint8Array(_))},_url:function(_){return v("url:"+_.toString())},_map:function(_){return v("map:"),_=Array.from(_),this._array(_,S.unorderedSets!==!1)},_set:function(_){return v("set:"),_=Array.from(_),this._array(_,S.unorderedSets!==!1)},_file:function(_){return v("file:"),this.dispatch([_.name,_.size,_.type,_.lastModfied])},_blob:function(){if(S.ignoreUnknown)return v("[blob]");throw Error('Hashing Blob objects is currently not supported\n(see https://github.com/puleos/object-hash/issues/26)\nUse "options.replacer" or "options.ignoreUnknown"\n')},_domwindow:function(){return v("domwindow")},_bigint:function(_){return v("bigint:"+_.toString())},_process:function(){return v("process")},_timer:function(){return v("timer")},_pipe:function(){return v("pipe")},_tcp:function(){return v("tcp")},_udp:function(){return v("udp")},_tty:function(){return v("tty")},_statwatcher:function(){return v("statwatcher")},_securecontext:function(){return v("securecontext")},_connection:function(){return v("connection")},_zlib:function(){return v("zlib")},_context:function(){return v("context")},_nodescript:function(){return v("nodescript")},_httpparser:function(){return v("httpparser")},_dataview:function(){return v("dataview")},_signal:function(){return v("signal")},_fsevent:function(){return v("fsevent")},_tlswrap:function(){return v("tlswrap")}}}function A(){return{buf:"",write:function(S){this.buf+=S},end:function(S){this.buf+=S},read:function(){return this.buf}}}i.writeToStream=function(S,E,x){return x===void 0&&(x=E,E={}),M(E=w(S,E),x).dispatch(S)}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/fake_9a5aa49d.js","/")},{buffer:3,crypto:5,lYpoI2:11}],2:[function(e,n,i){(function(s,o,a,l,c,u,h,d,f){(function(p){var y=typeof Uint8Array<"u"?Uint8Array:Array,m=43,g=47,w=48,b=97,M=65,A=45,S=95;function E(x){return x=x.charCodeAt(0),x===m||x===A?62:x===g||x===S?63:x<w?-1:x<w+10?x-w+26+26:x<M+26?x-M:x<b+26?x-b+26:void 0}p.toByteArray=function(x){var v,_;if(0<x.length%4)throw new Error("Invalid string. Length must be a multiple of 4");var T=x.length,T=x.charAt(T-2)==="="?2:x.charAt(T-1)==="="?1:0,I=new y(3*x.length/4-T),B=0<T?x.length-4:x.length,V=0;function H(U){I[V++]=U}for(v=0;v<B;v+=4,0)H((16711680&(_=E(x.charAt(v))<<18|E(x.charAt(v+1))<<12|E(x.charAt(v+2))<<6|E(x.charAt(v+3))))>>16),H((65280&_)>>8),H(255&_);return T==2?H(255&(_=E(x.charAt(v))<<2|E(x.charAt(v+1))>>4)):T==1&&(H((_=E(x.charAt(v))<<10|E(x.charAt(v+1))<<4|E(x.charAt(v+2))>>2)>>8&255),H(255&_)),I},p.fromByteArray=function(x){var v,_,T,I,B=x.length%3,V="";function H(U){return"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(U)}for(v=0,T=x.length-B;v<T;v+=3)_=(x[v]<<16)+(x[v+1]<<8)+x[v+2],V+=H((I=_)>>18&63)+H(I>>12&63)+H(I>>6&63)+H(63&I);switch(B){case 1:V=(V+=H((_=x[x.length-1])>>2))+H(_<<4&63)+"==";break;case 2:V=(V=(V+=H((_=(x[x.length-2]<<8)+x[x.length-1])>>10))+H(_>>4&63))+H(_<<2&63)+"="}return V}})(i===void 0?this.base64js={}:i)}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js","/node_modules/gulp-browserify/node_modules/base64-js/lib")},{buffer:3,lYpoI2:11}],3:[function(e,n,i){(function(s,o,m,l,c,u,h,d,f){var p=e("base64-js"),y=e("ieee754");function m(R,D,z){if(!(this instanceof m))return new m(R,D,z);var J,N,G,Z,tt=typeof R;if(D==="base64"&&tt=="string")for(R=(Z=R).trim?Z.trim():Z.replace(/^\s+|\s+$/g,"");R.length%4!=0;)R+="=";if(tt=="number")J=W(R);else if(tt=="string")J=m.byteLength(R,D);else{if(tt!="object")throw new Error("First argument needs to be a number, array or string.");J=W(R.length)}if(m._useTypedArrays?N=m._augment(new Uint8Array(J)):((N=this).length=J,N._isBuffer=!0),m._useTypedArrays&&typeof R.byteLength=="number")N._set(R);else if(lt(Z=R)||m.isBuffer(Z)||Z&&typeof Z=="object"&&typeof Z.length=="number")for(G=0;G<J;G++)m.isBuffer(R)?N[G]=R.readUInt8(G):N[G]=R[G];else if(tt=="string")N.write(R,0,D);else if(tt=="number"&&!m._useTypedArrays&&!z)for(G=0;G<J;G++)N[G]=0;return N}function g(R,D,z,J){return m._charsWritten=te(function(N){for(var G=[],Z=0;Z<N.length;Z++)G.push(255&N.charCodeAt(Z));return G}(D),R,z,J)}function w(R,D,z,J){return m._charsWritten=te(function(N){for(var G,Z,tt=[],nt=0;nt<N.length;nt++)Z=N.charCodeAt(nt),G=Z>>8,Z=Z%256,tt.push(Z),tt.push(G);return tt}(D),R,z,J)}function b(R,D,z){var J="";z=Math.min(R.length,z);for(var N=D;N<z;N++)J+=String.fromCharCode(R[N]);return J}function M(R,D,z,G){G||(K(typeof z=="boolean","missing or invalid endian"),K(D!=null,"missing offset"),K(D+1<R.length,"Trying to read beyond buffer length"));var N,G=R.length;if(!(G<=D))return z?(N=R[D],D+1<G&&(N|=R[D+1]<<8)):(N=R[D]<<8,D+1<G&&(N|=R[D+1])),N}function A(R,D,z,G){G||(K(typeof z=="boolean","missing or invalid endian"),K(D!=null,"missing offset"),K(D+3<R.length,"Trying to read beyond buffer length"));var N,G=R.length;if(!(G<=D))return z?(D+2<G&&(N=R[D+2]<<16),D+1<G&&(N|=R[D+1]<<8),N|=R[D],D+3<G&&(N+=R[D+3]<<24>>>0)):(D+1<G&&(N=R[D+1]<<16),D+2<G&&(N|=R[D+2]<<8),D+3<G&&(N|=R[D+3]),N+=R[D]<<24>>>0),N}function S(R,D,z,J){if(J||(K(typeof z=="boolean","missing or invalid endian"),K(D!=null,"missing offset"),K(D+1<R.length,"Trying to read beyond buffer length")),!(R.length<=D))return J=M(R,D,z,!0),32768&J?-1*(65535-J+1):J}function E(R,D,z,J){if(J||(K(typeof z=="boolean","missing or invalid endian"),K(D!=null,"missing offset"),K(D+3<R.length,"Trying to read beyond buffer length")),!(R.length<=D))return J=A(R,D,z,!0),2147483648&J?-1*(4294967295-J+1):J}function x(R,D,z,J){return J||(K(typeof z=="boolean","missing or invalid endian"),K(D+3<R.length,"Trying to read beyond buffer length")),y.read(R,D,z,23,4)}function v(R,D,z,J){return J||(K(typeof z=="boolean","missing or invalid endian"),K(D+7<R.length,"Trying to read beyond buffer length")),y.read(R,D,z,52,8)}function _(R,D,z,J,N){if(N||(K(D!=null,"missing value"),K(typeof J=="boolean","missing or invalid endian"),K(z!=null,"missing offset"),K(z+1<R.length,"trying to write beyond buffer length"),$t(D,65535)),N=R.length,!(N<=z))for(var G=0,Z=Math.min(N-z,2);G<Z;G++)R[z+G]=(D&255<<8*(J?G:1-G))>>>8*(J?G:1-G)}function T(R,D,z,J,N){if(N||(K(D!=null,"missing value"),K(typeof J=="boolean","missing or invalid endian"),K(z!=null,"missing offset"),K(z+3<R.length,"trying to write beyond buffer length"),$t(D,4294967295)),N=R.length,!(N<=z))for(var G=0,Z=Math.min(N-z,4);G<Z;G++)R[z+G]=D>>>8*(J?G:3-G)&255}function I(R,D,z,J,N){N||(K(D!=null,"missing value"),K(typeof J=="boolean","missing or invalid endian"),K(z!=null,"missing offset"),K(z+1<R.length,"Trying to write beyond buffer length"),ct(D,32767,-32768)),R.length<=z||_(R,0<=D?D:65535+D+1,z,J,N)}function B(R,D,z,J,N){N||(K(D!=null,"missing value"),K(typeof J=="boolean","missing or invalid endian"),K(z!=null,"missing offset"),K(z+3<R.length,"Trying to write beyond buffer length"),ct(D,2147483647,-2147483648)),R.length<=z||T(R,0<=D?D:4294967295+D+1,z,J,N)}function V(R,D,z,J,N){N||(K(D!=null,"missing value"),K(typeof J=="boolean","missing or invalid endian"),K(z!=null,"missing offset"),K(z+3<R.length,"Trying to write beyond buffer length"),pt(D,34028234663852886e22,-34028234663852886e22)),R.length<=z||y.write(R,D,z,J,23,4)}function H(R,D,z,J,N){N||(K(D!=null,"missing value"),K(typeof J=="boolean","missing or invalid endian"),K(z!=null,"missing offset"),K(z+7<R.length,"Trying to write beyond buffer length"),pt(D,17976931348623157e292,-17976931348623157e292)),R.length<=z||y.write(R,D,z,J,52,8)}i.Buffer=m,i.SlowBuffer=m,i.INSPECT_MAX_BYTES=50,m.poolSize=8192,m._useTypedArrays=function(){try{var R=new ArrayBuffer(0),D=new Uint8Array(R);return D.foo=function(){return 42},D.foo()===42&&typeof D.subarray=="function"}catch(z){return!1}}(),m.isEncoding=function(R){switch(String(R).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},m.isBuffer=function(R){return!(R==null||!R._isBuffer)},m.byteLength=function(R,D){var z;switch(R+="",D||"utf8"){case"hex":z=R.length/2;break;case"utf8":case"utf-8":z=mt(R).length;break;case"ascii":case"binary":case"raw":z=R.length;break;case"base64":z=Xt(R).length;break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":z=2*R.length;break;default:throw new Error("Unknown encoding")}return z},m.concat=function(R,D){if(K(lt(R),"Usage: Buffer.concat(list, [totalLength])\nlist should be an Array."),R.length===0)return new m(0);if(R.length===1)return R[0];if(typeof D!="number")for(N=D=0;N<R.length;N++)D+=R[N].length;for(var z=new m(D),J=0,N=0;N<R.length;N++){var G=R[N];G.copy(z,J),J+=G.length}return z},m.prototype.write=function(R,D,z,J){isFinite(D)?isFinite(z)||(J=z,z=void 0):(nt=J,J=D,D=z,z=nt),D=Number(D)||0;var N,G,Z,tt,nt=this.length-D;switch((!z||nt<(z=Number(z)))&&(z=nt),J=String(J||"utf8").toLowerCase()){case"hex":N=function(ht,dt,yt,It){yt=Number(yt)||0;var Pt=ht.length-yt;(!It||Pt<(It=Number(It)))&&(It=Pt),K((Pt=dt.length)%2==0,"Invalid hex string"),Pt/2<It&&(It=Pt/2);for(var O=0;O<It;O++){var C=parseInt(dt.substr(2*O,2),16);K(!isNaN(C),"Invalid hex string"),ht[yt+O]=C}return m._charsWritten=2*O,O}(this,R,D,z);break;case"utf8":case"utf-8":G=this,Z=D,tt=z,N=m._charsWritten=te(mt(R),G,Z,tt);break;case"ascii":case"binary":N=g(this,R,D,z);break;case"base64":G=this,Z=D,tt=z,N=m._charsWritten=te(Xt(R),G,Z,tt);break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":N=w(this,R,D,z);break;default:throw new Error("Unknown encoding")}return N},m.prototype.toString=function(R,D,z){var J,N,G,Z,tt=this;if(R=String(R||"utf8").toLowerCase(),D=Number(D)||0,(z=z!==void 0?Number(z):tt.length)===D)return"";switch(R){case"hex":J=function(nt,ht,dt){var yt=nt.length;(!ht||ht<0)&&(ht=0),(!dt||dt<0||yt<dt)&&(dt=yt);for(var It="",Pt=ht;Pt<dt;Pt++)It+=ut(nt[Pt]);return It}(tt,D,z);break;case"utf8":case"utf-8":J=function(nt,ht,dt){var yt="",It="";dt=Math.min(nt.length,dt);for(var Pt=ht;Pt<dt;Pt++)nt[Pt]<=127?(yt+=qt(It)+String.fromCharCode(nt[Pt]),It=""):It+="%"+nt[Pt].toString(16);return yt+qt(It)}(tt,D,z);break;case"ascii":case"binary":J=b(tt,D,z);break;case"base64":N=tt,Z=z,J=(G=D)===0&&Z===N.length?p.fromByteArray(N):p.fromByteArray(N.slice(G,Z));break;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":J=function(nt,ht,dt){for(var yt=nt.slice(ht,dt),It="",Pt=0;Pt<yt.length;Pt+=2)It+=String.fromCharCode(yt[Pt]+256*yt[Pt+1]);return It}(tt,D,z);break;default:throw new Error("Unknown encoding")}return J},m.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},m.prototype.copy=function(R,D,z,J){if(D=D||0,(J=J||J===0?J:this.length)!==(z=z||0)&&R.length!==0&&this.length!==0){K(z<=J,"sourceEnd < sourceStart"),K(0<=D&&D<R.length,"targetStart out of bounds"),K(0<=z&&z<this.length,"sourceStart out of bounds"),K(0<=J&&J<=this.length,"sourceEnd out of bounds"),J>this.length&&(J=this.length);var N=(J=R.length-D<J-z?R.length-D+z:J)-z;if(N<100||!m._useTypedArrays)for(var G=0;G<N;G++)R[G+D]=this[G+z];else R._set(this.subarray(z,z+N),D)}},m.prototype.slice=function(R,D){var z=this.length;if(R=Q(R,z,0),D=Q(D,z,z),m._useTypedArrays)return m._augment(this.subarray(R,D));for(var J=D-R,N=new m(J,void 0,!0),G=0;G<J;G++)N[G]=this[G+R];return N},m.prototype.get=function(R){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(R)},m.prototype.set=function(R,D){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(R,D)},m.prototype.readUInt8=function(R,D){if(D||(K(R!=null,"missing offset"),K(R<this.length,"Trying to read beyond buffer length")),!(R>=this.length))return this[R]},m.prototype.readUInt16LE=function(R,D){return M(this,R,!0,D)},m.prototype.readUInt16BE=function(R,D){return M(this,R,!1,D)},m.prototype.readUInt32LE=function(R,D){return A(this,R,!0,D)},m.prototype.readUInt32BE=function(R,D){return A(this,R,!1,D)},m.prototype.readInt8=function(R,D){if(D||(K(R!=null,"missing offset"),K(R<this.length,"Trying to read beyond buffer length")),!(R>=this.length))return 128&this[R]?-1*(255-this[R]+1):this[R]},m.prototype.readInt16LE=function(R,D){return S(this,R,!0,D)},m.prototype.readInt16BE=function(R,D){return S(this,R,!1,D)},m.prototype.readInt32LE=function(R,D){return E(this,R,!0,D)},m.prototype.readInt32BE=function(R,D){return E(this,R,!1,D)},m.prototype.readFloatLE=function(R,D){return x(this,R,!0,D)},m.prototype.readFloatBE=function(R,D){return x(this,R,!1,D)},m.prototype.readDoubleLE=function(R,D){return v(this,R,!0,D)},m.prototype.readDoubleBE=function(R,D){return v(this,R,!1,D)},m.prototype.writeUInt8=function(R,D,z){z||(K(R!=null,"missing value"),K(D!=null,"missing offset"),K(D<this.length,"trying to write beyond buffer length"),$t(R,255)),D>=this.length||(this[D]=R)},m.prototype.writeUInt16LE=function(R,D,z){_(this,R,D,!0,z)},m.prototype.writeUInt16BE=function(R,D,z){_(this,R,D,!1,z)},m.prototype.writeUInt32LE=function(R,D,z){T(this,R,D,!0,z)},m.prototype.writeUInt32BE=function(R,D,z){T(this,R,D,!1,z)},m.prototype.writeInt8=function(R,D,z){z||(K(R!=null,"missing value"),K(D!=null,"missing offset"),K(D<this.length,"Trying to write beyond buffer length"),ct(R,127,-128)),D>=this.length||(0<=R?this.writeUInt8(R,D,z):this.writeUInt8(255+R+1,D,z))},m.prototype.writeInt16LE=function(R,D,z){I(this,R,D,!0,z)},m.prototype.writeInt16BE=function(R,D,z){I(this,R,D,!1,z)},m.prototype.writeInt32LE=function(R,D,z){B(this,R,D,!0,z)},m.prototype.writeInt32BE=function(R,D,z){B(this,R,D,!1,z)},m.prototype.writeFloatLE=function(R,D,z){V(this,R,D,!0,z)},m.prototype.writeFloatBE=function(R,D,z){V(this,R,D,!1,z)},m.prototype.writeDoubleLE=function(R,D,z){H(this,R,D,!0,z)},m.prototype.writeDoubleBE=function(R,D,z){H(this,R,D,!1,z)},m.prototype.fill=function(R,D,z){if(D=D||0,z=z||this.length,K(typeof(R=typeof(R=R||0)=="string"?R.charCodeAt(0):R)=="number"&&!isNaN(R),"value is not a number"),K(D<=z,"end < start"),z!==D&&this.length!==0){K(0<=D&&D<this.length,"start out of bounds"),K(0<=z&&z<=this.length,"end out of bounds");for(var J=D;J<z;J++)this[J]=R}},m.prototype.inspect=function(){for(var R=[],D=this.length,z=0;z<D;z++)if(R[z]=ut(this[z]),z===i.INSPECT_MAX_BYTES){R[z+1]="...";break}return"<Buffer "+R.join(" ")+">"},m.prototype.toArrayBuffer=function(){if(typeof Uint8Array>"u")throw new Error("Buffer.toArrayBuffer not supported in this browser");if(m._useTypedArrays)return new m(this).buffer;for(var R=new Uint8Array(this.length),D=0,z=R.length;D<z;D+=1)R[D]=this[D];return R.buffer};var U=m.prototype;function Q(R,D,z){return typeof R!="number"?z:D<=(R=~~R)?D:0<=R||0<=(R+=D)?R:0}function W(R){return(R=~~Math.ceil(+R))<0?0:R}function lt(R){return(Array.isArray||function(D){return Object.prototype.toString.call(D)==="[object Array]"})(R)}function ut(R){return R<16?"0"+R.toString(16):R.toString(16)}function mt(R){for(var D=[],z=0;z<R.length;z++){var J=R.charCodeAt(z);if(J<=127)D.push(R.charCodeAt(z));else for(var N=z,G=(55296<=J&&J<=57343&&z++,encodeURIComponent(R.slice(N,z+1)).substr(1).split("%")),Z=0;Z<G.length;Z++)D.push(parseInt(G[Z],16))}return D}function Xt(R){return p.toByteArray(R)}function te(R,D,z,J){for(var N=0;N<J&&!(N+z>=D.length||N>=R.length);N++)D[N+z]=R[N];return N}function qt(R){try{return decodeURIComponent(R)}catch(D){return"�"}}function $t(R,D){K(typeof R=="number","cannot write a non-number as a number"),K(0<=R,"specified a negative value for writing an unsigned value"),K(R<=D,"value is larger than maximum value for type"),K(Math.floor(R)===R,"value has a fractional component")}function ct(R,D,z){K(typeof R=="number","cannot write a non-number as a number"),K(R<=D,"value larger than maximum allowed value"),K(z<=R,"value smaller than minimum allowed value"),K(Math.floor(R)===R,"value has a fractional component")}function pt(R,D,z){K(typeof R=="number","cannot write a non-number as a number"),K(R<=D,"value larger than maximum allowed value"),K(z<=R,"value smaller than minimum allowed value")}function K(R,D){if(!R)throw new Error(D||"Failed assertion")}m._augment=function(R){return R._isBuffer=!0,R._get=R.get,R._set=R.set,R.get=U.get,R.set=U.set,R.write=U.write,R.toString=U.toString,R.toLocaleString=U.toString,R.toJSON=U.toJSON,R.copy=U.copy,R.slice=U.slice,R.readUInt8=U.readUInt8,R.readUInt16LE=U.readUInt16LE,R.readUInt16BE=U.readUInt16BE,R.readUInt32LE=U.readUInt32LE,R.readUInt32BE=U.readUInt32BE,R.readInt8=U.readInt8,R.readInt16LE=U.readInt16LE,R.readInt16BE=U.readInt16BE,R.readInt32LE=U.readInt32LE,R.readInt32BE=U.readInt32BE,R.readFloatLE=U.readFloatLE,R.readFloatBE=U.readFloatBE,R.readDoubleLE=U.readDoubleLE,R.readDoubleBE=U.readDoubleBE,R.writeUInt8=U.writeUInt8,R.writeUInt16LE=U.writeUInt16LE,R.writeUInt16BE=U.writeUInt16BE,R.writeUInt32LE=U.writeUInt32LE,R.writeUInt32BE=U.writeUInt32BE,R.writeInt8=U.writeInt8,R.writeInt16LE=U.writeInt16LE,R.writeInt16BE=U.writeInt16BE,R.writeInt32LE=U.writeInt32LE,R.writeInt32BE=U.writeInt32BE,R.writeFloatLE=U.writeFloatLE,R.writeFloatBE=U.writeFloatBE,R.writeDoubleLE=U.writeDoubleLE,R.writeDoubleBE=U.writeDoubleBE,R.fill=U.fill,R.inspect=U.inspect,R.toArrayBuffer=U.toArrayBuffer,R}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/buffer/index.js","/node_modules/gulp-browserify/node_modules/buffer")},{"base64-js":2,buffer:3,ieee754:10,lYpoI2:11}],4:[function(e,n,i){(function(s,o,p,l,c,u,h,d,f){var p=e("buffer").Buffer,y=4,m=new p(y);m.fill(0),n.exports={hash:function(g,w,b,M){for(var A=w(function(_,T){_.length%y!=0&&(I=_.length+(y-_.length%y),_=p.concat([_,m],I));for(var I,B=[],V=T?_.readInt32BE:_.readInt32LE,H=0;H<_.length;H+=y)B.push(V.call(_,H));return B}(g=p.isBuffer(g)?g:new p(g),M),8*g.length),w=M,S=new p(b),E=w?S.writeInt32BE:S.writeInt32LE,x=0;x<A.length;x++)E.call(S,A[x],4*x,!0);return S}}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:11}],5:[function(e,n,i){(function(s,o,p,l,c,u,h,d,f){var p=e("buffer").Buffer,y=e("./sha"),m=e("./sha256"),g=e("./rng"),w={sha1:y,sha256:m,md5:e("./md5")},b=64,M=new p(b);function A(_,T){var I=w[_=_||"sha1"],B=[];return I||S("algorithm:",_,"is not yet supported"),{update:function(V){return p.isBuffer(V)||(V=new p(V)),B.push(V),V.length,this},digest:function(V){var H=p.concat(B),H=T?function(U,Q,W){p.isBuffer(Q)||(Q=new p(Q)),p.isBuffer(W)||(W=new p(W)),Q.length>b?Q=U(Q):Q.length<b&&(Q=p.concat([Q,M],b));for(var lt=new p(b),ut=new p(b),mt=0;mt<b;mt++)lt[mt]=54^Q[mt],ut[mt]=92^Q[mt];return W=U(p.concat([lt,W])),U(p.concat([ut,W]))}(I,T,H):I(H);return B=null,V?H.toString(V):H}}}function S(){var _=[].slice.call(arguments).join(" ");throw new Error([_,"we accept pull requests","http://github.com/dominictarr/crypto-browserify"].join("\n"))}M.fill(0),i.createHash=function(_){return A(_)},i.createHmac=A,i.randomBytes=function(_,T){if(!T||!T.call)return new p(g(_));try{T.call(this,void 0,new p(g(_)))}catch(I){T(I)}};var E,x=["createCredentials","createCipher","createCipheriv","createDecipher","createDecipheriv","createSign","createVerify","createDiffieHellman","pbkdf2"],v=function(_){i[_]=function(){S("sorry,",_,"is not implemented yet")}};for(E in x)v(x[E])}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./md5":6,"./rng":7,"./sha":8,"./sha256":9,buffer:3,lYpoI2:11}],6:[function(e,n,i){(function(s,o,a,l,c,u,h,d,f){var p=e("./helpers");function y(S,E){S[E>>5]|=128<<E%32,S[14+(E+64>>>9<<4)]=E;for(var x=1732584193,v=-271733879,_=-1732584194,T=271733878,I=0;I<S.length;I+=16){var B=x,V=v,H=_,U=T,x=g(x,v,_,T,S[I+0],7,-680876936),T=g(T,x,v,_,S[I+1],12,-389564586),_=g(_,T,x,v,S[I+2],17,606105819),v=g(v,_,T,x,S[I+3],22,-1044525330);x=g(x,v,_,T,S[I+4],7,-176418897),T=g(T,x,v,_,S[I+5],12,1200080426),_=g(_,T,x,v,S[I+6],17,-1473231341),v=g(v,_,T,x,S[I+7],22,-45705983),x=g(x,v,_,T,S[I+8],7,1770035416),T=g(T,x,v,_,S[I+9],12,-1958414417),_=g(_,T,x,v,S[I+10],17,-42063),v=g(v,_,T,x,S[I+11],22,-1990404162),x=g(x,v,_,T,S[I+12],7,1804603682),T=g(T,x,v,_,S[I+13],12,-40341101),_=g(_,T,x,v,S[I+14],17,-1502002290),x=w(x,v=g(v,_,T,x,S[I+15],22,1236535329),_,T,S[I+1],5,-165796510),T=w(T,x,v,_,S[I+6],9,-1069501632),_=w(_,T,x,v,S[I+11],14,643717713),v=w(v,_,T,x,S[I+0],20,-373897302),x=w(x,v,_,T,S[I+5],5,-701558691),T=w(T,x,v,_,S[I+10],9,38016083),_=w(_,T,x,v,S[I+15],14,-660478335),v=w(v,_,T,x,S[I+4],20,-405537848),x=w(x,v,_,T,S[I+9],5,568446438),T=w(T,x,v,_,S[I+14],9,-1019803690),_=w(_,T,x,v,S[I+3],14,-187363961),v=w(v,_,T,x,S[I+8],20,1163531501),x=w(x,v,_,T,S[I+13],5,-1444681467),T=w(T,x,v,_,S[I+2],9,-51403784),_=w(_,T,x,v,S[I+7],14,1735328473),x=b(x,v=w(v,_,T,x,S[I+12],20,-1926607734),_,T,S[I+5],4,-378558),T=b(T,x,v,_,S[I+8],11,-2022574463),_=b(_,T,x,v,S[I+11],16,1839030562),v=b(v,_,T,x,S[I+14],23,-35309556),x=b(x,v,_,T,S[I+1],4,-1530992060),T=b(T,x,v,_,S[I+4],11,1272893353),_=b(_,T,x,v,S[I+7],16,-155497632),v=b(v,_,T,x,S[I+10],23,-1094730640),x=b(x,v,_,T,S[I+13],4,681279174),T=b(T,x,v,_,S[I+0],11,-358537222),_=b(_,T,x,v,S[I+3],16,-722521979),v=b(v,_,T,x,S[I+6],23,76029189),x=b(x,v,_,T,S[I+9],4,-640364487),T=b(T,x,v,_,S[I+12],11,-421815835),_=b(_,T,x,v,S[I+15],16,530742520),x=M(x,v=b(v,_,T,x,S[I+2],23,-995338651),_,T,S[I+0],6,-198630844),T=M(T,x,v,_,S[I+7],10,1126891415),_=M(_,T,x,v,S[I+14],15,-1416354905),v=M(v,_,T,x,S[I+5],21,-57434055),x=M(x,v,_,T,S[I+12],6,1700485571),T=M(T,x,v,_,S[I+3],10,-1894986606),_=M(_,T,x,v,S[I+10],15,-1051523),v=M(v,_,T,x,S[I+1],21,-2054922799),x=M(x,v,_,T,S[I+8],6,1873313359),T=M(T,x,v,_,S[I+15],10,-30611744),_=M(_,T,x,v,S[I+6],15,-1560198380),v=M(v,_,T,x,S[I+13],21,1309151649),x=M(x,v,_,T,S[I+4],6,-145523070),T=M(T,x,v,_,S[I+11],10,-1120210379),_=M(_,T,x,v,S[I+2],15,718787259),v=M(v,_,T,x,S[I+9],21,-343485551),x=A(x,B),v=A(v,V),_=A(_,H),T=A(T,U)}return Array(x,v,_,T)}function m(S,E,x,v,_,T){return A((E=A(A(E,S),A(v,T)))<<_|E>>>32-_,x)}function g(S,E,x,v,_,T,I){return m(E&x|~E&v,S,E,_,T,I)}function w(S,E,x,v,_,T,I){return m(E&v|x&~v,S,E,_,T,I)}function b(S,E,x,v,_,T,I){return m(E^x^v,S,E,_,T,I)}function M(S,E,x,v,_,T,I){return m(x^(E|~v),S,E,_,T,I)}function A(S,E){var x=(65535&S)+(65535&E);return(S>>16)+(E>>16)+(x>>16)<<16|65535&x}n.exports=function(S){return p.hash(S,y,16)}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],7:[function(e,n,i){(function(s,o,a,l,c,u,h,d,f){n.exports=function(p){for(var y,m=new Array(p),g=0;g<p;g++)(3&g)==0&&(y=4294967296*Math.random()),m[g]=y>>>((3&g)<<3)&255;return m}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{buffer:3,lYpoI2:11}],8:[function(e,n,i){(function(s,o,a,l,c,u,h,d,f){var p=e("./helpers");function y(w,b){w[b>>5]|=128<<24-b%32,w[15+(b+64>>9<<4)]=b;for(var M,A,S,E=Array(80),x=1732584193,v=-271733879,_=-1732584194,T=271733878,I=-1009589776,B=0;B<w.length;B+=16){for(var V=x,H=v,U=_,Q=T,W=I,lt=0;lt<80;lt++){E[lt]=lt<16?w[B+lt]:g(E[lt-3]^E[lt-8]^E[lt-14]^E[lt-16],1);var ut=m(m(g(x,5),(ut=v,A=_,S=T,(M=lt)<20?ut&A|~ut&S:!(M<40)&&M<60?ut&A|ut&S|A&S:ut^A^S)),m(m(I,E[lt]),(M=lt)<20?1518500249:M<40?1859775393:M<60?-1894007588:-899497514)),I=T,T=_,_=g(v,30),v=x,x=ut}x=m(x,V),v=m(v,H),_=m(_,U),T=m(T,Q),I=m(I,W)}return Array(x,v,_,T,I)}function m(w,b){var M=(65535&w)+(65535&b);return(w>>16)+(b>>16)+(M>>16)<<16|65535&M}function g(w,b){return w<<b|w>>>32-b}n.exports=function(w){return p.hash(w,y,20,!0)}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],9:[function(e,n,i){(function(s,o,a,l,c,u,h,d,f){function p(b,M){var A=(65535&b)+(65535&M);return(b>>16)+(M>>16)+(A>>16)<<16|65535&A}function y(b,M){var A,S=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),E=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),x=new Array(64);b[M>>5]|=128<<24-M%32,b[15+(M+64>>9<<4)]=M;for(var v,_,T=0;T<b.length;T+=16){for(var I=E[0],B=E[1],V=E[2],H=E[3],U=E[4],Q=E[5],W=E[6],lt=E[7],ut=0;ut<64;ut++)x[ut]=ut<16?b[ut+T]:p(p(p((_=x[ut-2],g(_,17)^g(_,19)^w(_,10)),x[ut-7]),(_=x[ut-15],g(_,7)^g(_,18)^w(_,3))),x[ut-16]),A=p(p(p(p(lt,g(_=U,6)^g(_,11)^g(_,25)),U&Q^~U&W),S[ut]),x[ut]),v=p(g(v=I,2)^g(v,13)^g(v,22),I&B^I&V^B&V),lt=W,W=Q,Q=U,U=p(H,A),H=V,V=B,B=I,I=p(A,v);E[0]=p(I,E[0]),E[1]=p(B,E[1]),E[2]=p(V,E[2]),E[3]=p(H,E[3]),E[4]=p(U,E[4]),E[5]=p(Q,E[5]),E[6]=p(W,E[6]),E[7]=p(lt,E[7])}return E}var m=e("./helpers"),g=function(b,M){return b>>>M|b<<32-M},w=function(b,M){return b>>>M};n.exports=function(b){return m.hash(b,y,32,!0)}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js","/node_modules/gulp-browserify/node_modules/crypto-browserify")},{"./helpers":4,buffer:3,lYpoI2:11}],10:[function(e,n,i){(function(s,o,a,l,c,u,h,d,f){i.read=function(p,y,m,g,T){var b,M,A=8*T-g-1,S=(1<<A)-1,E=S>>1,x=-7,v=m?T-1:0,_=m?-1:1,T=p[y+v];for(v+=_,b=T&(1<<-x)-1,T>>=-x,x+=A;0<x;b=256*b+p[y+v],v+=_,x-=8);for(M=b&(1<<-x)-1,b>>=-x,x+=g;0<x;M=256*M+p[y+v],v+=_,x-=8);if(b===0)b=1-E;else{if(b===S)return M?NaN:1/0*(T?-1:1);M+=Math.pow(2,g),b-=E}return(T?-1:1)*M*Math.pow(2,b-g)},i.write=function(p,y,m,g,w,I){var M,A,S=8*I-w-1,E=(1<<S)-1,x=E>>1,v=w===23?Math.pow(2,-24)-Math.pow(2,-77):0,_=g?0:I-1,T=g?1:-1,I=y<0||y===0&&1/y<0?1:0;for(y=Math.abs(y),isNaN(y)||y===1/0?(A=isNaN(y)?1:0,M=E):(M=Math.floor(Math.log(y)/Math.LN2),y*(g=Math.pow(2,-M))<1&&(M--,g*=2),2<=(y+=1<=M+x?v/g:v*Math.pow(2,1-x))*g&&(M++,g/=2),E<=M+x?(A=0,M=E):1<=M+x?(A=(y*g-1)*Math.pow(2,w),M+=x):(A=y*Math.pow(2,x-1)*Math.pow(2,w),M=0));8<=w;p[m+_]=255&A,_+=T,A/=256,w-=8);for(M=M<<w|A,S+=w;0<S;p[m+_]=255&M,_+=T,M/=256,S-=8);p[m+_-T]|=128*I}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/ieee754/index.js","/node_modules/gulp-browserify/node_modules/ieee754")},{buffer:3,lYpoI2:11}],11:[function(e,n,i){(function(s,o,a,l,c,u,h,d,f){var p,y,m;function g(){}(s=n.exports={}).nextTick=(y=typeof window<"u"&&window.setImmediate,m=typeof window<"u"&&window.postMessage&&window.addEventListener,y?function(w){return window.setImmediate(w)}:m?(p=[],window.addEventListener("message",function(w){var b=w.source;b!==window&&b!==null||w.data!=="process-tick"||(w.stopPropagation(),0<p.length&&p.shift()())},!0),function(w){p.push(w),window.postMessage("process-tick","*")}):function(w){setTimeout(w,0)}),s.title="browser",s.browser=!0,s.env={},s.argv=[],s.on=g,s.addListener=g,s.once=g,s.off=g,s.removeListener=g,s.removeAllListeners=g,s.emit=g,s.binding=function(w){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(w){throw new Error("process.chdir is not supported")}}).call(this,e("lYpoI2"),typeof self<"u"?self:typeof window<"u"?window:{},e("buffer").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],"/node_modules/gulp-browserify/node_modules/process/browser.js","/node_modules/gulp-browserify/node_modules/process")},{buffer:3,lYpoI2:11}]},{},[1])(1)})}(A_)),A_.exports}dL();var R_,I_;function Bb(){return I_||(I_=1,R_=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","uint","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"]),R_}var N_,P_;function fL(){return P_||(P_=1,N_=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"]),N_}var L_,D_;function zb(){return D_||(D_=1,L_=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT"]),L_}var Qd,O_;function pL(){if(O_)return Qd;O_=1;var r=Bb();return Qd=r.slice().concat(["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray"]),Qd}var tf,U_;function mL(){if(U_)return tf;U_=1;var r=zb();return r=r.slice().filter(function(t){return!/^(gl\_|texture)/.test(t)}),tf=r.concat(["gl_VertexID","gl_InstanceID","gl_Position","gl_PointSize","gl_FragCoord","gl_FrontFacing","gl_FragDepth","gl_PointCoord","gl_MaxVertexAttribs","gl_MaxVertexUniformVectors","gl_MaxVertexOutputVectors","gl_MaxFragmentInputVectors","gl_MaxVertexTextureImageUnits","gl_MaxCombinedTextureImageUnits","gl_MaxTextureImageUnits","gl_MaxFragmentUniformVectors","gl_MaxDrawBuffers","gl_MinProgramTexelOffset","gl_MaxProgramTexelOffset","gl_DepthRangeParameters","gl_DepthRange","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"]),tf}var ef,F_;function gL(){if(F_)return ef;F_=1,ef=M;var r=Bb(),t=fL(),e=zb(),n=pL(),i=mL(),s=999,o=9999,a=0,l=1,c=2,u=3,h=4,d=5,f=6,p=7,y=8,m=9,g=10,w=11,b=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function M(A){var S=0,E=0,x=s,v,_,T=[],I=[],B=1,V=0,H=0,U=!1,Q=!1,W="",lt;A=A||{};var ut=e,mt=r;A.version==="300 es"&&(ut=i,mt=n);for(var Xt={},te={},S=0;S<ut.length;S++)Xt[ut[S]]=!0;for(var S=0;S<mt.length;S++)te[mt[S]]=!0;return function(ht){return I=[],ht!==null?$t(ht):ct()};function qt(ht){ht.length&&I.push({type:b[x],data:ht,position:H,line:B,column:V})}function $t(ht){S=0,ht.toString&&(ht=ht.toString()),W+=ht.replace(/\r\n/g,"\n"),lt=W.length;for(var dt;v=W[S],S<lt;){switch(dt=S,x){case a:S=z();break;case l:S=D();break;case c:S=R();break;case u:S=J();break;case h:S=Z();break;case w:S=G();break;case d:S=tt();break;case o:S=nt();break;case m:S=K();break;case s:S=pt();break}if(dt!==S)switch(W[dt]){case"\n":V=0,++B;break;default:++V;break}}return E+=S,W=W.slice(S),I}function ct(ht){return T.length&&qt(T.join("")),x=g,qt("(eof)"),I}function pt(){return T=T.length?[]:T,_==="/"&&v==="*"?(H=E+S-1,x=a,_=v,S+1):_==="/"&&v==="/"?(H=E+S-1,x=l,_=v,S+1):v==="#"?(x=c,H=E+S,S):/\s/.test(v)?(x=m,H=E+S,S):(U=/\d/.test(v),Q=/[^\w_]/.test(v),H=E+S,x=U?h:Q?u:o,S)}function K(){return/[^\s]/g.test(v)?(qt(T.join("")),x=s,S):(T.push(v),_=v,S+1)}function R(){return(v==="\r"||v==="\n")&&_!=="\\"?(qt(T.join("")),x=s,S):(T.push(v),_=v,S+1)}function D(){return R()}function z(){return v==="/"&&_==="*"?(T.push(v),qt(T.join("")),x=s,S+1):(T.push(v),_=v,S+1)}function J(){if(_==="."&&/\d/.test(v))return x=d,S;if(_==="/"&&v==="*")return x=a,S;if(_==="/"&&v==="/")return x=l,S;if(v==="."&&T.length){for(;N(T););return x=d,S}if(v===";"||v===")"||v==="("){if(T.length)for(;N(T););return qt(v),x=s,S+1}var ht=T.length===2&&v!=="=";if(/[\w_\d\s]/.test(v)||ht){for(;N(T););return x=s,S}return T.push(v),_=v,S+1}function N(ht){var dt=0,yt,It;do{if(yt=t.indexOf(ht.slice(0,ht.length+dt).join("")),It=t[yt],yt===-1){if(dt--+ht.length>0)continue;It=ht.slice(0,1).join("")}return qt(It),H+=It.length,T=T.slice(It.length),T.length}while(!0)}function G(){return/[^a-fA-F0-9]/.test(v)?(qt(T.join("")),x=s,S):(T.push(v),_=v,S+1)}function Z(){return v==="."||/[eE]/.test(v)?(T.push(v),x=d,_=v,S+1):v==="x"&&T.length===1&&T[0]==="0"?(x=w,T.push(v),_=v,S+1):/[^\d]/.test(v)?(qt(T.join("")),x=s,S):(T.push(v),_=v,S+1)}function tt(){return v==="f"&&(T.push(v),_=v,S+=1),/[eE]/.test(v)||(v==="-"||v==="+")&&/[eE]/.test(_)?(T.push(v),_=v,S+1):/[^\d]/.test(v)?(qt(T.join("")),x=s,S):(T.push(v),_=v,S+1)}function nt(){if(/[^\d\w_]/.test(v)){var ht=T.join("");return te[ht]?x=y:Xt[ht]?x=p:x=f,qt(T.join("")),x=s,S}return T.push(v),_=v,S+1}}return ef}var nf,B_;function yL(){if(B_)return nf;B_=1;var r=gL();nf=t;function t(e,n){var i=r(n),s=[];return s=s.concat(i(e)),s=s.concat(i(null)),s}return nf}yL();function _L(r,t){if(typeof r!="object"||r===null)return r;var e=r[Symbol.toPrimitive];if(e!==void 0){var n=e.call(r,t);if(typeof n!="object")return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(r)}function vL(r){var t=_L(r,"string");return typeof t=="symbol"?t:String(t)}function Re(r,t,e){return t=vL(t),t in r?Object.defineProperty(r,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[t]=e,r}var ae={position:"csm_Position",positionRaw:"csm_PositionRaw",pointSize:"csm_PointSize",fragColor:"csm_FragColor",diffuseColor:"csm_DiffuseColor",normal:"csm_Normal",roughness:"csm_Roughness",metalness:"csm_Metalness",emissive:"csm_Emissive",ao:"csm_AO",bump:"csm_Bump",depthAlpha:"csm_DepthAlpha"},Bn,lo;Bn={},Re(Bn,"".concat(ae.normal),{"#include <beginnormal_vertex>":"\n    vec3 objectNormal = ".concat(ae.normal,";\n    #ifdef USE_TANGENT\n	    vec3 objectTangent = vec3( tangent.xyz );\n    #endif\n    ")}),Re(Bn,"".concat(ae.position),{"#include <begin_vertex>":"\n    vec3 transformed = ".concat(ae.position,";\n  ")}),Re(Bn,"".concat(ae.positionRaw),{"#include <begin_vertex>":"\n    vec4 csm_internal_positionUnprojected = ".concat(ae.positionRaw,";\n    mat4x4 csm_internal_unprojectMatrix = projectionMatrix * modelViewMatrix;\n    #ifdef USE_INSTANCING\n      csm_internal_unprojectMatrix = csm_internal_unprojectMatrix * instanceMatrix;\n    #endif\n    csm_internal_positionUnprojected = inverse(csm_internal_unprojectMatrix) * csm_internal_positionUnprojected;\n    vec3 transformed = csm_internal_positionUnprojected.xyz;\n  ")}),Re(Bn,"".concat(ae.pointSize),{"gl_PointSize = size;":"\n    gl_PointSize = ".concat(ae.pointSize,";\n    ")}),Re(Bn,"".concat(ae.diffuseColor),{"#include <color_fragment>":"\n    #include <color_fragment>\n    diffuseColor = ".concat(ae.diffuseColor,";\n  ")}),Re(Bn,"".concat(ae.fragColor),{"#include <dithering_fragment>":"\n    #include <dithering_fragment>\n    gl_FragColor  = ".concat(ae.fragColor,";\n  ")}),Re(Bn,"".concat(ae.emissive),{"vec3 totalEmissiveRadiance = emissive;":"\n    vec3 totalEmissiveRadiance = ".concat(ae.emissive,";\n    ")}),Re(Bn,"".concat(ae.roughness),{"#include <roughnessmap_fragment>":"\n    #include <roughnessmap_fragment>\n    roughnessFactor = ".concat(ae.roughness,";\n    ")}),Re(Bn,"".concat(ae.metalness),{"#include <metalnessmap_fragment>":"\n    #include <metalnessmap_fragment>\n    metalnessFactor = ".concat(ae.metalness,";\n    ")}),Re(Bn,"".concat(ae.ao),{"#include <aomap_fragment>":"\n    #include <aomap_fragment>\n    reflectedLight.indirectDiffuse *= 1. - ".concat(ae.ao,";\n    ")}),Re(Bn,"".concat(ae.bump),{"#include <normal_fragment_maps>":"\n    #include <normal_fragment_maps>\n\n    vec3 csm_internal_orthogonal = ".concat(ae.bump," - (dot(").concat(ae.bump,", normal) * normal);\n    vec3 csm_internal_projectedbump = mat3(csm_internal_vModelViewMatrix) * csm_internal_orthogonal;\n    normal = normalize(normal - csm_internal_projectedbump);\n    ")}),Re(Bn,"".concat(ae.depthAlpha),{"gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );":"\n      gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity * ".concat(ae.depthAlpha," );\n    "),"gl_FragColor = packDepthToRGBA( fragCoordZ );":"\n      gl_FragColor = packDepthToRGBA( fragCoordZ );\n      gl_FragColor.a *= ".concat(ae.depthAlpha,";\n    ")});lo={},Re(lo,"".concat(ae.position),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":"\n    gl_Position = projectionMatrix * modelViewMatrix * vec4( ".concat(ae.position,", 1.0 );\n  ")}),Re(lo,"".concat(ae.positionRaw),{"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );":"\n    gl_Position = ".concat(ae.position,";\n  ")}),Re(lo,"".concat(ae.diffuseColor),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":"\n    gl_FragColor = ".concat(ae.diffuseColor,";\n  ")}),Re(lo,"".concat(ae.fragColor),{"gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );":"\n    gl_FragColor = ".concat(ae.fragColor,";\n  ")});var zn;zn={},Re(zn,"".concat(ae.position),"*"),Re(zn,"".concat(ae.positionRaw),"*"),Re(zn,"".concat(ae.normal),"*"),Re(zn,"".concat(ae.pointSize),["PointsMaterial"]),Re(zn,"".concat(ae.diffuseColor),"*"),Re(zn,"".concat(ae.fragColor),"*"),Re(zn,"".concat(ae.emissive),["MeshStandardMaterial","MeshPhysicalMaterial"]),Re(zn,"".concat(ae.roughness),["MeshStandardMaterial","MeshPhysicalMaterial"]),Re(zn,"".concat(ae.metalness),["MeshStandardMaterial","MeshPhysicalMaterial"]),Re(zn,"".concat(ae.ao),["MeshStandardMaterial","MeshPhysicalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial"]),Re(zn,"".concat(ae.bump),["MeshLambertMaterial","MeshMatcapMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshPhysicalMaterial","MeshStandardMaterial","MeshToonMaterial","ShadowMaterial"]),Re(zn,"".concat(ae.depthAlpha),"*");/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const kb="180",Vb=1,xL=2,Zf=0,_m=300,Hb=301,bL=302,z_=1e3,Pc=1001,k_=1002,Go=1003,Jf=1006,Gb=1008,ML=1009,SL=1013,Wb=1014,wL=1015,TL=1016,EL=1023,V_=1026,AL=1027,H_=0,CL=1,Ku="",Si="srgb",G_="srgb-linear",W_="linear",Fa="srgb",Qu=35044,vs=2e3,th=2001;class Hh{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[t]===void 0&&(n[t]=[]),n[t].indexOf(e)===-1&&n[t].push(e)}hasEventListener(t,e){const n=this._listeners;return n===void 0?!1:n[t]!==void 0&&n[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners;if(n===void 0)return;const i=n[t];if(i!==void 0){const s=i.indexOf(e);s!==-1&&i.splice(s,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const n=e[t.type];if(n!==void 0){t.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,t);t.target=null}}}const yn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let X_=1234567;const Xb=Math.PI/180,$b=180/Math.PI;function ws(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(yn[r&255]+yn[r>>8&255]+yn[r>>16&255]+yn[r>>24&255]+"-"+yn[t&255]+yn[t>>8&255]+"-"+yn[t>>16&15|64]+yn[t>>24&255]+"-"+yn[e&63|128]+yn[e>>8&255]+"-"+yn[e>>16&255]+yn[e>>24&255]+yn[n&255]+yn[n>>8&255]+yn[n>>16&255]+yn[n>>24&255]).toLowerCase()}function me(r,t,e){return Math.max(t,Math.min(e,r))}function vm(r,t){return(r%t+t)%t}function RL(r,t,e,n,i){return n+(r-t)*(i-n)/(e-t)}function IL(r,t,e){return r!==t?(e-r)/(t-r):0}function Ba(r,t,e){return(1-e)*r+e*t}function NL(r,t,e,n){return Ba(r,t,1-Math.exp(-e*n))}function PL(r,t=1){return t-Math.abs(vm(r,t*2)-t)}function LL(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*(3-2*r))}function DL(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*r*(r*(r*6-15)+10))}function OL(r,t){return r+Math.floor(Math.random()*(t-r+1))}function UL(r,t){return r+Math.random()*(t-r)}function FL(r){return r*(.5-Math.random())}function BL(r){r!==void 0&&(X_=r);let t=X_+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function zL(r){return r*Xb}function kL(r){return r*$b}function VL(r){return(r&r-1)===0&&r!==0}function HL(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function GL(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function WL(r,t,e,n,i){const s=Math.cos,o=Math.sin,a=s(e/2),l=o(e/2),c=s((t+n)/2),u=o((t+n)/2),h=s((t-n)/2),d=o((t-n)/2),f=s((n-t)/2),p=o((n-t)/2);switch(i){case"XYX":r.set(a*u,l*h,l*d,a*c);break;case"YZY":r.set(l*d,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*d,a*u,a*c);break;case"XZX":r.set(a*u,l*p,l*f,a*c);break;case"YXY":r.set(l*f,a*u,l*p,a*c);break;case"ZYZ":r.set(l*p,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Ti(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Ae(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const XL={DEG2RAD:Xb,RAD2DEG:$b,generateUUID:ws,clamp:me,euclideanModulo:vm,mapLinear:RL,inverseLerp:IL,lerp:Ba,damp:NL,pingpong:PL,smoothstep:LL,smootherstep:DL,randInt:OL,randFloat:UL,randFloatSpread:FL,seededRandom:BL,degToRad:zL,radToDeg:kL,isPowerOfTwo:VL,ceilPowerOfTwo:HL,floorPowerOfTwo:GL,setQuaternionFromProperEuler:WL,normalize:Ae,denormalize:Ti};class fi{constructor(t=0,e=0){fi.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6],this.y=i[1]*e+i[4]*n+i[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=me(this.x,t.x,e.x),this.y=me(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=me(this.x,t,e),this.y=me(this.y,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(me(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(me(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),i=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*n-o*i+t.x,this.y=s*i+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class El{constructor(t=0,e=0,n=0,i=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=n,this._w=i}static slerpFlat(t,e,n,i,s,o,a){let l=n[i+0],c=n[i+1],u=n[i+2],h=n[i+3];const d=s[o+0],f=s[o+1],p=s[o+2],y=s[o+3];if(a===0){t[e+0]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=y;return}if(h!==y||l!==d||c!==f||u!==p){let m=1-a;const g=l*d+c*f+u*p+h*y,w=g>=0?1:-1,b=1-g*g;if(b>Number.EPSILON){const A=Math.sqrt(b),S=Math.atan2(A,g*w);m=Math.sin(m*S)/A,a=Math.sin(a*S)/A}const M=a*w;if(l=l*m+d*M,c=c*m+f*M,u=u*m+p*M,h=h*m+y*M,m===1-a){const A=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=A,c*=A,u*=A,h*=A}}t[e]=l,t[e+1]=c,t[e+2]=u,t[e+3]=h}static multiplyQuaternionsFlat(t,e,n,i,s,o){const a=n[i],l=n[i+1],c=n[i+2],u=n[i+3],h=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return t[e]=a*p+u*h+l*f-c*d,t[e+1]=l*p+u*d+c*h-a*f,t[e+2]=c*p+u*f+a*d-l*h,t[e+3]=u*p-a*h-l*d-c*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,i){return this._x=t,this._y=e,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const n=t._x,i=t._y,s=t._z,o=t._order,a=Math.cos,l=Math.sin,c=a(n/2),u=a(i/2),h=a(s/2),d=l(n/2),f=l(i/2),p=l(s/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,i=Math.sin(n);return this._x=t.x*i,this._y=t.y*i,this._z=t.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],i=e[4],s=e[8],o=e[1],a=e[5],l=e[9],c=e[2],u=e[6],h=e[10],d=n+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(s-c)*f,this._z=(o-i)*f}else if(n>a&&n>h){const f=2*Math.sqrt(1+n-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(i+o)/f,this._z=(s+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-n-h);this._w=(s-c)/f,this._x=(i+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-n-a);this._w=(o-i)/f,this._x=(s+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-8?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(me(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(n===0)return this;const i=Math.min(1,e/n);return this.slerp(t,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,i=t._y,s=t._z,o=t._w,a=e._x,l=e._y,c=e._z,u=e._w;return this._x=n*u+o*a+i*c-s*l,this._y=i*u+o*l+s*a-n*c,this._z=s*u+o*c+n*l-i*a,this._w=o*u-n*a-i*l-s*c,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*t._w+n*t._x+i*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*n+e*this._x,this._y=f*i+e*this._y,this._z=f*s+e*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-e)*u)/c,d=Math.sin(e*u)/c;return this._w=o*h+this._w*d,this._x=n*h+this._x*d,this._y=i*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,n){return this.copy(t).slerp(e,n)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),n=Math.random(),i=Math.sqrt(1-n),s=Math.sqrt(n);return this.set(i*Math.sin(t),i*Math.cos(t),s*Math.sin(e),s*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class Wt{constructor(t=0,e=0,n=0){Wt.prototype.isVector3=!0,this.x=t,this.y=e,this.z=n}set(t,e,n){return n===void 0&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion($_.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion($_.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[3]*n+s[6]*i,this.y=s[1]*e+s[4]*n+s[7]*i,this.z=s[2]*e+s[5]*n+s[8]*i,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=t.elements,o=1/(s[3]*e+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*e+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*e+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*e+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,i=this.z,s=t.x,o=t.y,a=t.z,l=t.w,c=2*(o*i-a*n),u=2*(a*e-s*i),h=2*(s*n-o*e);return this.x=e+l*c+o*h-a*u,this.y=n+l*u+a*c-s*h,this.z=i+l*h+s*u-o*c,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,i=this.z,s=t.elements;return this.x=s[0]*e+s[4]*n+s[8]*i,this.y=s[1]*e+s[5]*n+s[9]*i,this.z=s[2]*e+s[6]*n+s[10]*i,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=me(this.x,t.x,e.x),this.y=me(this.y,t.y,e.y),this.z=me(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=me(this.x,t,e),this.y=me(this.y,t,e),this.z=me(this.z,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(me(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,i=t.y,s=t.z,o=e.x,a=e.y,l=e.z;return this.x=i*l-s*a,this.y=s*o-n*l,this.z=n*a-i*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return rf.copy(this).projectOnVector(t),this.sub(rf)}reflect(t){return this.sub(rf.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(me(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,i=this.z-t.z;return e*e+n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const i=Math.sin(e)*t;return this.x=i*Math.sin(n),this.y=Math.cos(e)*t,this.z=i*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),i=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=i,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,n=Math.sqrt(1-e*e);return this.x=n*Math.cos(t),this.y=e,this.z=n*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const rf=new Wt,$_=new El;class Ni{constructor(t,e,n,i,s,o,a,l,c){Ni.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c)}set(t,e,n,i,s,o,a,l,c){const u=this.elements;return u[0]=t,u[1]=i,u[2]=a,u[3]=e,u[4]=s,u[5]=l,u[6]=n,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[3],l=n[6],c=n[1],u=n[4],h=n[7],d=n[2],f=n[5],p=n[8],y=i[0],m=i[3],g=i[6],w=i[1],b=i[4],M=i[7],A=i[2],S=i[5],E=i[8];return s[0]=o*y+a*w+l*A,s[3]=o*m+a*b+l*S,s[6]=o*g+a*M+l*E,s[1]=c*y+u*w+h*A,s[4]=c*m+u*b+h*S,s[7]=c*g+u*M+h*E,s[2]=d*y+f*w+p*A,s[5]=d*m+f*b+p*S,s[8]=d*g+f*M+p*E,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8];return e*o*u-e*a*c-n*s*u+n*a*l+i*s*c-i*o*l}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=u*o-a*c,d=a*l-u*s,f=c*s-o*l,p=e*h+n*d+i*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/p;return t[0]=h*y,t[1]=(i*c-u*n)*y,t[2]=(a*n-i*o)*y,t[3]=d*y,t[4]=(u*e-i*l)*y,t[5]=(i*s-a*e)*y,t[6]=f*y,t[7]=(n*l-c*e)*y,t[8]=(o*e-n*s)*y,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,i,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(n*l,n*c,-n*(l*o+c*a)+o+t,-i*c,i*l,-i*(-c*o+l*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(sf.makeScale(t,e)),this}rotate(t){return this.premultiply(sf.makeRotation(-t)),this}translate(t,e){return this.premultiply(sf.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,n,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<9;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const sf=new Ni;function Y_(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const q_={};function j_(r){r in q_||(q_[r]=!0,console.warn(r))}const Z_=new Ni().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),J_=new Ni().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function $L(){const r={enabled:!0,workingColorSpace:G_,spaces:{},convert:function(i,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===Fa&&(i.r=hr(i.r),i.g=hr(i.g),i.b=hr(i.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(i.applyMatrix3(this.spaces[s].toXYZ),i.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Fa&&(i.r=Ao(i.r),i.g=Ao(i.g),i.b=Ao(i.b))),i},workingToColorSpace:function(i,s){return this.convert(i,this.workingColorSpace,s)},colorSpaceToWorking:function(i,s){return this.convert(i,s,this.workingColorSpace)},getPrimaries:function(i){return this.spaces[i].primaries},getTransfer:function(i){return i===Ku?W_:this.spaces[i].transfer},getToneMappingMode:function(i){return this.spaces[i].outputColorSpaceConfig.toneMappingMode||"standard"},getLuminanceCoefficients:function(i,s=this.workingColorSpace){return i.fromArray(this.spaces[s].luminanceCoefficients)},define:function(i){Object.assign(this.spaces,i)},_getMatrix:function(i,s,o){return i.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(i){return this.spaces[i].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(i=this.workingColorSpace){return this.spaces[i].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(i,s){return j_("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),r.workingToColorSpace(i,s)},toWorkingColorSpace:function(i,s){return j_("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),r.colorSpaceToWorking(i,s)}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],n=[.3127,.329];return r.define({[G_]:{primaries:t,whitePoint:n,transfer:W_,toXYZ:Z_,fromXYZ:J_,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:Si},outputColorSpaceConfig:{drawingBufferColorSpace:Si}},[Si]:{primaries:t,whitePoint:n,transfer:Fa,toXYZ:Z_,fromXYZ:J_,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:Si}}}),r}const Qe=$L();function hr(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Ao(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let co;class YL{static getDataURL(t,e="image/png"){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{co===void 0&&(co=Y_("canvas")),co.width=t.width,co.height=t.height;const i=co.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=co}return n.toDataURL(e)}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Y_("canvas");e.width=t.width,e.height=t.height;const n=e.getContext("2d");n.drawImage(t,0,0,t.width,t.height);const i=n.getImageData(0,0,t.width,t.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=hr(s[o]/255)*255;return n.putImageData(i,0,0),e}else if(t.data){const e=t.data.slice(0);for(let n=0;n<e.length;n++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[n]=Math.floor(hr(e[n]/255)*255):e[n]=hr(e[n]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let qL=0;class xm{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:qL++}),this.uuid=ws(),this.data=t,this.dataReady=!0,this.version=0}getSize(t){const e=this.data;return typeof HTMLVideoElement<"u"&&e instanceof HTMLVideoElement?t.set(e.videoWidth,e.videoHeight,0):e instanceof VideoFrame?t.set(e.displayHeight,e.displayWidth,0):e!==null?t.set(e.width,e.height,e.depth||0):t.set(0,0,0),t}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(of(i[o].image)):s.push(of(i[o]))}else s=of(i);n.url=s}return e||(t.images[this.uuid]=n),n}}function of(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?YL.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let jL=0;const af=new Wt;class pi extends Hh{constructor(t=pi.DEFAULT_IMAGE,e=pi.DEFAULT_MAPPING,n=Pc,i=Pc,s=Jf,o=Gb,a=EL,l=ML,c=pi.DEFAULT_ANISOTROPY,u=Ku){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:jL++}),this.uuid=ws(),this.name="",this.source=new xm(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new fi(0,0),this.repeat=new fi(1,1),this.center=new fi(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ni,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(t&&t.depth&&t.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(af).x}get height(){return this.source.getSize(af).y}get depth(){return this.source.getSize(af).z}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.isArrayTexture=t.isArrayTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}setValues(t){for(const e in t){const n=t[e];if(n===void 0){console.warn("THREE.Texture.setValues(): parameter '".concat(e,"' has value of undefined."));continue}const i=this[e];if(i===void 0){console.warn("THREE.Texture.setValues(): property '".concat(e,"' does not exist."));continue}i&&n&&i.isVector2&&n.isVector2||i&&n&&i.isVector3&&n.isVector3||i&&n&&i.isMatrix3&&n.isMatrix3?i.copy(n):this[e]=n}}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const n={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),e||(t.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==_m)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case z_:t.x=t.x-Math.floor(t.x);break;case Pc:t.x=t.x<0?0:1;break;case k_:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case z_:t.y=t.y-Math.floor(t.y);break;case Pc:t.y=t.y<0?0:1;break;case k_:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}pi.DEFAULT_IMAGE=null;pi.DEFAULT_MAPPING=_m;pi.DEFAULT_ANISOTROPY=1;class $i{constructor(t=0,e=0,n=0,i=1){$i.prototype.isVector4=!0,this.x=t,this.y=e,this.z=n,this.w=i}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,i){return this.x=t,this.y=e,this.z=n,this.w=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,i=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*e+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*e+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*e+o[7]*n+o[11]*i+o[15]*s,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,i,s;const o=t.elements,a=o[0],l=o[4],c=o[8],u=o[1],h=o[5],d=o[9],f=o[2],p=o[6],y=o[10];if(Math.abs(l-u)<.01&&Math.abs(c-f)<.01&&Math.abs(d-p)<.01){if(Math.abs(l+u)<.1&&Math.abs(c+f)<.1&&Math.abs(d+p)<.1&&Math.abs(a+h+y-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const g=(a+1)/2,w=(h+1)/2,b=(y+1)/2,M=(l+u)/4,A=(c+f)/4,S=(d+p)/4;return g>w&&g>b?g<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(g),i=M/n,s=A/n):w>b?w<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(w),n=M/i,s=S/i):b<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(b),n=A/s,i=S/s),this.set(n,i,s,e),this}let m=Math.sqrt((p-d)*(p-d)+(c-f)*(c-f)+(u-l)*(u-l));return Math.abs(m)<.001&&(m=1),this.x=(p-d)/m,this.y=(c-f)/m,this.z=(u-l)/m,this.w=Math.acos((a+h+y-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=me(this.x,t.x,e.x),this.y=me(this.y,t.y,e.y),this.z=me(this.z,t.z,e.z),this.w=me(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=me(this.x,t,e),this.y=me(this.y,t,e),this.z=me(this.z,t,e),this.w=me(this.w,t,e),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(me(n,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Yb extends Hh{constructor(t=1,e=1,n={}){super(),n=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:Jf,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},n),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=n.depth,this.scissor=new $i(0,0,t,e),this.scissorTest=!1,this.viewport=new $i(0,0,t,e);const i={width:t,height:e,depth:n.depth},s=new pi(i);this.textures=[];const o=n.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(n),this.depthBuffer=n.depthBuffer,this.stencilBuffer=n.stencilBuffer,this.resolveDepthBuffer=n.resolveDepthBuffer,this.resolveStencilBuffer=n.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=n.depthTexture,this.samples=n.samples,this.multiview=n.multiview}_setTextureOptions(t={}){const e={minFilter:Jf,generateMipmaps:!1,flipY:!1,internalFormat:null};t.mapping!==void 0&&(e.mapping=t.mapping),t.wrapS!==void 0&&(e.wrapS=t.wrapS),t.wrapT!==void 0&&(e.wrapT=t.wrapT),t.wrapR!==void 0&&(e.wrapR=t.wrapR),t.magFilter!==void 0&&(e.magFilter=t.magFilter),t.minFilter!==void 0&&(e.minFilter=t.minFilter),t.format!==void 0&&(e.format=t.format),t.type!==void 0&&(e.type=t.type),t.anisotropy!==void 0&&(e.anisotropy=t.anisotropy),t.colorSpace!==void 0&&(e.colorSpace=t.colorSpace),t.flipY!==void 0&&(e.flipY=t.flipY),t.generateMipmaps!==void 0&&(e.generateMipmaps=t.generateMipmaps),t.internalFormat!==void 0&&(e.internalFormat=t.internalFormat);for(let n=0;n<this.textures.length;n++)this.textures[n].setValues(e)}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}set depthTexture(t){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),t!==null&&(t.renderTarget=this),this._depthTexture=t}get depthTexture(){return this._depthTexture}setSize(t,e,n=1){if(this.width!==t||this.height!==e||this.depth!==n){this.width=t,this.height=e,this.depth=n;for(let i=0,s=this.textures.length;i<s;i++)this.textures[i].image.width=t,this.textures[i].image.height=e,this.textures[i].image.depth=n,this.textures[i].isArrayTexture=this.textures[i].image.depth>1;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let e=0,n=t.textures.length;e<n;e++){this.textures[e]=t.textures[e].clone(),this.textures[e].isRenderTargetTexture=!0,this.textures[e].renderTarget=this;const i=Object.assign({},t.textures[e].image);this.textures[e].source=new xm(i)}return this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class qb{constructor(t=new Wt(1/0,1/0,1/0),e=new Wt(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e+=3)this.expandByPoint(bi.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,n=t.count;e<n;e++)this.expandByPoint(bi.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=bi.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const n=t.geometry;if(n!==void 0){const s=n.getAttribute("position");if(e===!0&&s!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,bi):bi.fromBufferAttribute(s,o),bi.applyMatrix4(t.matrixWorld),this.expandByPoint(bi);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Lc.copy(t.boundingBox)):(n.boundingBox===null&&n.computeBoundingBox(),Lc.copy(n.boundingBox)),Lc.applyMatrix4(t.matrixWorld),this.union(Lc)}const i=t.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,bi),bi.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(fa),Dc.subVectors(this.max,fa),uo.subVectors(t.a,fa),ho.subVectors(t.b,fa),fo.subVectors(t.c,fa),Rr.subVectors(ho,uo),Ir.subVectors(fo,ho),as.subVectors(uo,fo);let e=[0,-Rr.z,Rr.y,0,-Ir.z,Ir.y,0,-as.z,as.y,Rr.z,0,-Rr.x,Ir.z,0,-Ir.x,as.z,0,-as.x,-Rr.y,Rr.x,0,-Ir.y,Ir.x,0,-as.y,as.x,0];return!lf(e,uo,ho,fo,Dc)||(e=[1,0,0,0,1,0,0,0,1],!lf(e,uo,ho,fo,Dc))?!1:(Oc.crossVectors(Rr,Ir),e=[Oc.x,Oc.y,Oc.z],lf(e,uo,ho,fo,Dc))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,bi).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(bi).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(ir[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ir[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ir[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ir[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ir[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ir[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ir[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ir[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ir),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(t){return this.min.fromArray(t.min),this.max.fromArray(t.max),this}}const ir=[new Wt,new Wt,new Wt,new Wt,new Wt,new Wt,new Wt,new Wt],bi=new Wt,Lc=new qb,uo=new Wt,ho=new Wt,fo=new Wt,Rr=new Wt,Ir=new Wt,as=new Wt,fa=new Wt,Dc=new Wt,Oc=new Wt,ls=new Wt;function lf(r,t,e,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){ls.fromArray(r,s);const a=i.x*Math.abs(ls.x)+i.y*Math.abs(ls.y)+i.z*Math.abs(ls.z),l=t.dot(ls),c=e.dot(ls),u=n.dot(ls);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const ZL=new qb,pa=new Wt,cf=new Wt;class JL{constructor(t=new Wt,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;e!==void 0?n.copy(e):ZL.setFromPoints(t).getCenter(n);let i=0;for(let s=0,o=t.length;s<o;s++)i=Math.max(i,n.distanceToSquared(t[s]));return this.radius=Math.sqrt(i),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;pa.subVectors(t,this.center);const e=pa.lengthSq();if(e>this.radius*this.radius){const n=Math.sqrt(e),i=(n-this.radius)*.5;this.center.addScaledVector(pa,i/n),this.radius+=i}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(cf.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(pa.copy(t.center).add(cf)),this.expandByPoint(pa.copy(t.center).sub(cf))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(t){return this.radius=t.radius,this.center.fromArray(t.center),this}}class Wn{constructor(t,e,n,i,s,o,a,l,c,u,h,d,f,p,y,m){Wn.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,n,i,s,o,a,l,c,u,h,d,f,p,y,m)}set(t,e,n,i,s,o,a,l,c,u,h,d,f,p,y,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=i,g[1]=s,g[5]=o,g[9]=a,g[13]=l,g[2]=c,g[6]=u,g[10]=h,g[14]=d,g[3]=f,g[7]=p,g[11]=y,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Wn().fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,i=1/po.setFromMatrixColumn(t,0).length(),s=1/po.setFromMatrixColumn(t,1).length(),o=1/po.setFromMatrixColumn(t,2).length();return e[0]=n[0]*i,e[1]=n[1]*i,e[2]=n[2]*i,e[3]=0,e[4]=n[4]*s,e[5]=n[5]*s,e[6]=n[6]*s,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,n=t.x,i=t.y,s=t.z,o=Math.cos(n),a=Math.sin(n),l=Math.cos(i),c=Math.sin(i),u=Math.cos(s),h=Math.sin(s);if(t.order==="XYZ"){const d=o*u,f=o*h,p=a*u,y=a*h;e[0]=l*u,e[4]=-l*h,e[8]=c,e[1]=f+p*c,e[5]=d-y*c,e[9]=-a*l,e[2]=y-d*c,e[6]=p+f*c,e[10]=o*l}else if(t.order==="YXZ"){const d=l*u,f=l*h,p=c*u,y=c*h;e[0]=d+y*a,e[4]=p*a-f,e[8]=o*c,e[1]=o*h,e[5]=o*u,e[9]=-a,e[2]=f*a-p,e[6]=y+d*a,e[10]=o*l}else if(t.order==="ZXY"){const d=l*u,f=l*h,p=c*u,y=c*h;e[0]=d-y*a,e[4]=-o*h,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*u,e[9]=y-d*a,e[2]=-o*c,e[6]=a,e[10]=o*l}else if(t.order==="ZYX"){const d=o*u,f=o*h,p=a*u,y=a*h;e[0]=l*u,e[4]=p*c-f,e[8]=d*c+y,e[1]=l*h,e[5]=y*c+d,e[9]=f*c-p,e[2]=-c,e[6]=a*l,e[10]=o*l}else if(t.order==="YZX"){const d=o*l,f=o*c,p=a*l,y=a*c;e[0]=l*u,e[4]=y-d*h,e[8]=p*h+f,e[1]=h,e[5]=o*u,e[9]=-a*u,e[2]=-c*u,e[6]=f*h+p,e[10]=d-y*h}else if(t.order==="XZY"){const d=o*l,f=o*c,p=a*l,y=a*c;e[0]=l*u,e[4]=-h,e[8]=c*u,e[1]=d*h+y,e[5]=o*u,e[9]=f*h-p,e[2]=p*h-f,e[6]=a*u,e[10]=y*h+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(KL,t,QL)}lookAt(t,e,n){const i=this.elements;return Kn.subVectors(t,e),Kn.lengthSq()===0&&(Kn.z=1),Kn.normalize(),Nr.crossVectors(n,Kn),Nr.lengthSq()===0&&(Math.abs(n.z)===1?Kn.x+=1e-4:Kn.z+=1e-4,Kn.normalize(),Nr.crossVectors(n,Kn)),Nr.normalize(),Uc.crossVectors(Kn,Nr),i[0]=Nr.x,i[4]=Uc.x,i[8]=Kn.x,i[1]=Nr.y,i[5]=Uc.y,i[9]=Kn.y,i[2]=Nr.z,i[6]=Uc.z,i[10]=Kn.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,i=e.elements,s=this.elements,o=n[0],a=n[4],l=n[8],c=n[12],u=n[1],h=n[5],d=n[9],f=n[13],p=n[2],y=n[6],m=n[10],g=n[14],w=n[3],b=n[7],M=n[11],A=n[15],S=i[0],E=i[4],x=i[8],v=i[12],_=i[1],T=i[5],I=i[9],B=i[13],V=i[2],H=i[6],U=i[10],Q=i[14],W=i[3],lt=i[7],ut=i[11],mt=i[15];return s[0]=o*S+a*_+l*V+c*W,s[4]=o*E+a*T+l*H+c*lt,s[8]=o*x+a*I+l*U+c*ut,s[12]=o*v+a*B+l*Q+c*mt,s[1]=u*S+h*_+d*V+f*W,s[5]=u*E+h*T+d*H+f*lt,s[9]=u*x+h*I+d*U+f*ut,s[13]=u*v+h*B+d*Q+f*mt,s[2]=p*S+y*_+m*V+g*W,s[6]=p*E+y*T+m*H+g*lt,s[10]=p*x+y*I+m*U+g*ut,s[14]=p*v+y*B+m*Q+g*mt,s[3]=w*S+b*_+M*V+A*W,s[7]=w*E+b*T+M*H+A*lt,s[11]=w*x+b*I+M*U+A*ut,s[15]=w*v+b*B+M*Q+A*mt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],i=t[8],s=t[12],o=t[1],a=t[5],l=t[9],c=t[13],u=t[2],h=t[6],d=t[10],f=t[14],p=t[3],y=t[7],m=t[11],g=t[15];return p*(+s*l*h-i*c*h-s*a*d+n*c*d+i*a*f-n*l*f)+y*(+e*l*f-e*c*d+s*o*d-i*o*f+i*c*u-s*l*u)+m*(+e*c*h-e*a*f-s*o*h+n*o*f+s*a*u-n*c*u)+g*(-i*a*u-e*l*h+e*a*d+i*o*h-n*o*d+n*l*u)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const i=this.elements;return t.isVector3?(i[12]=t.x,i[13]=t.y,i[14]=t.z):(i[12]=t,i[13]=e,i[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],i=t[2],s=t[3],o=t[4],a=t[5],l=t[6],c=t[7],u=t[8],h=t[9],d=t[10],f=t[11],p=t[12],y=t[13],m=t[14],g=t[15],w=h*m*c-y*d*c+y*l*f-a*m*f-h*l*g+a*d*g,b=p*d*c-u*m*c-p*l*f+o*m*f+u*l*g-o*d*g,M=u*y*c-p*h*c+p*a*f-o*y*f-u*a*g+o*h*g,A=p*h*l-u*y*l-p*a*d+o*y*d+u*a*m-o*h*m,S=e*w+n*b+i*M+s*A;if(S===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const E=1/S;return t[0]=w*E,t[1]=(y*d*s-h*m*s-y*i*f+n*m*f+h*i*g-n*d*g)*E,t[2]=(a*m*s-y*l*s+y*i*c-n*m*c-a*i*g+n*l*g)*E,t[3]=(h*l*s-a*d*s-h*i*c+n*d*c+a*i*f-n*l*f)*E,t[4]=b*E,t[5]=(u*m*s-p*d*s+p*i*f-e*m*f-u*i*g+e*d*g)*E,t[6]=(p*l*s-o*m*s-p*i*c+e*m*c+o*i*g-e*l*g)*E,t[7]=(o*d*s-u*l*s+u*i*c-e*d*c-o*i*f+e*l*f)*E,t[8]=M*E,t[9]=(p*h*s-u*y*s-p*n*f+e*y*f+u*n*g-e*h*g)*E,t[10]=(o*y*s-p*a*s+p*n*c-e*y*c-o*n*g+e*a*g)*E,t[11]=(u*a*s-o*h*s-u*n*c+e*h*c+o*n*f-e*a*f)*E,t[12]=A*E,t[13]=(u*y*i-p*h*i+p*n*d-e*y*d-u*n*m+e*h*m)*E,t[14]=(p*a*i-o*y*i-p*n*l+e*y*l+o*n*m-e*a*m)*E,t[15]=(o*h*i-u*a*i+u*n*l-e*h*l-o*n*d+e*a*d)*E,this}scale(t){const e=this.elements,n=t.x,i=t.y,s=t.z;return e[0]*=n,e[4]*=i,e[8]*=s,e[1]*=n,e[5]*=i,e[9]*=s,e[2]*=n,e[6]*=i,e[10]*=s,e[3]*=n,e[7]*=i,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],i=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,i))}makeTranslation(t,e,n){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),i=Math.sin(e),s=1-n,o=t.x,a=t.y,l=t.z,c=s*o,u=s*a;return this.set(c*o+n,c*a-i*l,c*l+i*a,0,c*a+i*l,u*a+n,u*l-i*o,0,c*l-i*a,u*l+i*o,s*l*l+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n,i,s,o){return this.set(1,n,s,0,t,1,o,0,e,i,1,0,0,0,0,1),this}compose(t,e,n){const i=this.elements,s=e._x,o=e._y,a=e._z,l=e._w,c=s+s,u=o+o,h=a+a,d=s*c,f=s*u,p=s*h,y=o*u,m=o*h,g=a*h,w=l*c,b=l*u,M=l*h,A=n.x,S=n.y,E=n.z;return i[0]=(1-(y+g))*A,i[1]=(f+M)*A,i[2]=(p-b)*A,i[3]=0,i[4]=(f-M)*S,i[5]=(1-(d+g))*S,i[6]=(m+w)*S,i[7]=0,i[8]=(p+b)*E,i[9]=(m-w)*E,i[10]=(1-(d+y))*E,i[11]=0,i[12]=t.x,i[13]=t.y,i[14]=t.z,i[15]=1,this}decompose(t,e,n){const i=this.elements;let s=po.set(i[0],i[1],i[2]).length();const o=po.set(i[4],i[5],i[6]).length(),a=po.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),t.x=i[12],t.y=i[13],t.z=i[14],Mi.copy(this);const l=1/s,c=1/o,u=1/a;return Mi.elements[0]*=l,Mi.elements[1]*=l,Mi.elements[2]*=l,Mi.elements[4]*=c,Mi.elements[5]*=c,Mi.elements[6]*=c,Mi.elements[8]*=u,Mi.elements[9]*=u,Mi.elements[10]*=u,e.setFromRotationMatrix(Mi),n.x=s,n.y=o,n.z=a,this}makePerspective(t,e,n,i,s,o,a=vs,l=!1){const c=this.elements,u=2*s/(e-t),h=2*s/(n-i),d=(e+t)/(e-t),f=(n+i)/(n-i);let p,y;if(l)p=s/(o-s),y=o*s/(o-s);else if(a===vs)p=-(o+s)/(o-s),y=-2*o*s/(o-s);else if(a===th)p=-o/(o-s),y=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=h,c[9]=f,c[13]=0,c[2]=0,c[6]=0,c[10]=p,c[14]=y,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(t,e,n,i,s,o,a=vs,l=!1){const c=this.elements,u=2/(e-t),h=2/(n-i),d=-(e+t)/(e-t),f=-(n+i)/(n-i);let p,y;if(l)p=1/(o-s),y=o/(o-s);else if(a===vs)p=-2/(o-s),y=-(o+s)/(o-s);else if(a===th)p=-1/(o-s),y=-s/(o-s);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=0,c[12]=d,c[1]=0,c[5]=h,c[9]=0,c[13]=f,c[2]=0,c[6]=0,c[10]=p,c[14]=y,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let i=0;i<16;i++)if(e[i]!==n[i])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const po=new Wt,Mi=new Wn,KL=new Wt(0,0,0),QL=new Wt(1,1,1),Nr=new Wt,Uc=new Wt,Kn=new Wt,K_=new Wn,Q_=new El;class Jo{constructor(t=0,e=0,n=0,i=Jo.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=n,this._order=i}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,i=this._order){return this._x=t,this._y=e,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,n=!0){const i=t.elements,s=i[0],o=i[4],a=i[8],l=i[1],c=i[5],u=i[9],h=i[2],d=i[6],f=i[10];switch(e){case"XYZ":this._y=Math.asin(me(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-me(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(me(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-me(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(me(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-me(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,n===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return K_.makeRotationFromQuaternion(t),this.setFromRotationMatrix(K_,e,n)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return Q_.setFromEuler(this),this.setFromQuaternion(Q_,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Jo.DEFAULT_ORDER="XYZ";class tD{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let eD=0;const t0=new Wt,mo=new El,rr=new Wn,Fc=new Wt,ma=new Wt,nD=new Wt,iD=new El,e0=new Wt(1,0,0),n0=new Wt(0,1,0),i0=new Wt(0,0,1),r0={type:"added"},rD={type:"removed"},go={type:"childadded",child:null},uf={type:"childremoved",child:null};class Ts extends Hh{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:eD++}),this.uuid=ws(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ts.DEFAULT_UP.clone();const t=new Wt,e=new Jo,n=new El,i=new Wt(1,1,1);function s(){n.setFromEuler(e,!1)}function o(){e.setFromQuaternion(n,void 0,!1)}e._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Wn},normalMatrix:{value:new Ni}}),this.matrix=new Wn,this.matrixWorld=new Wn,this.matrixAutoUpdate=Ts.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=Ts.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new tD,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return mo.setFromAxisAngle(t,e),this.quaternion.multiply(mo),this}rotateOnWorldAxis(t,e){return mo.setFromAxisAngle(t,e),this.quaternion.premultiply(mo),this}rotateX(t){return this.rotateOnAxis(e0,t)}rotateY(t){return this.rotateOnAxis(n0,t)}rotateZ(t){return this.rotateOnAxis(i0,t)}translateOnAxis(t,e){return t0.copy(t).applyQuaternion(this.quaternion),this.position.add(t0.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(e0,t)}translateY(t){return this.translateOnAxis(n0,t)}translateZ(t){return this.translateOnAxis(i0,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(rr.copy(this.matrixWorld).invert())}lookAt(t,e,n){t.isVector3?Fc.copy(t):Fc.set(t,e,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ma.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?rr.lookAt(ma,Fc,this.up):rr.lookAt(Fc,ma,this.up),this.quaternion.setFromRotationMatrix(rr),i&&(rr.extractRotation(i.matrixWorld),mo.setFromRotationMatrix(rr),this.quaternion.premultiply(mo.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(r0),go.child=t,this.dispatchEvent(go),go.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(rD),uf.child=t,this.dispatchEvent(uf),uf.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),rr.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),rr.multiply(t.parent.matrixWorld)),t.applyMatrix4(rr),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(r0),go.child=t,this.dispatchEvent(go),go.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let n=0,i=this.children.length;n<i;n++){const s=this.children[n].getObjectByProperty(t,e);if(s!==void 0)return s}}getObjectsByProperty(t,e,n=[]){this[t]===e&&n.push(this);const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].getObjectsByProperty(t,e,n);return n}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ma,t,nD),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ma,iD,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,i=e.length;n<i;n++)e[n].updateMatrixWorld(t)}updateWorldMatrix(t,e){const n=this.parent;if(t===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(i.type="BatchedMesh",i.perObjectFrustumCulled=this.perObjectFrustumCulled,i.sortObjects=this.sortObjects,i.drawRanges=this._drawRanges,i.reservedRanges=this._reservedRanges,i.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),i.instanceInfo=this._instanceInfo.map(a=>({...a})),i.availableInstanceIds=this._availableInstanceIds.slice(),i.availableGeometryIds=this._availableGeometryIds.slice(),i.nextIndexStart=this._nextIndexStart,i.nextVertexStart=this._nextVertexStart,i.geometryCount=this._geometryCount,i.maxInstanceCount=this._maxInstanceCount,i.maxVertexCount=this._maxVertexCount,i.maxIndexCount=this._maxIndexCount,i.geometryInitialized=this._geometryInitialized,i.matricesTexture=this._matricesTexture.toJSON(t),i.indirectTexture=this._indirectTexture.toJSON(t),this._colorsTexture!==null&&(i.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(i.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(i.boundingBox=this.boundingBox.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(t)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(t.shapes,h)}else s(t.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(t.materials,this.material[l]));i.material=a}else i.material=s(t.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];i.animations.push(s(t.animations,l))}}if(e){const a=o(t.geometries),l=o(t.materials),c=o(t.textures),u=o(t.images),h=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(n.geometries=a),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),u.length>0&&(n.images=u),h.length>0&&(n.shapes=h),d.length>0&&(n.skeletons=d),f.length>0&&(n.animations=f),p.length>0&&(n.nodes=p)}return n.object=i,n;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let n=0;n<t.children.length;n++){const i=t.children[n];this.add(i.clone())}return this}}Ts.DEFAULT_UP=new Wt(0,1,0);Ts.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ts.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const jb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Pr={h:0,s:0,l:0},Bc={h:0,s:0,l:0};function hf(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}class bm{constructor(t,e,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,n)}set(t,e,n){if(e===void 0&&n===void 0){const i=t;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(t,e,n);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Si){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Qe.colorSpaceToWorking(this,e),this}setRGB(t,e,n,i=Qe.workingColorSpace){return this.r=t,this.g=e,this.b=n,Qe.colorSpaceToWorking(this,i),this}setHSL(t,e,n,i=Qe.workingColorSpace){if(t=vm(t,1),e=me(e,0,1),n=me(n,0,1),e===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+e):n+e-n*e,o=2*n-s;this.r=hf(o,s,t+1/3),this.g=hf(o,s,t),this.b=hf(o,s,t-1/3)}return Qe.colorSpaceToWorking(this,i),this}setStyle(t,e=Si){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=i[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(s,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Si){const n=jb[t.toLowerCase()];return n!==void 0?this.setHex(n,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=hr(t.r),this.g=hr(t.g),this.b=hr(t.b),this}copyLinearToSRGB(t){return this.r=Ao(t.r),this.g=Ao(t.g),this.b=Ao(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Si){return Qe.workingToColorSpace(_n.copy(this),t),Math.round(me(_n.r*255,0,255))*65536+Math.round(me(_n.g*255,0,255))*256+Math.round(me(_n.b*255,0,255))}getHexString(t=Si){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=Qe.workingColorSpace){Qe.workingToColorSpace(_n.copy(this),e);const n=_n.r,i=_n.g,s=_n.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case n:l=(i-s)/h+(i<s?6:0);break;case i:l=(s-n)/h+2;break;case s:l=(n-i)/h+4;break}l/=6}return t.h=l,t.s=c,t.l=u,t}getRGB(t,e=Qe.workingColorSpace){return Qe.workingToColorSpace(_n.copy(this),e),t.r=_n.r,t.g=_n.g,t.b=_n.b,t}getStyle(t=Si){Qe.workingToColorSpace(_n.copy(this),t);const e=_n.r,n=_n.g,i=_n.b;return t!==Si?"color(".concat(t," ").concat(e.toFixed(3)," ").concat(n.toFixed(3)," ").concat(i.toFixed(3),")"):"rgb(".concat(Math.round(e*255),",").concat(Math.round(n*255),",").concat(Math.round(i*255),")")}offsetHSL(t,e,n){return this.getHSL(Pr),this.setHSL(Pr.h+t,Pr.s+e,Pr.l+n)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,n){return this.r=t.r+(e.r-t.r)*n,this.g=t.g+(e.g-t.g)*n,this.b=t.b+(e.b-t.b)*n,this}lerpHSL(t,e){this.getHSL(Pr),t.getHSL(Bc);const n=Ba(Pr.h,Bc.h,e),i=Ba(Pr.s,Bc.s,e),s=Ba(Pr.l,Bc.l,e);return this.setHSL(n,i,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,n=this.g,i=this.b,s=t.elements;return this.r=s[0]*e+s[3]*n+s[6]*i,this.g=s[1]*e+s[4]*n+s[7]*i,this.b=s[2]*e+s[5]*n+s[8]*i,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const _n=new bm;bm.NAMES=jb;const Je=new Wt,zc=new fi;let sD=0;class oD{constructor(t,e,n=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:sD++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=n,this.usage=Qu,this.updateRanges=[],this.gpuType=wL,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[t+i]=e.array[n+i];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,n=this.count;e<n;e++)zc.fromBufferAttribute(this,e),zc.applyMatrix3(t),this.setXY(e,zc.x,zc.y);else if(this.itemSize===3)for(let e=0,n=this.count;e<n;e++)Je.fromBufferAttribute(this,e),Je.applyMatrix3(t),this.setXYZ(e,Je.x,Je.y,Je.z);return this}applyMatrix4(t){for(let e=0,n=this.count;e<n;e++)Je.fromBufferAttribute(this,e),Je.applyMatrix4(t),this.setXYZ(e,Je.x,Je.y,Je.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Je.fromBufferAttribute(this,e),Je.applyNormalMatrix(t),this.setXYZ(e,Je.x,Je.y,Je.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Je.fromBufferAttribute(this,e),Je.transformDirection(t),this.setXYZ(e,Je.x,Je.y,Je.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let n=this.array[t*this.itemSize+e];return this.normalized&&(n=Ti(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Ae(n,this.array)),this.array[t*this.itemSize+e]=n,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Ti(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ae(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Ti(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ae(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Ti(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ae(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Ti(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ae(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,n){return t*=this.itemSize,this.normalized&&(e=Ae(e,this.array),n=Ae(n,this.array)),this.array[t+0]=e,this.array[t+1]=n,this}setXYZ(t,e,n,i){return t*=this.itemSize,this.normalized&&(e=Ae(e,this.array),n=Ae(n,this.array),i=Ae(i,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t*=this.itemSize,this.normalized&&(e=Ae(e,this.array),n=Ae(n,this.array),i=Ae(i,this.array),s=Ae(s,this.array)),this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=i,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Qu&&(t.usage=this.usage),t}}class aD extends pi{constructor(t=[],e=Hb,n,i,s,o,a,l,c,u){super(t,e,n,i,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class lD{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Qu,this.updateRanges=[],this.version=0,this.uuid=ws()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,n){t*=this.stride,n*=e.stride;for(let i=0,s=this.stride;i<s;i++)this.array[t+i]=e.array[n+i];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ws()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(e,this.stride);return n.setUsage(this.usage),n}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ws()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Tn=new Wt;class Mm{constructor(t,e,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,n=this.data.count;e<n;e++)Tn.fromBufferAttribute(this,e),Tn.applyMatrix4(t),this.setXYZ(e,Tn.x,Tn.y,Tn.z);return this}applyNormalMatrix(t){for(let e=0,n=this.count;e<n;e++)Tn.fromBufferAttribute(this,e),Tn.applyNormalMatrix(t),this.setXYZ(e,Tn.x,Tn.y,Tn.z);return this}transformDirection(t){for(let e=0,n=this.count;e<n;e++)Tn.fromBufferAttribute(this,e),Tn.transformDirection(t),this.setXYZ(e,Tn.x,Tn.y,Tn.z);return this}getComponent(t,e){let n=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(n=Ti(n,this.array)),n}setComponent(t,e,n){return this.normalized&&(n=Ae(n,this.array)),this.data.array[t*this.data.stride+this.offset+e]=n,this}setX(t,e){return this.normalized&&(e=Ae(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=Ae(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=Ae(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=Ae(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=Ti(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=Ti(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=Ti(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=Ti(e,this.array)),e}setXY(t,e,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ae(e,this.array),n=Ae(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this}setXYZ(t,e,n,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ae(e,this.array),n=Ae(n,this.array),i=Ae(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this}setXYZW(t,e,n,i,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=Ae(e,this.array),n=Ae(n,this.array),i=Ae(i,this.array),s=Ae(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=i,this.data.array[t+3]=s,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return new oD(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Mm(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const df=new Wt,cD=new Wt,uD=new Ni;class hD{constructor(t=new Wt(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,i){return this.normal.set(t,e,n),this.constant=i,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const i=df.subVectors(n,e).cross(cD.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(i,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const n=t.delta(df),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:e.copy(t.start).addScaledVector(n,s)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||uD.getNormalMatrix(t),i=this.coplanarPoint(df).applyMatrix4(t),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}class dD extends pi{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Go,this.minFilter=Go,this.generateMipmaps=!1,this.needsUpdate=!0}}class Sm extends pi{constructor(t,e,n=Wb,i,s,o,a=Go,l=Go,c,u=V_,h=1){if(u!==V_&&u!==AL)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const d={width:t,height:e,depth:h};super(d,i,s,o,a,l,u,n,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.source=new xm(Object.assign({},t.image)),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}class wm{constructor(t,e,n,i){wm.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,n,i)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let n=0;n<4;n++)this.elements[n]=t[n+e];return this}set(t,e,n,i){const s=this.elements;return s[0]=t,s[2]=e,s[1]=n,s[3]=i,this}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:kb}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=kb);function Kf(r,t=0){let e=3735928559^t,n=1103547991^t;if(r instanceof Array)for(let i=0,s;i<r.length;i++)s=r[i],e=Math.imul(e^s,2654435761),n=Math.imul(n^s,1597334677);else for(let i=0,s;i<r.length;i++)s=r.charCodeAt(i),e=Math.imul(e^s,2654435761),n=Math.imul(n^s,1597334677);return e=Math.imul(e^e>>>16,2246822507),e^=Math.imul(n^n>>>13,3266489909),n=Math.imul(n^n>>>16,2246822507),n^=Math.imul(e^e>>>13,3266489909),4294967296*(2097151&n)+(e>>>0)}const Zb=(...r)=>Kf(r);function fD(r,t=!1){const e=[];r.isNode===!0&&e.push(r.id);for(const{property:n,childNode:i}of Qf(r))e.push(Kf(n.slice(0,-4)),i.getCacheKey(t));return Kf(e)}function*Qf(r,t=!1){for(const e of Object.getOwnPropertyNames(r)){if(e.startsWith("_")===!0)continue;const n=r[e];if(Array.isArray(n)===!0)for(let i=0;i<n.length;i++){const s=n[i];s&&(s.isNode===!0||t&&typeof s.toJSON=="function")&&(yield{property:e,index:i,childNode:s})}else if(n&&n.isNode===!0)yield{property:e,childNode:n};else if(n&&Object.getPrototypeOf(n)===Object.prototype)for(const i in n){if(i.startsWith("_")===!0)continue;const s=n[i];s&&(s.isNode===!0||t&&typeof s.toJSON=="function")&&(yield{property:e,index:i,childNode:s})}}}function eh(r){if(r==null)return null;const t=typeof r;return r.isNode===!0?"node":t==="number"?"float":t==="boolean"?"bool":t==="string"?"string":t==="function"?"shader":r.isVector2===!0?"vec2":r.isVector3===!0?"vec3":r.isVector4===!0?"vec4":r.isMatrix2===!0?"mat2":r.isMatrix3===!0?"mat3":r.isMatrix4===!0?"mat4":r.isColor===!0?"color":r instanceof ArrayBuffer?"ArrayBuffer":null}function Tm(r,...t){const e=r?r.slice(-4):void 0;return t.length===1&&(e==="vec2"?t=[t[0],t[0]]:e==="vec3"?t=[t[0],t[0],t[0]]:e==="vec4"&&(t=[t[0],t[0],t[0],t[0]])),r==="color"?new bm(...t):e==="vec2"?new fi(...t):e==="vec3"?new Wt(...t):e==="vec4"?new $i(...t):e==="mat2"?new wm(...t):e==="mat3"?new Ni(...t):e==="mat4"?new Wn(...t):r==="bool"?t[0]||!1:r==="float"||r==="int"||r==="uint"?t[0]||0:r==="string"?t[0]||"":r==="ArrayBuffer"?mD(t[0]):null}function pD(r){let t="";const e=new Uint8Array(r);for(let n=0;n<e.length;n++)t+=String.fromCharCode(e[n]);return btoa(t)}function mD(r){return Uint8Array.from(atob(r),t=>t.charCodeAt(0)).buffer}const kc={VERTEX:"vertex"},qe={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},Al=["x","y","z","w"],gD={analyze:"setup",generate:"analyze"};let yD=0;class Qt extends Hh{static get type(){return"Node"}constructor(t=null){super(),this.nodeType=t,this.updateType=qe.NONE,this.updateBeforeType=qe.NONE,this.updateAfterType=qe.NONE,this.uuid=XL.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:yD++})}set needsUpdate(t){t===!0&&this.version++}get type(){return this.constructor.type}onUpdate(t,e){return this.updateType=e,this.update=t.bind(this),this}onFrameUpdate(t){return this.onUpdate(t,qe.FRAME)}onRenderUpdate(t){return this.onUpdate(t,qe.RENDER)}onObjectUpdate(t){return this.onUpdate(t,qe.OBJECT)}onReference(t){return this.updateReference=t.bind(this),this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:t}of Qf(this))yield t}dispose(){this.dispatchEvent({type:"dispose"})}traverse(t){t(this);for(const e of this.getChildren())e.traverse(t)}getCacheKey(t=!1){return t=t||this.version!==this._cacheKeyVersion,(t===!0||this._cacheKey===null)&&(this._cacheKey=Zb(fD(this,t),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(t){const e=this.getNodeType(t);return t.getElementType(e)}getMemberType(){return"void"}getNodeType(t){const e=t.getNodeProperties(this);return e.outputNode?e.outputNode.getNodeType(t):this.nodeType}getShared(t){const e=this.getHash(t);return t.getNodeFromHash(e)||this}getArrayCount(){return null}setup(t){const e=t.getNodeProperties(this);let n=0;for(const i of this.getChildren())e["node"+n++]=i;return e.outputNode||null}analyze(t,e=null){const n=t.increaseUsage(this);if(this.parents===!0){const i=t.getDataFromNode(this,"any");i.stages=i.stages||{},i.stages[t.shaderStage]=i.stages[t.shaderStage]||[],i.stages[t.shaderStage].push(e)}if(n===1){const i=t.getNodeProperties(this);for(const s of Object.values(i))s&&s.isNode===!0&&s.build(t,this)}}generate(t,e){const{outputNode:n}=t.getNodeProperties(this);if(n&&n.isNode===!0)return n.build(t,e)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(t,e=null){const n=this.getShared(t);if(this!==n)return n.build(t,e);const i=t.getDataFromNode(this);i.buildStages=i.buildStages||{},i.buildStages[t.buildStage]=!0;const s=gD[t.buildStage];if(s&&i.buildStages[s]!==!0){const l=t.getBuildStage();t.setBuildStage(s),this.build(t),t.setBuildStage(l)}t.addNode(this),t.addChain(this);let o=null;const a=t.getBuildStage();if(a==="setup"){this.updateReference(t);const l=t.getNodeProperties(this);if(l.initialized!==!0){l.initialized=!0,l.outputNode=this.setup(t)||l.outputNode||null;for(const c of Object.values(l))if(c&&c.isNode===!0){if(c.parents===!0){const u=t.getNodeProperties(c);u.parents=u.parents||[],u.parents.push(this)}c.build(t)}}o=l.outputNode}else if(a==="analyze")this.analyze(t,e);else if(a==="generate"){if(this.generate.length===1){const l=this.getNodeType(t),c=t.getDataFromNode(this);o=c.snippet,o===void 0?c.generated===void 0?(c.generated=!0,o=this.generate(t)||"",c.snippet=o):(console.warn("THREE.Node: Recursion detected.",this),o="/* Recursion detected. */"):c.flowCodes!==void 0&&t.context.nodeBlock!==void 0&&t.addFlowCodeHierarchy(this,t.context.nodeBlock),o=t.format(o,l,e)}else o=this.generate(t,e)||"";o===""&&e!==null&&e!=="void"&&e!=="OutputType"&&(console.error('THREE.TSL: Invalid generated code, expected a "'.concat(e,'".')),o=t.generateConst(e))}return t.removeChain(this),t.addSequentialNode(this),o}getSerializeChildren(){return Qf(this)}serialize(t){const e=this.getSerializeChildren(),n={};for(const{property:i,index:s,childNode:o}of e)s!==void 0?(n[i]===void 0&&(n[i]=Number.isInteger(s)?[]:{}),n[i][s]=o.toJSON(t.meta).uuid):n[i]=o.toJSON(t.meta).uuid;Object.keys(n).length>0&&(t.inputNodes=n)}deserialize(t){if(t.inputNodes!==void 0){const e=t.meta.nodes;for(const n in t.inputNodes)if(Array.isArray(t.inputNodes[n])){const i=[];for(const s of t.inputNodes[n])i.push(e[s]);this[n]=i}else if(typeof t.inputNodes[n]=="object"){const i={};for(const s in t.inputNodes[n]){const o=t.inputNodes[n][s];i[s]=e[o]}this[n]=i}else{const i=t.inputNodes[n];this[n]=e[i]}}}toJSON(t){const{uuid:e,type:n}=this,i=t===void 0||typeof t=="string";i&&(t={textures:{},images:{},nodes:{}});let s=t.nodes[e];s===void 0&&(s={uuid:e,type:n,meta:t,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},i!==!0&&(t.nodes[s.uuid]=s),this.serialize(s),delete s.meta);function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}if(i){const a=o(t.textures),l=o(t.images),c=o(t.nodes);a.length>0&&(s.textures=a),l.length>0&&(s.images=l),c.length>0&&(s.nodes=c)}return s}}class Cl extends Qt{static get type(){return"ArrayElementNode"}constructor(t,e){super(),this.node=t,this.indexNode=e,this.isArrayElementNode=!0}getNodeType(t){return this.node.getElementType(t)}generate(t){const e=this.indexNode.getNodeType(t),n=this.node.build(t),i=this.indexNode.build(t,!t.isVector(e)&&t.isInteger(e)?e:"uint");return"".concat(n,"[ ").concat(i," ]")}}class Jb extends Qt{static get type(){return"ConvertNode"}constructor(t,e){super(),this.node=t,this.convertTo=e}getNodeType(t){const e=this.node.getNodeType(t);let n=null;for(const i of this.convertTo.split("|"))(n===null||t.getTypeLength(e)===t.getTypeLength(i))&&(n=i);return n}serialize(t){super.serialize(t),t.convertTo=this.convertTo}deserialize(t){super.deserialize(t),this.convertTo=t.convertTo}generate(t,e){const n=this.node,i=this.getNodeType(t),s=n.build(t,i);return t.format(s,i,e)}}class Mn extends Qt{static get type(){return"TempNode"}constructor(t=null){super(t),this.isTempNode=!0}hasDependencies(t){return t.getDataFromNode(this).usageCount>1}build(t,e){if(t.getBuildStage()==="generate"){const n=t.getVectorType(this.getNodeType(t,e)),i=t.getDataFromNode(this);if(i.propertyName!==void 0)return t.format(i.propertyName,n,e);if(n!=="void"&&e!=="void"&&this.hasDependencies(t)){const s=super.build(t,n),o=t.getVarFromNode(this,null,n),a=t.getPropertyName(o);return t.addLineFlowCode("".concat(a," = ").concat(s),this),i.snippet=s,i.propertyName=a,t.format(i.propertyName,n,e)}}return super.build(t,e)}}class _D extends Mn{static get type(){return"JoinNode"}constructor(t=[],e=null){super(e),this.nodes=t}getNodeType(t){return this.nodeType!==null?t.getVectorType(this.nodeType):t.getTypeFromLength(this.nodes.reduce((e,n)=>e+t.getTypeLength(n.getNodeType(t)),0))}generate(t,e){const n=this.getNodeType(t),i=t.getTypeLength(n),s=this.nodes,o=t.getComponentType(n),a=[];let l=0;for(const u of s){if(l>=i){console.error("THREE.TSL: Length of parameters exceeds maximum length of function '".concat(n,"()' type."));break}let h=u.getNodeType(t),d=t.getTypeLength(h),f;if(l+d>i&&(console.error("THREE.TSL: Length of '".concat(n,"()' data exceeds maximum length of output type.")),d=i-l,h=t.getTypeFromLength(d)),l+=d,f=u.build(t,h),t.getComponentType(h)!==o){const p=t.getTypeFromLength(d,o);f=t.format(f,h,p)}a.push(f)}const c="".concat(t.getType(n),"( ").concat(a.join(", ")," )");return t.format(c,n,e)}}const vD=Al.join("");class xD extends Qt{static get type(){return"SplitNode"}constructor(t,e="x"){super(),this.node=t,this.components=e,this.isSplitNode=!0}getVectorLength(){let t=this.components.length;for(const e of this.components)t=Math.max(Al.indexOf(e)+1,t);return t}getComponentType(t){return t.getComponentType(this.node.getNodeType(t))}getNodeType(t){return t.getTypeFromLength(this.components.length,this.getComponentType(t))}getScope(){return this.node.getScope()}generate(t,e){const n=this.node,i=t.getTypeLength(n.getNodeType(t));let s=null;if(i>1){let o=null;this.getVectorLength()>=i&&(o=t.getTypeFromLength(this.getVectorLength(),this.getComponentType(t)));const a=n.build(t,o);this.components.length===i&&this.components===vD.slice(0,this.components.length)?s=t.format(a,o,e):s=t.format("".concat(a,".").concat(this.components),this.getNodeType(t),e)}else s=n.build(t,e);return s}serialize(t){super.serialize(t),t.components=this.components}deserialize(t){super.deserialize(t),this.components=t.components}}class bD extends Mn{static get type(){return"SetNode"}constructor(t,e,n){super(),this.sourceNode=t,this.components=e,this.targetNode=n}getNodeType(t){return this.sourceNode.getNodeType(t)}generate(t){const{sourceNode:e,components:n,targetNode:i}=this,s=this.getNodeType(t),o=t.getComponentType(i.getNodeType(t)),a=t.getTypeFromLength(n.length,o),l=i.build(t,a),c=e.build(t,s),u=t.getTypeLength(s),h=[];for(let d=0;d<u;d++){const f=Al[d];f===n[0]?(h.push(l),d+=n.length-1):h.push(c+"."+f)}return"".concat(t.getType(s),"( ").concat(h.join(", ")," )")}}class MD extends Mn{static get type(){return"FlipNode"}constructor(t,e){super(),this.sourceNode=t,this.components=e}getNodeType(t){return this.sourceNode.getNodeType(t)}generate(t){const{components:e,sourceNode:n}=this,i=this.getNodeType(t),s=n.build(t),o=t.getVarFromNode(this),a=t.getPropertyName(o);t.addLineFlowCode(a+" = "+s,this);const l=t.getTypeLength(i),c=[];let u=0;for(let h=0;h<l;h++){const d=Al[h];d===e[u]?(c.push("1.0 - "+(a+"."+d)),u++):c.push(a+"."+d)}return"".concat(t.getType(i),"( ").concat(c.join(", ")," )")}}class Em extends Qt{static get type(){return"InputNode"}constructor(t,e=null){super(e),this.isInputNode=!0,this.value=t,this.precision=null}getNodeType(){return this.nodeType===null?eh(this.value):this.nodeType}getInputType(t){return this.getNodeType(t)}setPrecision(t){return this.precision=t,this}serialize(t){super.serialize(t),t.value=this.value,this.value&&this.value.toArray&&(t.value=this.value.toArray()),t.valueType=eh(this.value),t.nodeType=this.nodeType,t.valueType==="ArrayBuffer"&&(t.value=pD(t.value)),t.precision=this.precision}deserialize(t){super.deserialize(t),this.nodeType=t.nodeType,this.value=Array.isArray(t.value)?Tm(t.valueType,...t.value):t.value,this.precision=t.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(t.value))}generate(){console.warn("Abstract function.")}}const s0=/float|u?int/;class ji extends Em{static get type(){return"ConstNode"}constructor(t,e=null){super(t,e),this.isConstNode=!0}generateConst(t){return t.generateConst(this.getNodeType(t),this.value)}generate(t,e){const n=this.getNodeType(t);return s0.test(n)&&s0.test(e)?t.generateConst(e,this.value):t.format(this.generateConst(t),n,e)}}class SD extends Qt{static get type(){return"MemberNode"}constructor(t,e){super(),this.structNode=t,this.property=e,this.isMemberNode=!0}hasMember(t){return this.structNode.isMemberNode&&this.structNode.hasMember(t)===!1?!1:this.structNode.getMemberType(t,this.property)!=="void"}getNodeType(t){return this.hasMember(t)===!1?"float":this.structNode.getMemberType(t,this.property)}getMemberType(t,e){if(this.hasMember(t)===!1)return"float";const n=this.getNodeType(t);return t.getStructTypeNode(n).getMemberType(t,e)}generate(t){if(this.hasMember(t)===!1){console.warn('THREE.TSL: Member "'.concat(this.property,'" does not exist in struct.'));const e=this.getNodeType(t);return t.generateConst(e)}return this.structNode.build(t)+"."+this.property}}let wD=null;const tp=new Map;function ot(r,t){if(tp.has(r)){console.warn("THREE.TSL: Redefinition of method chaining '".concat(r,"'."));return}if(typeof t!="function")throw new Error("THREE.TSL: Node element ".concat(r," is not a function"));tp.set(r,t),r!=="assign"&&(Qt.prototype[r]=function(...e){return this.isStackNode?this.add(t(...e)):t(this,...e)},Qt.prototype[r+"Assign"]=function(...e){return this.isStackNode?this.assign(e[0],t(...e)):this.assign(t(this,...e))})}const TD=r=>r.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),o0=r=>TD(r).split("").sort().join("");Qt.prototype.assign=function(...r){if(this.isStackNode!==!0)return console.error("THREE.TSL: No stack defined for assign operation. Make sure the assign is inside a Fn()."),this;{const t=tp.get("assign");return this.add(t(...r))}};Qt.prototype.toVarIntent=function(){return this};Qt.prototype.get=function(r){return new SD(this,r)};const za={};function Vc(r,t,e){za[r]=za[t]=za[e]={get(){this._cache=this._cache||{};let o=this._cache[r];return o===void 0&&(o=new xD(this,r),this._cache[r]=o),o},set(o){this[r].assign(Tt(o))}};const n=r.toUpperCase(),i=t.toUpperCase(),s=e.toUpperCase();Qt.prototype["set"+n]=Qt.prototype["set"+i]=Qt.prototype["set"+s]=function(o){const a=o0(r);return new bD(this,a,Tt(o))},Qt.prototype["flip"+n]=Qt.prototype["flip"+i]=Qt.prototype["flip"+s]=function(){const o=o0(r);return new MD(this,o)}}const Ui=["x","y","z","w"],Fi=["r","g","b","a"],Bi=["s","t","p","q"];for(let r=0;r<4;r++){let t=Ui[r],e=Fi[r],n=Bi[r];Vc(t,e,n);for(let i=0;i<4;i++){t=Ui[r]+Ui[i],e=Fi[r]+Fi[i],n=Bi[r]+Bi[i],Vc(t,e,n);for(let s=0;s<4;s++){t=Ui[r]+Ui[i]+Ui[s],e=Fi[r]+Fi[i]+Fi[s],n=Bi[r]+Bi[i]+Bi[s],Vc(t,e,n);for(let o=0;o<4;o++)t=Ui[r]+Ui[i]+Ui[s]+Ui[o],e=Fi[r]+Fi[i]+Fi[s]+Fi[o],n=Bi[r]+Bi[i]+Bi[s]+Bi[o],Vc(t,e,n)}}}for(let r=0;r<32;r++)za[r]={get(){this._cache=this._cache||{};let t=this._cache[r];return t===void 0&&(t=new Cl(this,new ji(r,"uint")),this._cache[r]=t),t},set(t){this[r].assign(Tt(t))}};Object.defineProperties(Qt.prototype,za);const a0=new WeakMap,ED=function(r,t=null){const e=eh(r);return e==="node"?r:t===null&&(e==="float"||e==="boolean")||e&&e!=="shader"&&e!=="string"?Tt(ep(r,t)):e==="shader"?r.isFn?r:ge(r):r},AD=function(r,t=null){for(const e in r)r[e]=Tt(r[e],t);return r},CD=function(r,t=null){const e=r.length;for(let n=0;n<e;n++)r[n]=Tt(r[n],t);return r},Kb=function(r,t=null,e=null,n=null){function i(u){return n!==null?(u=Tt(Object.assign(u,n)),n.intent===!0&&(u=u.toVarIntent())):u=Tt(u),u}let s,o=t,a,l;function c(u){let h;return o?h=/[a-z]/i.test(o)?o+"()":o:h=r.type,a!==void 0&&u.length<a?(console.error('THREE.TSL: "'.concat(h,'" parameter length is less than minimum required.')),u.concat(new Array(a-u.length).fill(0))):l!==void 0&&u.length>l?(console.error('THREE.TSL: "'.concat(h,'" parameter length exceeds limit.')),u.slice(0,l)):u}return t===null?s=(...u)=>i(new r(...Co(c(u)))):e!==null?(e=Tt(e),s=(...u)=>i(new r(t,...Co(c(u)),e))):s=(...u)=>i(new r(t,...Co(c(u)))),s.setParameterLength=(...u)=>(u.length===1?a=l=u[0]:u.length===2&&([a,l]=u),s),s.setName=u=>(o=u,s),s},RD=function(r,...t){return Tt(new r(...Co(t)))};class ID extends Qt{constructor(t,e){super(),this.shaderNode=t,this.rawInputs=e,this.isShaderCallNodeInternal=!0}getNodeType(t){return this.shaderNode.nodeType||this.getOutputNode(t).getNodeType(t)}getMemberType(t,e){return this.getOutputNode(t).getMemberType(t,e)}call(t){const{shaderNode:e,rawInputs:n}=this,i=t.getNodeProperties(e),s=t.getClosestSubBuild(e.subBuilds)||"",o=s||"default";if(i[o])return i[o];const a=t.subBuildFn;t.subBuildFn=s;let l=null;if(e.layout){let c=a0.get(t.constructor);c===void 0&&(c=new WeakMap,a0.set(t.constructor,c));let u=c.get(e);u===void 0&&(u=Tt(t.buildFunctionNode(e)),c.set(e,u)),t.addInclude(u);const h=n?ND(n):null;l=Tt(u.call(h))}else{const c=new Proxy(t,{get:(p,y,m)=>{let g;return Symbol.iterator===y?g=function*(){yield void 0}:g=Reflect.get(p,y,m),g}}),u=n?PD(n):null,h=Array.isArray(n)?n.length>0:n!==null,d=e.jsFunc,f=h||d.length>1?d(u,c):d(c);l=Tt(f)}return t.subBuildFn=a,e.once&&(i[o]=l),l}setupOutput(t){return t.addStack(),t.stack.outputNode=this.call(t),t.removeStack()}getOutputNode(t){const e=t.getNodeProperties(this),n=t.getSubBuildOutput(this);return e[n]=e[n]||this.setupOutput(t),e[n].subBuild=t.getClosestSubBuild(this),e[n]}build(t,e=null){let n=null;const i=t.getBuildStage(),s=t.getNodeProperties(this),o=t.getSubBuildOutput(this),a=this.getOutputNode(t);if(i==="setup"){const l=t.getSubBuildProperty("initialized",this);if(s[l]!==!0&&(s[l]=!0,s[o]=this.getOutputNode(t),s[o].build(t),this.shaderNode.subBuilds))for(const c of t.chaining){const u=t.getDataFromNode(c,"any");u.subBuilds=u.subBuilds||new Set;for(const h of this.shaderNode.subBuilds)u.subBuilds.add(h)}n=s[o]}else i==="analyze"?a.build(t,e):i==="generate"&&(n=a.build(t,e)||"");return n}}function ND(r){let t;return Im(r),r[0]&&(r[0].isNode||Object.getPrototypeOf(r[0])!==Object.prototype)?t=[...r]:t=r[0],t}function PD(r){let t=0;return Im(r),new Proxy(r,{get:(e,n,i)=>{let s;if(n==="length")return s=r.length,s;if(Symbol.iterator===n)s=function*(){for(const o of r)yield Tt(o)};else{if(r.length>0)if(Object.getPrototypeOf(r[0])===Object.prototype){const o=r[0];o[n]===void 0?s=o[t++]:s=Reflect.get(o,n,i)}else r[0]instanceof Qt&&(r[n]===void 0?s=r[t++]:s=Reflect.get(r,n,i));else s=Reflect.get(e,n,i);s=Tt(s)}return s}})}class LD extends Qt{constructor(t,e){super(e),this.jsFunc=t,this.layout=null,this.global=!0,this.once=!1}setLayout(t){return this.layout=t,this}call(t=null){return Tt(new ID(this,t))}setup(){return this.call()}}const DD=[!1,!0],OD=[0,1,2,3],UD=[-1,-2],Qb=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],Am=new Map;for(const r of DD)Am.set(r,new ji(r));const Cm=new Map;for(const r of OD)Cm.set(r,new ji(r,"uint"));const Rm=new Map([...Cm].map(r=>new ji(r.value,"int")));for(const r of UD)Rm.set(r,new ji(r,"int"));const Gh=new Map([...Rm].map(r=>new ji(r.value)));for(const r of Qb)Gh.set(r,new ji(r));for(const r of Qb)Gh.set(-r,new ji(-r));const Wh={bool:Am,uint:Cm,ints:Rm,float:Gh},l0=new Map([...Am,...Gh]),ep=(r,t)=>l0.has(r)?l0.get(r):r.isNode===!0?r:new ji(r,t),Ke=function(r,t=null){return(...e)=>{for(const i of e)if(i===void 0)return console.error('THREE.TSL: Invalid parameter for the type "'.concat(r,'".')),Tt(new ji(0,r));if((e.length===0||!["bool","float","int","uint"].includes(r)&&e.every(i=>{const s=typeof i;return s!=="object"&&s!=="function"}))&&(e=[Tm(r,...e)]),e.length===1&&t!==null&&t.has(e[0]))return Hc(t.get(e[0]));if(e.length===1){const i=ep(e[0],r);return i.nodeType===r?Hc(i):Hc(new Jb(i,r))}const n=e.map(i=>ep(i));return Hc(new _D(n,r))}},FD=r=>r!=null?r.nodeType||r.convertTo||(typeof r=="string"?r:null):null;function BD(r,t){return new LD(r,t)}const Tt=(r,t=null)=>ED(r,t),Hc=(r,t=null)=>Tt(r,t).toVarIntent(),Im=(r,t=null)=>new AD(r,t),Co=(r,t=null)=>new CD(r,t),je=(r,t=null,e=null,n=null)=>new Kb(r,t,e,n),xr=(r,...t)=>new RD(r,...t),Dt=(r,t=null,e=null,n={})=>new Kb(r,t,e,{intent:!0,...n});let zD=0;class kD extends Qt{constructor(t,e=null){super();let n=null;e!==null&&(typeof e=="object"?n=e.return:(typeof e=="string"?n=e:console.error("THREE.TSL: Invalid layout type."),e=null)),this.shaderNode=new BD(t,n),e!==null&&this.setLayout(e),this.isFn=!0}setLayout(t){const e=this.shaderNode.nodeType;if(typeof t.inputs!="object"){const n={name:"fn"+zD++,type:e,inputs:[]};for(const i in t)i!=="return"&&n.inputs.push({name:i,type:t[i]});t=n}return this.shaderNode.setLayout(t),this}getNodeType(t){return this.shaderNode.getNodeType(t)||"float"}call(...t){const e=this.shaderNode.call(t);return this.shaderNode.nodeType==="void"&&e.toStack(),e.toVarIntent()}once(t=null){return this.shaderNode.once=!0,this.shaderNode.subBuilds=t,this}generate(t){const e=this.getNodeType(t);return console.error('THREE.TSL: "Fn()" was declared but not invoked. Try calling it like "Fn()( ...params )".'),t.generateConst(e)}}function ge(r,t=null){const e=new kD(r,t);return new Proxy(()=>{},{apply(n,i,s){return e.call(...s)},get(n,i,s){return Reflect.get(e,i,s)},set(n,i,s,o){return Reflect.set(e,i,s,o)}})}const tM=(...r)=>wD.If(...r);function VD(r){return r}ot("toStack",VD);const HD=new Ke("color"),ln=new Ke("float",Wh.float),Wo=new Ke("int",Wh.ints),GD=new Ke("uint",Wh.uint),eM=new Ke("bool",Wh.bool),Rl=new Ke("vec2"),WD=new Ke("ivec2"),XD=new Ke("uvec2"),$D=new Ke("bvec2"),we=new Ke("vec3"),YD=new Ke("ivec3"),qD=new Ke("uvec3"),jD=new Ke("bvec3"),dr=new Ke("vec4"),ZD=new Ke("ivec4"),JD=new Ke("uvec4"),KD=new Ke("bvec4"),nM=new Ke("mat2"),Il=new Ke("mat3"),QD=new Ke("mat4");ot("toColor",HD);ot("toFloat",ln);ot("toInt",Wo);ot("toUint",GD);ot("toBool",eM);ot("toVec2",Rl);ot("toIVec2",WD);ot("toUVec2",XD);ot("toBVec2",$D);ot("toVec3",we);ot("toIVec3",YD);ot("toUVec3",qD);ot("toBVec3",jD);ot("toVec4",dr);ot("toIVec4",ZD);ot("toUVec4",JD);ot("toBVec4",KD);ot("toMat2",nM);ot("toMat3",Il);ot("toMat4",QD);const tO=je(Cl).setParameterLength(2),eO=(r,t)=>Tt(new Jb(Tt(r),t));ot("element",tO);ot("convert",eO);ot("append",r=>(console.warn("THREE.TSL: .append() has been renamed to .toStack()."),r));class Nm extends Qt{static get type(){return"PropertyNode"}constructor(t,e=null,n=!1){super(t),this.name=e,this.varying=n,this.isPropertyNode=!0,this.global=!0}getHash(t){return this.name||super.getHash(t)}generate(t){let e;return this.varying===!0?(e=t.getVaryingFromNode(this,this.name),e.needsInterpolation=!0):e=t.getVarFromNode(this,this.name),t.getPropertyName(e)}}const Xh=(r,t)=>Tt(new Nm(r,t)),c0=xr(Nm,"vec4","DiffuseColor"),u0=xr(Nm,"vec4","Output");class iM extends Qt{static get type(){return"UniformGroupNode"}constructor(t,e=!1,n=1){super("string"),this.name=t,this.shared=e,this.order=n,this.isUniformGroup=!0}serialize(t){super.serialize(t),t.name=this.name,t.version=this.version,t.shared=this.shared}deserialize(t){super.deserialize(t),this.name=t.name,this.version=t.version,this.shared=t.shared}}const nO=r=>new iM(r),rM=(r,t=0)=>new iM(r,!0,t),Ei=rM("render"),iO=nO("object");class Nl extends Em{static get type(){return"UniformNode"}constructor(t,e=null){super(t,e),this.isUniformNode=!0,this.name="",this.groupNode=iO}setName(t){return this.name=t,this}label(t){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(t)}setGroup(t){return this.groupNode=t,this}getGroup(){return this.groupNode}getUniformHash(t){return this.getHash(t)}onUpdate(t,e){return t=t.bind(this),super.onUpdate(n=>{const i=t(n,this);i!==void 0&&(this.value=i)},e)}getInputType(t){let e=super.getInputType(t);return e==="bool"&&(e="uint"),e}generate(t,e){const n=this.getNodeType(t),i=this.getUniformHash(t);let s=t.getNodeFromHash(i);s===void 0&&(t.setHashNode(this,i),s=this);const o=s.getInputType(t),a=t.getUniformFromNode(s,o,t.shaderStage,this.name||t.context.nodeName),l=t.getPropertyName(a);t.context.nodeName!==void 0&&delete t.context.nodeName;let c=l;if(n==="bool"){const u=t.getDataFromNode(this);let h=u.propertyName;if(h===void 0){const d=t.getVarFromNode(this,null,"bool");h=t.getPropertyName(d),u.propertyName=h,c=t.format(l,o,n),t.addLineFlowCode("".concat(h," = ").concat(c),this)}c=h}return t.format(c,n,e)}}const dn=(r,t)=>{const e=FD(t||r);return e===r&&(r=Tm(e)),r=r&&r.isNode===!0?r.node&&r.node.value||r.value:r,Tt(new Nl(r,e))};class h0 extends Mn{static get type(){return"ArrayNode"}constructor(t,e,n=null){super(t),this.count=e,this.values=n,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(t){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(t)),this.nodeType}getElementType(t){return this.getNodeType(t)}generate(t){const e=this.getNodeType(t);return t.generateArray(e,this.count,this.values)}}const rO=(...r)=>{let t;if(r.length===1){const e=r[0];t=new h0(null,e.length,e)}else{const e=r[0],n=r[1];t=new h0(e,n)}return Tt(t)};ot("toArray",(r,t)=>rO(Array(t).fill(r)));class sO extends Mn{static get type(){return"AssignNode"}constructor(t,e){super(),this.targetNode=t,this.sourceNode=e,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(t,e){return e!=="void"?this.targetNode.getNodeType(t):"void"}needsSplitAssign(t){const{targetNode:e}=this;if(t.isAvailable("swizzleAssign")===!1&&e.isSplitNode&&e.components.length>1){const n=t.getTypeLength(e.node.getNodeType(t));return Al.join("").slice(0,n)!==e.components}return!1}setup(t){const{targetNode:e,sourceNode:n}=this,i=e.getScope(),s=t.getNodeProperties(i);s.assign=!0;const o=t.getNodeProperties(this);o.sourceNode=n,o.targetNode=e.context({assign:!0})}generate(t,e){const{targetNode:n,sourceNode:i}=t.getNodeProperties(this),s=this.needsSplitAssign(t),o=n.build(t),a=n.getNodeType(t),l=i.build(t,a),c=i.getNodeType(t),u=t.getDataFromNode(this);let h;if(u.initialized===!0)e!=="void"&&(h=o);else if(s){const d=t.getVarFromNode(this,null,a),f=t.getPropertyName(d);t.addLineFlowCode("".concat(f," = ").concat(l),this);const p=n.node,y=p.node.context({assign:!0}).build(t);for(let m=0;m<p.components.length;m++){const g=p.components[m];t.addLineFlowCode("".concat(y,".").concat(g," = ").concat(f,"[ ").concat(m," ]"),this)}e!=="void"&&(h=o)}else h="".concat(o," = ").concat(l),(e==="void"||c==="void")&&(t.addLineFlowCode(h,this),e!=="void"&&(h=o));return u.initialized=!0,t.format(h,a,e)}}const oO=je(sO).setParameterLength(2);ot("assign",oO);class aO extends Mn{static get type(){return"FunctionCallNode"}constructor(t=null,e={}){super(),this.functionNode=t,this.parameters=e}setParameters(t){return this.parameters=t,this}getParameters(){return this.parameters}getNodeType(t){return this.functionNode.getNodeType(t)}getMemberType(t,e){return this.functionNode.getMemberType(t,e)}generate(t){const e=[],n=this.functionNode,i=n.getInputs(t),s=this.parameters,o=(a,l)=>{const c=l.type,u=c==="pointer";let h;return u?h="&"+a.build(t):h=a.build(t,c),h};if(Array.isArray(s)){if(s.length>i.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),s.length=i.length;else if(s.length<i.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");s.length<i.length;)s.push(ln(0));for(let a=0;a<s.length;a++)e.push(o(s[a],i[a]))}else for(const a of i){const l=s[a.name];l!==void 0?e.push(o(l,a)):(console.error("THREE.TSL: Input '".concat(a.name,"' not found in 'Fn()'.")),e.push(o(ln(0),a)))}return"".concat(n.build(t,"property"),"( ").concat(e.join(", ")," )")}}const lO=(r,...t)=>(t=t.length>1||t[0]&&t[0].isNode===!0?Co(t):Im(t[0]),Tt(new aO(Tt(r),t)));ot("call",lO);const cO={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class Be extends Mn{static get type(){return"OperatorNode"}constructor(t,e,n,...i){if(super(),i.length>0){let s=new Be(t,e,n);for(let o=0;o<i.length-1;o++)s=new Be(t,s,i[o]);e=s,n=i[i.length-1]}this.op=t,this.aNode=e,this.bNode=n,this.isOperatorNode=!0}getOperatorMethod(t,e){return t.getMethod(cO[this.op],e)}getNodeType(t,e=null){const n=this.op,i=this.aNode,s=this.bNode,o=i.getNodeType(t),a=s?s.getNodeType(t):null;if(o==="void"||a==="void")return e||"void";if(n==="%")return o;if(n==="~"||n==="&"||n==="|"||n==="^"||n===">>"||n==="<<")return t.getIntegerType(o);if(n==="!"||n==="&&"||n==="||"||n==="^^")return"bool";if(n==="=="||n==="!="||n==="<"||n===">"||n==="<="||n===">="){const l=Math.max(t.getTypeLength(o),t.getTypeLength(a));return l>1?"bvec".concat(l):"bool"}else{if(t.isMatrix(o)){if(a==="float")return o;if(t.isVector(a))return t.getVectorFromMatrix(o);if(t.isMatrix(a))return o}else if(t.isMatrix(a)){if(o==="float")return a;if(t.isVector(o))return t.getVectorFromMatrix(a)}return t.getTypeLength(a)>t.getTypeLength(o)?a:o}}generate(t,e){const n=this.op,{aNode:i,bNode:s}=this,o=this.getNodeType(t,e);let a=null,l=null;o!=="void"?(a=i.getNodeType(t),l=s?s.getNodeType(t):null,n==="<"||n===">"||n==="<="||n===">="||n==="=="||n==="!="?t.isVector(a)?l=a:t.isVector(l)?a=l:a!==l&&(a=l="float"):n===">>"||n==="<<"?(a=o,l=t.changeComponentType(l,"uint")):n==="%"?(a=o,l=t.isInteger(a)&&t.isInteger(l)?l:a):t.isMatrix(a)?l==="float"?l="float":t.isVector(l)?l=t.getVectorFromMatrix(a):t.isMatrix(l)||(a=l=o):t.isMatrix(l)?a==="float"?a="float":t.isVector(a)?a=t.getVectorFromMatrix(l):a=l=o:a=l=o):a=l=o;const c=i.build(t,a),u=s?s.build(t,l):null,h=t.getFunctionOperator(n);if(e!=="void"){const d=t.renderer.coordinateSystem===vs;if(n==="=="||n==="!="||n==="<"||n===">"||n==="<="||n===">=")return d&&t.isVector(a)?t.format("".concat(this.getOperatorMethod(t,e),"( ").concat(c,", ").concat(u," )"),o,e):t.format("( ".concat(c," ").concat(n," ").concat(u," )"),o,e);if(n==="%")return t.isInteger(l)?t.format("( ".concat(c," % ").concat(u," )"),o,e):t.format("".concat(this.getOperatorMethod(t,o),"( ").concat(c,", ").concat(u," )"),o,e);if(n==="!"||n==="~")return t.format("(".concat(n).concat(c,")"),a,e);if(h)return t.format("".concat(h,"( ").concat(c,", ").concat(u," )"),o,e);if(t.isMatrix(a)&&l==="float")return t.format("( ".concat(u," ").concat(n," ").concat(c," )"),o,e);if(a==="float"&&t.isMatrix(l))return t.format("".concat(c," ").concat(n," ").concat(u),o,e);{let f="( ".concat(c," ").concat(n," ").concat(u," )");return!d&&o==="bool"&&t.isVector(a)&&t.isVector(l)&&(f="all".concat(f)),t.format(f,o,e)}}else if(a!=="void")return h?t.format("".concat(h,"( ").concat(c,", ").concat(u," )"),o,e):t.isMatrix(a)&&l==="float"?t.format("".concat(u," ").concat(n," ").concat(c),o,e):t.format("".concat(c," ").concat(n," ").concat(u),o,e)}serialize(t){super.serialize(t),t.op=this.op}deserialize(t){super.deserialize(t),this.op=t.op}}const uO=Dt(Be,"+").setParameterLength(2,1/0).setName("add"),np=Dt(Be,"-").setParameterLength(2,1/0).setName("sub"),Bs=Dt(Be,"*").setParameterLength(2,1/0).setName("mul"),sM=Dt(Be,"/").setParameterLength(2,1/0).setName("div"),Pm=Dt(Be,"%").setParameterLength(2).setName("mod"),oM=Dt(Be,"==").setParameterLength(2).setName("equal"),hO=Dt(Be,"!=").setParameterLength(2).setName("notEqual"),dO=Dt(Be,"<").setParameterLength(2).setName("lessThan"),fO=Dt(Be,">").setParameterLength(2).setName("greaterThan"),pO=Dt(Be,"<=").setParameterLength(2).setName("lessThanEqual"),mO=Dt(Be,">=").setParameterLength(2).setName("greaterThanEqual"),gO=Dt(Be,"&&").setParameterLength(2,1/0).setName("and"),yO=Dt(Be,"||").setParameterLength(2,1/0).setName("or"),_O=Dt(Be,"!").setParameterLength(1).setName("not"),vO=Dt(Be,"^^").setParameterLength(2).setName("xor"),xO=Dt(Be,"&").setParameterLength(2).setName("bitAnd"),bO=Dt(Be,"~").setParameterLength(2).setName("bitNot"),MO=Dt(Be,"|").setParameterLength(2).setName("bitOr"),SO=Dt(Be,"^").setParameterLength(2).setName("bitXor"),wO=Dt(Be,"<<").setParameterLength(2).setName("shiftLeft"),TO=Dt(Be,">>").setParameterLength(2).setName("shiftRight"),EO=ge(([r])=>(r.addAssign(1),r)),AO=ge(([r])=>(r.subAssign(1),r)),CO=ge(([r])=>{const t=Wo(r).toConst();return r.addAssign(1),t}),RO=ge(([r])=>{const t=Wo(r).toConst();return r.subAssign(1),t});ot("add",uO);ot("sub",np);ot("mul",Bs);ot("div",sM);ot("mod",Pm);ot("equal",oM);ot("notEqual",hO);ot("lessThan",dO);ot("greaterThan",fO);ot("lessThanEqual",pO);ot("greaterThanEqual",mO);ot("and",gO);ot("or",yO);ot("not",_O);ot("xor",vO);ot("bitAnd",xO);ot("bitNot",bO);ot("bitOr",MO);ot("bitXor",SO);ot("shiftLeft",wO);ot("shiftRight",TO);ot("incrementBefore",EO);ot("decrementBefore",AO);ot("increment",CO);ot("decrement",RO);const IO=(r,t)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),Pm(Wo(r),Wo(t)));ot("modInt",IO);class X extends Mn{static get type(){return"MathNode"}constructor(t,e,n=null,i=null){if(super(),(t===X.MAX||t===X.MIN)&&arguments.length>3){let s=new X(t,e,n);for(let o=2;o<arguments.length-1;o++)s=new X(t,s,arguments[o]);e=s,n=arguments[arguments.length-1],i=null}this.method=t,this.aNode=e,this.bNode=n,this.cNode=i,this.isMathNode=!0}getInputType(t){const e=this.aNode.getNodeType(t),n=this.bNode?this.bNode.getNodeType(t):null,i=this.cNode?this.cNode.getNodeType(t):null,s=t.isMatrix(e)?0:t.getTypeLength(e),o=t.isMatrix(n)?0:t.getTypeLength(n),a=t.isMatrix(i)?0:t.getTypeLength(i);return s>o&&s>a?e:o>a?n:a>s?i:e}getNodeType(t){const e=this.method;return e===X.LENGTH||e===X.DISTANCE||e===X.DOT?"float":e===X.CROSS?"vec3":e===X.ALL||e===X.ANY?"bool":e===X.EQUALS?t.changeComponentType(this.aNode.getNodeType(t),"bool"):this.getInputType(t)}setup(t){const{aNode:e,bNode:n,method:i}=this;let s=null;if(i===X.ONE_MINUS)s=np(1,e);else if(i===X.RECIPROCAL)s=sM(1,e);else if(i===X.DIFFERENCE)s=Lm(np(e,n));else if(i===X.TRANSFORM_DIRECTION){let o=e,a=n;t.isMatrix(o.getNodeType(t))?a=dr(we(a),0):o=dr(we(o),0);const l=Bs(o,a).xyz;s=aM(l)}return s!==null?s:super.setup(t)}generate(t,e){if(t.getNodeProperties(this).outputNode)return super.generate(t,e);let n=this.method;const i=this.getNodeType(t),s=this.getInputType(t),o=this.aNode,a=this.bNode,l=this.cNode,c=t.renderer.coordinateSystem;if(n===X.NEGATE)return t.format("( - "+o.build(t,s)+" )",i,e);{const u=[];return n===X.CROSS?u.push(o.build(t,i),a.build(t,i)):c===vs&&n===X.STEP?u.push(o.build(t,t.getTypeLength(o.getNodeType(t))===1?"float":s),a.build(t,s)):c===vs&&(n===X.MIN||n===X.MAX)?u.push(o.build(t,s),a.build(t,t.getTypeLength(a.getNodeType(t))===1?"float":s)):n===X.REFRACT?u.push(o.build(t,s),a.build(t,s),l.build(t,"float")):n===X.MIX?u.push(o.build(t,s),a.build(t,s),l.build(t,t.getTypeLength(l.getNodeType(t))===1?"float":s)):(c===th&&n===X.ATAN&&a!==null&&(n="atan2"),t.shaderStage!=="fragment"&&(n===X.DFDX||n===X.DFDY)&&(console.warn("THREE.TSL: '".concat(n,"' is not supported in the ").concat(t.shaderStage," stage.")),n="/*"+n+"*/"),u.push(o.build(t,s)),a!==null&&u.push(a.build(t,s)),l!==null&&u.push(l.build(t,s))),t.format("".concat(t.getMethod(n,i),"( ").concat(u.join(", ")," )"),i,e)}}serialize(t){super.serialize(t),t.method=this.method}deserialize(t){super.deserialize(t),this.method=t.method}}X.ALL="all";X.ANY="any";X.RADIANS="radians";X.DEGREES="degrees";X.EXP="exp";X.EXP2="exp2";X.LOG="log";X.LOG2="log2";X.SQRT="sqrt";X.INVERSE_SQRT="inversesqrt";X.FLOOR="floor";X.CEIL="ceil";X.NORMALIZE="normalize";X.FRACT="fract";X.SIN="sin";X.COS="cos";X.TAN="tan";X.ASIN="asin";X.ACOS="acos";X.ATAN="atan";X.ABS="abs";X.SIGN="sign";X.LENGTH="length";X.NEGATE="negate";X.ONE_MINUS="oneMinus";X.DFDX="dFdx";X.DFDY="dFdy";X.ROUND="round";X.RECIPROCAL="reciprocal";X.TRUNC="trunc";X.FWIDTH="fwidth";X.TRANSPOSE="transpose";X.DETERMINANT="determinant";X.INVERSE="inverse";X.EQUALS="equals";X.MIN="min";X.MAX="max";X.STEP="step";X.REFLECT="reflect";X.DISTANCE="distance";X.DIFFERENCE="difference";X.DOT="dot";X.CROSS="cross";X.POW="pow";X.TRANSFORM_DIRECTION="transformDirection";X.MIX="mix";X.CLAMP="clamp";X.REFRACT="refract";X.SMOOTHSTEP="smoothstep";X.FACEFORWARD="faceforward";const NO=ln(Math.PI),PO=Dt(X,X.ALL).setParameterLength(1),LO=Dt(X,X.ANY).setParameterLength(1),DO=Dt(X,X.RADIANS).setParameterLength(1),OO=Dt(X,X.DEGREES).setParameterLength(1),UO=Dt(X,X.EXP).setParameterLength(1),FO=Dt(X,X.EXP2).setParameterLength(1),BO=Dt(X,X.LOG).setParameterLength(1),zO=Dt(X,X.LOG2).setParameterLength(1),kO=Dt(X,X.SQRT).setParameterLength(1),VO=Dt(X,X.INVERSE_SQRT).setParameterLength(1),HO=Dt(X,X.FLOOR).setParameterLength(1),GO=Dt(X,X.CEIL).setParameterLength(1),aM=Dt(X,X.NORMALIZE).setParameterLength(1),lM=Dt(X,X.FRACT).setParameterLength(1),cM=Dt(X,X.SIN).setParameterLength(1),WO=Dt(X,X.COS).setParameterLength(1),XO=Dt(X,X.TAN).setParameterLength(1),$O=Dt(X,X.ASIN).setParameterLength(1),YO=Dt(X,X.ACOS).setParameterLength(1),uM=Dt(X,X.ATAN).setParameterLength(1,2),Lm=Dt(X,X.ABS).setParameterLength(1),hM=Dt(X,X.SIGN).setParameterLength(1),qO=Dt(X,X.LENGTH).setParameterLength(1),jO=Dt(X,X.NEGATE).setParameterLength(1),ZO=Dt(X,X.ONE_MINUS).setParameterLength(1),JO=Dt(X,X.DFDX).setParameterLength(1),KO=Dt(X,X.DFDY).setParameterLength(1),QO=Dt(X,X.ROUND).setParameterLength(1),tU=Dt(X,X.RECIPROCAL).setParameterLength(1),eU=Dt(X,X.TRUNC).setParameterLength(1),nU=Dt(X,X.FWIDTH).setParameterLength(1),iU=Dt(X,X.TRANSPOSE).setParameterLength(1),rU=Dt(X,X.DETERMINANT).setParameterLength(1),sU=Dt(X,X.INVERSE).setParameterLength(1),oU=(r,t)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),oM(r,t)),aU=Dt(X,X.MIN).setParameterLength(2,1/0),lU=Dt(X,X.MAX).setParameterLength(2,1/0),cU=Dt(X,X.STEP).setParameterLength(2),uU=Dt(X,X.REFLECT).setParameterLength(2),hU=Dt(X,X.DISTANCE).setParameterLength(2),dU=Dt(X,X.DIFFERENCE).setParameterLength(2),Dm=Dt(X,X.DOT).setParameterLength(2),fU=Dt(X,X.CROSS).setParameterLength(2),dM=Dt(X,X.POW).setParameterLength(2),pU=r=>Bs(r,r),mU=r=>Bs(r,r,r),gU=r=>Bs(r,r,r,r),yU=Dt(X,X.TRANSFORM_DIRECTION).setParameterLength(2),_U=r=>Bs(hM(r),dM(Lm(r),1/3)),fM=r=>Dm(r,r),Om=Dt(X,X.MIX).setParameterLength(3),pM=(r,t=0,e=1)=>Tt(new X(X.CLAMP,Tt(r),Tt(t),Tt(e))),vU=r=>pM(r),xU=Dt(X,X.REFRACT).setParameterLength(3),cl=Dt(X,X.SMOOTHSTEP).setParameterLength(3),bU=Dt(X,X.FACEFORWARD).setParameterLength(3),MU=ge(([r])=>{const t=43758.5453,e=Dm(r.xy,Rl(12.9898,78.233)),n=Pm(e,NO);return lM(cM(n).mul(t))}),SU=(r,t,e)=>Om(t,e,r),wU=(r,t,e)=>cl(t,e,r),TU=(r,t)=>cU(t,r),EU=(r,t)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),uM(r,t));ot("all",PO);ot("any",LO);ot("equals",oU);ot("radians",DO);ot("degrees",OO);ot("exp",UO);ot("exp2",FO);ot("log",BO);ot("log2",zO);ot("sqrt",kO);ot("inverseSqrt",VO);ot("floor",HO);ot("ceil",GO);ot("normalize",aM);ot("fract",lM);ot("sin",cM);ot("cos",WO);ot("tan",XO);ot("asin",$O);ot("acos",YO);ot("atan",uM);ot("abs",Lm);ot("sign",hM);ot("length",qO);ot("lengthSq",fM);ot("negate",jO);ot("oneMinus",ZO);ot("dFdx",JO);ot("dFdy",KO);ot("round",QO);ot("reciprocal",tU);ot("trunc",eU);ot("fwidth",nU);ot("atan2",EU);ot("min",aU);ot("max",lU);ot("step",TU);ot("reflect",uU);ot("distance",hU);ot("dot",Dm);ot("cross",fU);ot("pow",dM);ot("pow2",pU);ot("pow3",mU);ot("pow4",gU);ot("transformDirection",yU);ot("mix",SU);ot("clamp",pM);ot("refract",xU);ot("smoothstep",wU);ot("faceForward",bU);ot("difference",dU);ot("saturate",vU);ot("cbrt",_U);ot("transpose",iU);ot("determinant",rU);ot("inverse",sU);ot("rand",MU);class AU extends Qt{static get type(){return"ConditionalNode"}constructor(t,e,n=null){super(),this.condNode=t,this.ifNode=e,this.elseNode=n}getNodeType(t){const{ifNode:e,elseNode:n}=t.getNodeProperties(this);if(e===void 0)return t.flowBuildStage(this,"setup"),this.getNodeType(t);const i=e.getNodeType(t);if(n!==null){const s=n.getNodeType(t);if(t.getTypeLength(s)>t.getTypeLength(i))return s}return i}setup(t){const e=this.condNode.cache(),n=this.ifNode.cache(),i=this.elseNode?this.elseNode.cache():null,s=t.context.nodeBlock;t.getDataFromNode(n).parentNodeBlock=s,i!==null&&(t.getDataFromNode(i).parentNodeBlock=s);const o=t.context.uniformFlow,a=t.getNodeProperties(this);a.condNode=e,a.ifNode=o?n:n.context({nodeBlock:n}),a.elseNode=i?o?i:i.context({nodeBlock:i}):null}generate(t,e){const n=this.getNodeType(t),i=t.getDataFromNode(this);if(i.nodeProperty!==void 0)return i.nodeProperty;const{condNode:s,ifNode:o,elseNode:a}=t.getNodeProperties(this),l=t.currentFunctionNode,c=e!=="void",u=c?Xh(n).build(t):"";i.nodeProperty=u;const h=s.build(t,"bool");if(t.context.uniformFlow&&a!==null){const f=o.build(t,n),p=a.build(t,n),y=t.getTernary(h,f,p);return t.format(y,n,e)}t.addFlowCode("\n".concat(t.tab,"if ( ").concat(h," ) {\n\n")).addFlowTab();let d=o.build(t,n);if(d&&(c?d=u+" = "+d+";":(d="return "+d+";",l===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),d="// "+d))),t.removeFlowTab().addFlowCode(t.tab+"	"+d+"\n\n"+t.tab+"}"),a!==null){t.addFlowCode(" else {\n\n").addFlowTab();let f=a.build(t,n);f&&(c?f=u+" = "+f+";":(f="return "+f+";",l===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),f="// "+f))),t.removeFlowTab().addFlowCode(t.tab+"	"+f+"\n\n"+t.tab+"}\n\n")}else t.addFlowCode("\n\n");return t.format(u,n,e)}}const Um=je(AU).setParameterLength(2,3);ot("select",Um);class CU extends Qt{static get type(){return"ContextNode"}constructor(t,e={}){super(),this.isContextNode=!0,this.node=t,this.value=e}getScope(){return this.node.getScope()}getNodeType(t){return this.node.getNodeType(t)}getMemberType(t,e){return this.node.getMemberType(t,e)}analyze(t){const e=t.getContext();t.setContext({...t.context,...this.value}),this.node.build(t),t.setContext(e)}setup(t){const e=t.getContext();t.setContext({...t.context,...this.value}),this.node.build(t),t.setContext(e)}generate(t,e){const n=t.getContext();t.setContext({...t.context,...this.value});const i=this.node.build(t,e);return t.setContext(n),i}}const Fm=je(CU).setParameterLength(1,2),RU=r=>Fm(r,{uniformFlow:!0}),mM=(r,t)=>Fm(r,{nodeName:t});function IU(r,t){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),mM(r,t)}ot("context",Fm);ot("label",IU);ot("uniformFlow",RU);ot("setName",mM);class NU extends Qt{static get type(){return"VarNode"}constructor(t,e=null,n=!1){super(),this.node=t,this.name=e,this.global=!0,this.isVarNode=!0,this.readOnly=n,this.parents=!0,this.intent=!1}setIntent(t){return this.intent=t,this}getIntent(){return this.intent}getMemberType(t,e){return this.node.getMemberType(t,e)}getElementType(t){return this.node.getElementType(t)}getNodeType(t){return this.node.getNodeType(t)}getArrayCount(t){return this.node.getArrayCount(t)}build(...t){return this.intent===!0&&t[0].getNodeProperties(this).assign!==!0?this.node.build(...t):super.build(...t)}generate(t){const{node:e,name:n,readOnly:i}=this,{renderer:s}=t,o=s.backend.isWebGPUBackend===!0;let a=!1,l=!1;i&&(a=t.isDeterministic(e),l=o?i:a);const c=t.getVectorType(this.getNodeType(t)),u=e.build(t,c),h=t.getVarFromNode(this,n,c,void 0,l),d=t.getPropertyName(h);let f=d;if(l)if(o)f=a?"const ".concat(d):"let ".concat(d);else{const p=e.getArrayCount(t);f="const ".concat(t.getVar(h.type,d,p))}return t.addLineFlowCode("".concat(f," = ").concat(u),this),d}}const gM=je(NU),PU=(r,t=null)=>gM(r,t).toStack(),LU=(r,t=null)=>gM(r,t,!0).toStack(),DU=r=>r;ot("toVar",PU);ot("toConst",LU);ot("toVarIntent",DU);class OU extends Qt{static get type(){return"SubBuild"}constructor(t,e,n=null){super(n),this.node=t,this.name=e,this.isSubBuildNode=!0}getNodeType(t){if(this.nodeType!==null)return this.nodeType;t.addSubBuild(this.name);const e=this.node.getNodeType(t);return t.removeSubBuild(),e}build(t,...e){t.addSubBuild(this.name);const n=this.node.build(t,...e);return t.removeSubBuild(),n}}const UU=(r,t,e=null)=>Tt(new OU(Tt(r),t,e));class FU extends Qt{static get type(){return"VaryingNode"}constructor(t,e=null){super(),this.node=t,this.name=e,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(t,e=null){return this.interpolationType=t,this.interpolationSampling=e,this}getHash(t){return this.name||super.getHash(t)}getNodeType(t){return this.node.getNodeType(t)}setupVarying(t){const e=t.getNodeProperties(this);let n=e.varying;if(n===void 0){const i=this.name,s=this.getNodeType(t),o=this.interpolationType,a=this.interpolationSampling;e.varying=n=t.getVaryingFromNode(this,i,s,o,a),e.node=UU(this.node,"VERTEX")}return n.needsInterpolation||(n.needsInterpolation=t.shaderStage==="fragment"),n}setup(t){this.setupVarying(t),t.flowNodeFromShaderStage(kc.VERTEX,this.node)}analyze(t){this.setupVarying(t),t.flowNodeFromShaderStage(kc.VERTEX,this.node)}generate(t){const e=t.getSubBuildProperty("property",t.currentStack),n=t.getNodeProperties(this),i=this.setupVarying(t);if(n[e]===void 0){const s=this.getNodeType(t),o=t.getPropertyName(i,kc.VERTEX);t.flowNodeFromShaderStage(kc.VERTEX,n.node,s,o),n[e]=o}return t.getPropertyName(i)}}const zs=je(FU).setParameterLength(1,2),BU=r=>zs(r);ot("toVarying",zs);ot("toVertexStage",BU);ot("varying",(...r)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),zs(...r)));ot("vertexStage",(...r)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),zs(...r)));const zU=ge(([r])=>{const t=r.mul(.9478672986).add(.0521327014).pow(2.4),e=r.mul(.0773993808),n=r.lessThanEqual(.04045);return Om(t,e,n)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),kU=ge(([r])=>{const t=r.pow(.41666).mul(1.055).sub(.055),e=r.mul(12.92),n=r.lessThanEqual(.0031308);return Om(t,e,n)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),Bm="WorkingColorSpace",VU="OutputColorSpace";class yM extends Mn{static get type(){return"ColorSpaceNode"}constructor(t,e,n){super("vec4"),this.colorNode=t,this.source=e,this.target=n}resolveColorSpace(t,e){return e===Bm?Qe.workingColorSpace:e===VU?t.context.outputColorSpace||t.renderer.outputColorSpace:e}setup(t){const{colorNode:e}=this,n=this.resolveColorSpace(t,this.source),i=this.resolveColorSpace(t,this.target);let s=e;return Qe.enabled===!1||n===i||!n||!i||(Qe.getTransfer(n)===Fa&&(s=dr(zU(s.rgb),s.a)),Qe.getPrimaries(n)!==Qe.getPrimaries(i)&&(s=dr(Il(Qe._getMatrix(new Ni,n,i)).mul(s.rgb),s.a)),Qe.getTransfer(i)===Fa&&(s=dr(kU(s.rgb),s.a))),s}}const HU=(r,t)=>Tt(new yM(Tt(r),Bm,t)),_M=(r,t)=>Tt(new yM(Tt(r),t,Bm));ot("workingToColorSpace",HU);ot("colorSpaceToWorking",_M);let GU=class extends Cl{static get type(){return"ReferenceElementNode"}constructor(r,t){super(r,t),this.referenceNode=r,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(r){const t=super.generate(r),e=this.referenceNode.getNodeType(),n=this.getNodeType();return r.format(t,e,n)}};class WU extends Qt{static get type(){return"ReferenceBaseNode"}constructor(t,e,n=null,i=null){super(),this.property=t,this.uniformType=e,this.object=n,this.count=i,this.properties=t.split("."),this.reference=n,this.node=null,this.group=null,this.updateType=qe.OBJECT}setGroup(t){return this.group=t,this}element(t){return Tt(new GU(this,Tt(t)))}setNodeType(t){const e=dn(null,t);this.group!==null&&e.setGroup(this.group),this.node=e}getNodeType(t){return this.node===null&&(this.updateReference(t),this.updateValue()),this.node.getNodeType(t)}getValueFromReference(t=this.reference){const{properties:e}=this;let n=t[e[0]];for(let i=1;i<e.length;i++)n=n[e[i]];return n}updateReference(t){return this.reference=this.object!==null?this.object:t.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const t=this.getValueFromReference();Array.isArray(t)?this.node.array=t:this.node.value=t}}class XU extends WU{static get type(){return"RendererReferenceNode"}constructor(t,e,n=null){super(t,e,n),this.renderer=n,this.setGroup(Ei)}updateReference(t){return this.reference=this.renderer!==null?this.renderer:t.renderer,this.reference}}const $U=(r,t,e=null)=>Tt(new XU(r,t,e));class YU extends Mn{static get type(){return"ToneMappingNode"}constructor(t,e=jU,n=null){super("vec3"),this.toneMapping=t,this.exposureNode=e,this.colorNode=n}customCacheKey(){return Zb(this.toneMapping)}setup(t){const e=this.colorNode||t.context.color,n=this.toneMapping;if(n===Zf)return e;let i=null;const s=t.renderer.library.getToneMappingFunction(n);return s!==null?i=dr(s(e.rgb,this.exposureNode),e.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",n),i=e),i}}const qU=(r,t,e)=>Tt(new YU(r,Tt(t),Tt(e))),jU=$U("toneMappingExposure","float");ot("toneMapping",(r,t,e)=>qU(t,e,r));class ZU extends Em{static get type(){return"BufferAttributeNode"}constructor(t,e=null,n=0,i=0){super(t,e),this.isBufferNode=!0,this.bufferType=e,this.bufferStride=n,this.bufferOffset=i,this.usage=Qu,this.instanced=!1,this.attribute=null,this.global=!0,t&&t.isBufferAttribute===!0&&(this.attribute=t,this.usage=t.usage,this.instanced=t.isInstancedBufferAttribute)}getHash(t){if(this.bufferStride===0&&this.bufferOffset===0){let e=t.globalCache.getData(this.value);return e===void 0&&(e={node:this},t.globalCache.setData(this.value,e)),e.node.uuid}return this.uuid}getNodeType(t){return this.bufferType===null&&(this.bufferType=t.getTypeFromAttribute(this.attribute)),this.bufferType}setup(t){if(this.attribute!==null)return;const e=this.getNodeType(t),n=this.value,i=t.getTypeLength(e),s=this.bufferStride||i,o=this.bufferOffset,a=n.isInterleavedBuffer===!0?n:new lD(n,s),l=new Mm(a,i,o);a.setUsage(this.usage),this.attribute=l,this.attribute.isInstancedBufferAttribute=this.instanced}generate(t){const e=this.getNodeType(t),n=t.getBufferAttributeFromNode(this,e),i=t.getPropertyName(n);let s=null;return t.shaderStage==="vertex"||t.shaderStage==="compute"?(this.name=i,s=i):s=zs(this).build(t,e),s}getInputType(){return"bufferAttribute"}setUsage(t){return this.usage=t,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=t),this}setInstanced(t){return this.instanced=t,this}}const JU=(r,t=null,e=0,n=0)=>Tt(new ZU(r,t,e,n));ot("toAttribute",r=>JU(r.value));class KU extends Qt{static get type(){return"ComputeNode"}constructor(t,e){super("void"),this.isComputeNode=!0,this.computeNode=t,this.workgroupSize=e,this.count=null,this.version=1,this.name="",this.updateBeforeType=qe.OBJECT,this.onInitFunction=null}setCount(t){return this.count=t,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}setName(t){return this.name=t,this}label(t){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(t)}onInit(t){return this.onInitFunction=t,this}updateBefore({renderer:t}){t.compute(this)}setup(t){const e=this.computeNode.build(t);if(e){const n=t.getNodeProperties(this);n.outputComputeNode=e.outputNode,e.outputNode=null}return e}generate(t,e){const{shaderStage:n}=t;if(n==="compute"){const i=this.computeNode.build(t,"void");i!==""&&t.addLineFlowCode(i,this)}else{const i=t.getNodeProperties(this).outputComputeNode;if(i)return i.build(t,e)}}}const vM=(r,t=[64])=>{(t.length===0||t.length>3)&&console.error("THREE.TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let e=0;e<t.length;e++){const n=t[e];(typeof n!="number"||n<=0||!Number.isInteger(n))&&console.error("THREE.TSL: compute() workgroupSize element at index [ ".concat(e," ] must be a positive integer"))}for(;t.length<3;)t.push(1);return Tt(new KU(Tt(r),t))},QU=(r,t,e)=>vM(r,e).setCount(t);ot("compute",QU);ot("computeKernel",vM);class tF extends Qt{static get type(){return"CacheNode"}constructor(t,e=!0){super(),this.node=t,this.parent=e,this.isCacheNode=!0}getNodeType(t){const e=t.getCache(),n=t.getCacheFromNode(this,this.parent);t.setCache(n);const i=this.node.getNodeType(t);return t.setCache(e),i}build(t,...e){const n=t.getCache(),i=t.getCacheFromNode(this,this.parent);t.setCache(i);const s=this.node.build(t,...e);return t.setCache(n),s}}const eF=(r,t)=>Tt(new tF(Tt(r),t));ot("cache",eF);class nF extends Qt{static get type(){return"BypassNode"}constructor(t,e){super(),this.isBypassNode=!0,this.outputNode=t,this.callNode=e}getNodeType(t){return this.outputNode.getNodeType(t)}generate(t){const e=this.callNode.build(t,"void");return e!==""&&t.addLineFlowCode(e,this),this.outputNode.build(t)}}const iF=je(nF).setParameterLength(2);ot("bypass",iF);class xM extends Qt{static get type(){return"RemapNode"}constructor(t,e,n,i=ln(0),s=ln(1)){super(),this.node=t,this.inLowNode=e,this.inHighNode=n,this.outLowNode=i,this.outHighNode=s,this.doClamp=!0}setup(){const{node:t,inLowNode:e,inHighNode:n,outLowNode:i,outHighNode:s,doClamp:o}=this;let a=t.sub(e).div(n.sub(e));return o===!0&&(a=a.clamp()),a.mul(s.sub(i)).add(i)}}const rF=je(xM,null,null,{doClamp:!1}).setParameterLength(3,5),sF=je(xM).setParameterLength(3,5);ot("remap",rF);ot("remapClamp",sF);class oF extends Qt{static get type(){return"ExpressionNode"}constructor(t="",e="void"){super(e),this.snippet=t}generate(t,e){const n=this.getNodeType(t),i=this.snippet;if(n==="void")t.addLineFlowCode(i,this);else return t.format(i,n,e)}}const ul=je(oF).setParameterLength(1,2),aF=r=>(r?Um(r,ul("discard")):ul("discard")).toStack();ot("discard",aF);class lF extends Mn{static get type(){return"RenderOutputNode"}constructor(t,e,n){super("vec4"),this.colorNode=t,this.toneMapping=e,this.outputColorSpace=n,this.isRenderOutputNode=!0}setup({context:t}){let e=this.colorNode||t.color;const n=(this.toneMapping!==null?this.toneMapping:t.toneMapping)||Zf,i=(this.outputColorSpace!==null?this.outputColorSpace:t.outputColorSpace)||Ku;return n!==Zf&&(e=e.toneMapping(n)),i!==Ku&&i!==Qe.workingColorSpace&&(e=e.workingToColorSpace(i)),e}}const cF=(r,t=null,e=null)=>Tt(new lF(Tt(r),t,e));ot("renderOutput",cF);class uF extends Mn{static get type(){return"DebugNode"}constructor(t,e=null){super(),this.node=t,this.callback=e}getNodeType(t){return this.node.getNodeType(t)}setup(t){return this.node.build(t)}analyze(t){return this.node.build(t)}generate(t){const e=this.callback,n=this.node.build(t),i="--- TSL debug - "+t.shaderStage+" shader ---",s="-".repeat(i.length);let o="";return o+="// #"+i+"#\n",o+=t.flow.code.replace(/^\t/mg,"")+"\n",o+="/* ... */ "+n+" /* ... */\n",o+="// #"+s+"#\n",e!==null?e(t,o):console.log(o),n}}const hF=(r,t=null)=>Tt(new uF(Tt(r),t)).toStack();ot("debug",hF);class dF extends Qt{static get type(){return"AttributeNode"}constructor(t,e=null){super(e),this.global=!0,this._attributeName=t}getHash(t){return this.getAttributeName(t)}getNodeType(t){let e=this.nodeType;if(e===null){const n=this.getAttributeName(t);if(t.hasGeometryAttribute(n)){const i=t.geometry.getAttribute(n);e=t.getTypeFromAttribute(i)}else e="float"}return e}setAttributeName(t){return this._attributeName=t,this}getAttributeName(){return this._attributeName}generate(t){const e=this.getAttributeName(t),n=this.getNodeType(t);if(t.hasGeometryAttribute(e)===!0){const i=t.geometry.getAttribute(e),s=t.getTypeFromAttribute(i),o=t.getAttribute(e,s);return t.shaderStage==="vertex"?t.format(o.name,s,n):zs(this).build(t,n)}else return console.warn('AttributeNode: Vertex attribute "'.concat(e,'" not found on geometry.')),t.generateConst(n)}serialize(t){super.serialize(t),t.global=this.global,t._attributeName=this._attributeName}deserialize(t){super.deserialize(t),this.global=t.global,this._attributeName=t._attributeName}}const $h=(r,t=null)=>Tt(new dF(r,t)),Pl=(r=0)=>$h("uv"+(r>0?r:""),"vec2");class fF extends Qt{static get type(){return"TextureSizeNode"}constructor(t,e=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=t,this.levelNode=e}generate(t,e){const n=this.textureNode.build(t,"property"),i=this.levelNode===null?"0":this.levelNode.build(t,"int");return t.format("".concat(t.getMethod("textureDimensions"),"( ").concat(n,", ").concat(i," )"),this.getNodeType(t),e)}}const d0=je(fF).setParameterLength(1,2);class pF extends Nl{static get type(){return"MaxMipLevelNode"}constructor(t){super(0),this._textureNode=t,this.updateType=qe.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const t=this.texture,e=t.images,n=e&&e.length>0?e[0]&&e[0].image||e[0]:t.image;if(n&&n.width!==void 0){const{width:i,height:s}=n;this.value=Math.log2(Math.max(i,s))}}}const mF=je(pF).setParameterLength(1),bM=new pi;class Yh extends Nl{static get type(){return"TextureNode"}constructor(t=bM,e=null,n=null,i=null){super(t),this.isTextureNode=!0,this.uvNode=e,this.levelNode=n,this.biasNode=i,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.offsetNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=qe.NONE,this.referenceNode=null,this._value=t,this._matrixUniform=null,this.setUpdateMatrix(e===null)}set value(t){this.referenceNode?this.referenceNode.value=t:this._value=t}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Wb?"uvec4":this.value.type===SL?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return Pl(this.value.channel)}updateReference(){return this.value}getTransformedUV(t){return this._matrixUniform===null&&(this._matrixUniform=dn(this.value.matrix)),this._matrixUniform.mul(we(t,1)).xy}setUpdateMatrix(t){return this.updateMatrix=t,this.updateType=t?qe.OBJECT:qe.NONE,this}setupUV(t,e){const n=this.value;return t.isFlipY()&&(n.image instanceof ImageBitmap&&n.flipY===!0||n.isRenderTargetTexture===!0||n.isFramebufferTexture===!0||n.isDepthTexture===!0)&&(this.sampler?e=e.flipY():e=e.setY(Wo(d0(this,this.levelNode).y).sub(e.y).sub(1))),e}setup(t){const e=t.getNodeProperties(this);e.referenceNode=this.referenceNode;const n=this.value;if(!n||n.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let i=this.uvNode;(i===null||t.context.forceUVContext===!0)&&t.context.getUV&&(i=t.context.getUV(this,t)),i||(i=this.getDefaultUV()),this.updateMatrix===!0&&(i=this.getTransformedUV(i)),i=this.setupUV(t,i);let s=this.levelNode;s===null&&t.context.getTextureLevel&&(s=t.context.getTextureLevel(this)),e.uvNode=i,e.levelNode=s,e.biasNode=this.biasNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e.depthNode=this.depthNode,e.offsetNode=this.offsetNode}generateUV(t,e){return e.build(t,this.sampler===!0?"vec2":"ivec2")}generateOffset(t,e){return e.build(t,"ivec2")}generateSnippet(t,e,n,i,s,o,a,l,c){const u=this.value;let h;return i?h=t.generateTextureLevel(u,e,n,i,o,c):s?h=t.generateTextureBias(u,e,n,s,o,c):l?h=t.generateTextureGrad(u,e,n,l,o,c):a?h=t.generateTextureCompare(u,e,n,a,o,c):this.sampler===!1?h=t.generateTextureLoad(u,e,n,o,c):h=t.generateTexture(u,e,n,o,c),h}generate(t,e){const n=this.value,i=t.getNodeProperties(this),s=super.generate(t,"property");if(/^sampler/.test(e))return s+"_sampler";if(t.isReference(e))return s;{const o=t.getDataFromNode(this);let a=o.propertyName;if(a===void 0){const{uvNode:u,levelNode:h,biasNode:d,compareNode:f,depthNode:p,gradNode:y,offsetNode:m}=i,g=this.generateUV(t,u),w=h?h.build(t,"float"):null,b=d?d.build(t,"float"):null,M=p?p.build(t,"int"):null,A=f?f.build(t,"float"):null,S=y?[y[0].build(t,"vec2"),y[1].build(t,"vec2")]:null,E=m?this.generateOffset(t,m):null,x=t.getVarFromNode(this);a=t.getPropertyName(x);const v=this.generateSnippet(t,s,g,w,b,M,A,S,E);t.addLineFlowCode("".concat(a," = ").concat(v),this),o.snippet=v,o.propertyName=a}let l=a;const c=this.getNodeType(t);return t.needsToWorkingColorSpace(n)&&(l=_M(ul(l,c),n.colorSpace).setup(t).build(t,c)),t.format(l,c,e)}}setSampler(t){return this.sampler=t,this}getSampler(){return this.sampler}uv(t){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(t)}sample(t){const e=this.clone();return e.uvNode=Tt(t),e.referenceNode=this.getBase(),Tt(e)}load(t){return this.sample(t).setSampler(!1)}blur(t){const e=this.clone();e.biasNode=Tt(t).mul(mF(e)),e.referenceNode=this.getBase();const n=e.value;return e.generateMipmaps===!1&&(n&&n.generateMipmaps===!1||n.minFilter===Go||n.magFilter===Go)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),e.biasNode=null),Tt(e)}level(t){const e=this.clone();return e.levelNode=Tt(t),e.referenceNode=this.getBase(),Tt(e)}size(t){return d0(this,t)}bias(t){const e=this.clone();return e.biasNode=Tt(t),e.referenceNode=this.getBase(),Tt(e)}getBase(){return this.referenceNode?this.referenceNode.getBase():this}compare(t){const e=this.clone();return e.compareNode=Tt(t),e.referenceNode=this.getBase(),Tt(e)}grad(t,e){const n=this.clone();return n.gradNode=[Tt(t),Tt(e)],n.referenceNode=this.getBase(),Tt(n)}depth(t){const e=this.clone();return e.depthNode=Tt(t),e.referenceNode=this.getBase(),Tt(e)}offset(t){const e=this.clone();return e.offsetNode=Tt(t),e.referenceNode=this.getBase(),Tt(e)}serialize(t){super.serialize(t),t.value=this.value.toJSON(t.meta).uuid,t.sampler=this.sampler,t.updateMatrix=this.updateMatrix,t.updateType=this.updateType}deserialize(t){super.deserialize(t),this.value=t.meta.textures[t.value],this.sampler=t.sampler,this.updateMatrix=t.updateMatrix,this.updateType=t.updateType}update(){const t=this.value,e=this._matrixUniform;e!==null&&(e.value=t.matrix),t.matrixAutoUpdate===!0&&t.updateMatrix()}clone(){const t=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return t.sampler=this.sampler,t.depthNode=this.depthNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.offsetNode=this.offsetNode,t}}const gF=je(Yh).setParameterLength(1,4).setName("texture"),yF=(r=bM,t=null,e=null,n=null)=>{let i;return r&&r.isTextureNode===!0?(i=Tt(r.clone()),i.referenceNode=r.getBase(),t!==null&&(i.uvNode=Tt(t)),e!==null&&(i.levelNode=Tt(e)),n!==null&&(i.biasNode=Tt(n))):i=gF(r,t,e,n),i};class MM extends Nl{static get type(){return"BufferNode"}constructor(t,e,n=0){super(t,e),this.isBufferNode=!0,this.bufferType=e,this.bufferCount=n}getElementType(t){return this.getNodeType(t)}getInputType(){return"buffer"}}const _F=(r,t,e)=>Tt(new MM(r,t,e));class vF extends Cl{static get type(){return"UniformArrayElementNode"}constructor(t,e){super(t,e),this.isArrayBufferElementNode=!0}generate(t){const e=super.generate(t),n=this.getNodeType(),i=this.node.getPaddedType();return t.format(e,i,n)}}class xF extends MM{static get type(){return"UniformArrayNode"}constructor(t,e=null){super(null),this.array=t,this.elementType=e===null?eh(t[0]):e,this.paddedType=this.getPaddedType(),this.updateType=qe.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const t=this.elementType;let e="vec4";return t==="mat2"?e="mat2":/mat/.test(t)===!0?e="mat4":t.charAt(0)==="i"?e="ivec4":t.charAt(0)==="u"&&(e="uvec4"),e}update(){const{array:t,value:e}=this,n=this.elementType;if(n==="float"||n==="int"||n==="uint")for(let i=0;i<t.length;i++){const s=i*4;e[s]=t[i]}else if(n==="color")for(let i=0;i<t.length;i++){const s=i*4,o=t[i];e[s]=o.r,e[s+1]=o.g,e[s+2]=o.b||0}else if(n==="mat2")for(let i=0;i<t.length;i++){const s=i*4,o=t[i];e[s]=o.elements[0],e[s+1]=o.elements[1],e[s+2]=o.elements[2],e[s+3]=o.elements[3]}else if(n==="mat3")for(let i=0;i<t.length;i++){const s=i*16,o=t[i];e[s]=o.elements[0],e[s+1]=o.elements[1],e[s+2]=o.elements[2],e[s+4]=o.elements[3],e[s+5]=o.elements[4],e[s+6]=o.elements[5],e[s+8]=o.elements[6],e[s+9]=o.elements[7],e[s+10]=o.elements[8],e[s+15]=1}else if(n==="mat4")for(let i=0;i<t.length;i++){const s=i*16,o=t[i];for(let a=0;a<o.elements.length;a++)e[s+a]=o.elements[a]}else for(let i=0;i<t.length;i++){const s=i*4,o=t[i];e[s]=o.x,e[s+1]=o.y,e[s+2]=o.z||0,e[s+3]=o.w||0}}setup(t){const e=this.array.length,n=this.elementType;let i=Float32Array;const s=this.paddedType,o=t.getTypeLength(s);return n.charAt(0)==="i"&&(i=Int32Array),n.charAt(0)==="u"&&(i=Uint32Array),this.value=new i(e*o),this.bufferCount=e,this.bufferType=s,super.setup(t)}element(t){return Tt(new vF(this,Tt(t)))}}const ps=(r,t)=>Tt(new xF(r,t));class bF extends Qt{constructor(t){super("float"),this.name=t,this.isBuiltinNode=!0}generate(){return this.name}}const SM=je(bF).setParameterLength(1);let ga,ya;class De extends Qt{static get type(){return"ScreenNode"}constructor(t){super(),this.scope=t,this._output=null,this.isViewportNode=!0}getNodeType(){return this.scope===De.DPR?"float":this.scope===De.VIEWPORT?"vec4":"vec2"}getUpdateType(){let t=qe.NONE;return(this.scope===De.SIZE||this.scope===De.VIEWPORT||this.scope===De.DPR)&&(t=qe.RENDER),this.updateType=t,t}update({renderer:t}){const e=t.getRenderTarget();this.scope===De.VIEWPORT?e!==null?ya.copy(e.viewport):(t.getViewport(ya),ya.multiplyScalar(t.getPixelRatio())):this.scope===De.DPR?this._output.value=t.getPixelRatio():e!==null?(ga.width=e.width,ga.height=e.height):t.getDrawingBufferSize(ga)}setup(){const t=this.scope;let e=null;return t===De.SIZE?e=dn(ga||(ga=new fi)):t===De.VIEWPORT?e=dn(ya||(ya=new $i)):t===De.DPR?e=dn(1):e=Rl(MF.div(f0)),this._output=e,e}generate(t){if(this.scope===De.COORDINATE){let e=t.getFragCoord();if(t.isFlipY()){const n=t.getNodeProperties(f0).outputNode.build(t);e="".concat(t.getType("vec2"),"( ").concat(e,".x, ").concat(n,".y - ").concat(e,".y )")}return e}return super.generate(t)}}De.COORDINATE="coordinate";De.VIEWPORT="viewport";De.SIZE="size";De.UV="uv";De.DPR="dpr";const zm=xr(De,De.UV),f0=xr(De,De.SIZE),MF=xr(De,De.COORDINATE),wM=xr(De,De.VIEWPORT);wM.zw;wM.xy;const SF=dn(0,"uint").setName("u_cameraIndex").setGroup(rM("cameraIndex")).toVarying("v_cameraIndex"),_a=dn("float").setName("cameraNear").setGroup(Ei).onRenderUpdate(({camera:r})=>r.near),va=dn("float").setName("cameraFar").setGroup(Ei).onRenderUpdate(({camera:r})=>r.far),Ll=ge(({camera:r})=>{let t;if(r.isArrayCamera&&r.cameras.length>0){const e=[];for(const n of r.cameras)e.push(n.matrixWorldInverse);t=ps(e).setGroup(Ei).setName("cameraViewMatrices").element(r.isMultiViewCamera?SM("gl_ViewID_OVR"):SF).toConst("cameraViewMatrix")}else t=dn("mat4").setName("cameraViewMatrix").setGroup(Ei).onRenderUpdate(({camera:e})=>e.matrixWorldInverse);return t}).once()(),p0=new JL;class Ne extends Qt{static get type(){return"Object3DNode"}constructor(t,e=null){super(),this.scope=t,this.object3d=e,this.updateType=qe.OBJECT,this.uniformNode=new Nl(null)}getNodeType(){const t=this.scope;if(t===Ne.WORLD_MATRIX)return"mat4";if(t===Ne.POSITION||t===Ne.VIEW_POSITION||t===Ne.DIRECTION||t===Ne.SCALE)return"vec3";if(t===Ne.RADIUS)return"float"}update(t){const e=this.object3d,n=this.uniformNode,i=this.scope;if(i===Ne.WORLD_MATRIX)n.value=e.matrixWorld;else if(i===Ne.POSITION)n.value=n.value||new Wt,n.value.setFromMatrixPosition(e.matrixWorld);else if(i===Ne.SCALE)n.value=n.value||new Wt,n.value.setFromMatrixScale(e.matrixWorld);else if(i===Ne.DIRECTION)n.value=n.value||new Wt,e.getWorldDirection(n.value);else if(i===Ne.VIEW_POSITION){const s=t.camera;n.value=n.value||new Wt,n.value.setFromMatrixPosition(e.matrixWorld),n.value.applyMatrix4(s.matrixWorldInverse)}else if(i===Ne.RADIUS){const s=t.object.geometry;s.boundingSphere===null&&s.computeBoundingSphere(),p0.copy(s.boundingSphere).applyMatrix4(e.matrixWorld),n.value=p0.radius}}generate(t){const e=this.scope;return e===Ne.WORLD_MATRIX?this.uniformNode.nodeType="mat4":e===Ne.POSITION||e===Ne.VIEW_POSITION||e===Ne.DIRECTION||e===Ne.SCALE?this.uniformNode.nodeType="vec3":e===Ne.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(t)}serialize(t){super.serialize(t),t.scope=this.scope}deserialize(t){super.deserialize(t),this.scope=t.scope}}Ne.WORLD_MATRIX="worldMatrix";Ne.POSITION="position";Ne.SCALE="scale";Ne.VIEW_POSITION="viewPosition";Ne.DIRECTION="direction";Ne.RADIUS="radius";class m0 extends Ne{static get type(){return"ModelNode"}constructor(t){super(t)}update(t){this.object3d=t.object,super.update(t)}}const wF=xr(m0,m0.WORLD_MATRIX),TF=dn(new Ni).onObjectUpdate(({object:r},t)=>t.value.getNormalMatrix(r.matrixWorld)),EF=ge(r=>r.renderer.overrideNodes.modelViewMatrix||AF).once()().toVar("modelViewMatrix"),AF=Ll.mul(wF),In=ge(r=>r.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),TM=In.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection");class CF extends Qt{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(t){if(t.shaderStage!=="fragment")return"true";const{material:e}=t;return e.side===Vb?"false":t.getFrontFacing()}}const RF=xr(CF),EM=ln(RF).mul(2).sub(1),qh=ge(([r],{material:t})=>{const e=t.side;return e===Vb?r=r.mul(-1):e===xL&&(r=r.mul(EM)),r}),IF=$h("normal","vec3"),NF=ge(r=>r.geometry.hasAttribute("normal")===!1?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),we(0,1,0)):IF,"vec3").once()().toVar("normalLocal"),PF=In.dFdx().cross(In.dFdy()).normalize().toVar("normalFlat"),LF=ge(r=>{let t;return r.material.flatShading===!0?t=PF:t=AM(NF).toVarying("v_normalViewGeometry").normalize(),t},"vec3").once()().toVar("normalViewGeometry"),mi=ge(({subBuildFn:r,material:t,context:e})=>{let n;return r==="NORMAL"||r==="VERTEX"?(n=LF,t.flatShading!==!0&&(n=qh(n))):n=e.setupNormal().context({getUV:null}),n},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),DF=mi.transformDirection(Ll).toVar("normalWorld"),OF=ge(({subBuildFn:r,context:t})=>{let e;return r==="NORMAL"||r==="VERTEX"?e=mi:e=t.setupClearcoatNormal().context({getUV:null}),e},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),AM=ge(([r],t)=>{const e=t.renderer.overrideNodes.modelNormalViewMatrix;if(e!==null)return e.transformDirection(r);const n=TF.mul(r);return Ll.transformDirection(n)});ge(()=>(console.warn('THREE.TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),mi)).once(["NORMAL","VERTEX"])();ge(()=>(console.warn('THREE.TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),DF)).once(["NORMAL","VERTEX"])();ge(()=>(console.warn('THREE.TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),OF)).once(["NORMAL","VERTEX"])();const g0=new Jo,ff=new Wn,UF=dn(0).onReference(({material:r})=>r).onObjectUpdate(({material:r})=>r.refractionRatio),FF=dn(new Wn).onReference(function(r){return r.material}).onObjectUpdate(function({material:r,scene:t}){const e=t.environment!==null&&r.envMap===null?t.environmentRotation:r.envMapRotation;return e?(g0.copy(e),ff.makeRotationFromEuler(g0)):ff.identity(),ff}),BF=TM.negate().reflect(mi),zF=TM.negate().refract(mi,UF),kF=BF.transformDirection(Ll).toVar("reflectVector"),VF=zF.transformDirection(Ll).toVar("reflectVector"),HF=new aD;class GF extends Yh{static get type(){return"CubeTextureNode"}constructor(t,e=null,n=null,i=null){super(t,e,n,i),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const t=this.value;return t.mapping===Hb?kF:t.mapping===bL?VF:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',t.mapping),we(0,0,0))}setUpdateMatrix(){}setupUV(t,e){const n=this.value;return(t.renderer.coordinateSystem===th||!n.isRenderTargetTexture)&&(e=we(e.x.negate(),e.yz)),FF.mul(e)}generateUV(t,e){return e.build(t,"vec3")}}const WF=je(GF).setParameterLength(1,4).setName("cubeTexture"),XF=(r=HF,t=null,e=null,n=null)=>{let i;return r&&r.isCubeTextureNode===!0?(i=Tt(r.clone()),i.referenceNode=r,t!==null&&(i.uvNode=Tt(t)),e!==null&&(i.levelNode=Tt(e)),n!==null&&(i.biasNode=Tt(n))):i=WF(r,t,e,n),i};class $F extends Cl{static get type(){return"ReferenceElementNode"}constructor(t,e){super(t,e),this.referenceNode=t,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(t){const e=super.generate(t),n=this.referenceNode.getNodeType(),i=this.getNodeType();return t.format(e,n,i)}}class CM extends Qt{static get type(){return"ReferenceNode"}constructor(t,e,n=null,i=null){super(),this.property=t,this.uniformType=e,this.object=n,this.count=i,this.properties=t.split("."),this.reference=n,this.node=null,this.group=null,this.name=null,this.updateType=qe.OBJECT}element(t){return Tt(new $F(this,Tt(t)))}setGroup(t){return this.group=t,this}setName(t){return this.name=t,this}label(t){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(t)}setNodeType(t){let e=null;this.count!==null?e=_F(null,t,this.count):Array.isArray(this.getValueFromReference())?e=ps(null,t):t==="texture"?e=yF(null):t==="cubeTexture"?e=XF(null):e=dn(null,t),this.group!==null&&e.setGroup(this.group),this.name!==null&&e.setName(this.name),this.node=e}getNodeType(t){return this.node===null&&(this.updateReference(t),this.updateValue()),this.node.getNodeType(t)}getValueFromReference(t=this.reference){const{properties:e}=this;let n=t[e[0]];for(let i=1;i<e.length;i++)n=n[e[i]];return n}updateReference(t){return this.reference=this.object!==null?this.object:t.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const t=this.getValueFromReference();Array.isArray(t)?this.node.array=t:this.node.value=t}}const nh=(r,t,e)=>Tt(new CM(r,t,e));class YF extends CM{static get type(){return"MaterialReferenceNode"}constructor(t,e,n=null){super(t,e,n),this.material=n,this.isMaterialReferenceNode=!0}updateReference(t){return this.reference=this.material!==null?this.material:t.material,this.reference}}const qF=(r,t,e=null)=>Tt(new YF(r,t,e)),RM=Pl(),jF=In.dFdx(),ZF=In.dFdy(),IM=RM.dFdx(),NM=RM.dFdy(),PM=mi,LM=ZF.cross(PM),DM=PM.cross(jF),ip=LM.mul(IM.x).add(DM.mul(NM.x)),rp=LM.mul(IM.y).add(DM.mul(NM.y)),y0=ip.dot(ip).max(rp.dot(rp)),OM=y0.equal(0).select(0,y0.inverseSqrt()),JF=ip.mul(OM).toVar("tangentViewFrame"),KF=rp.mul(OM).toVar("bitangentViewFrame"),UM=ge(r=>(r.geometry.hasAttribute("tangent")===!1&&r.geometry.computeTangents(),$h("tangent","vec4")))(),QF=UM.xyz.toVar("tangentLocal"),FM=ge(({subBuildFn:r,geometry:t,material:e})=>{let n;return r==="VERTEX"||t.hasAttribute("tangent")?n=EF.mul(dr(QF,0)).xyz.toVarying("v_tangentView").normalize():n=JF,e.flatShading!==!0&&(n=qh(n)),n},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),tB=ge(([r,t],{subBuildFn:e,material:n})=>{let i=r.mul(UM.w).xyz;return e==="NORMAL"&&n.flatShading!==!0&&(i=i.toVarying(t)),i}).once(["NORMAL"]),eB=ge(({subBuildFn:r,geometry:t,material:e})=>{let n;return r==="VERTEX"||t.hasAttribute("tangent")?n=tB(mi.cross(FM),"v_bitangentView").normalize():n=KF,e.flatShading!==!0&&(n=qh(n)),n},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),nB=Il(FM,eB,mi).toVar("TBNViewMatrix");class iB extends Mn{static get type(){return"NormalMapNode"}constructor(t,e=null){super("vec3"),this.node=t,this.scaleNode=e,this.normalMapType=H_}setup({material:t}){const{normalMapType:e,scaleNode:n}=this;let i=this.node.mul(2).sub(1);if(n!==null){let o=n;t.flatShading===!0&&(o=qh(o)),i=we(i.xy.mul(o),i.z)}let s=null;return e===CL?s=AM(i):e===H_?s=nB.mul(i).normalize():(console.error("THREE.NodeMaterial: Unsupported normal map type: ".concat(e)),s=mi),s}}const _0=je(iB).setParameterLength(1,2),rB=ge(({textureNode:r,bumpScale:t})=>{const e=i=>r.cache().context({getUV:s=>i(s.uvNode||Pl()),forceUVContext:!0}),n=ln(e(i=>i));return Rl(ln(e(i=>i.add(i.dFdx()))).sub(n),ln(e(i=>i.add(i.dFdy()))).sub(n)).mul(t)}),sB=ge(r=>{const{surf_pos:t,surf_norm:e,dHdxy:n}=r,i=t.dFdx().normalize(),s=t.dFdy().normalize(),o=e,a=s.cross(o),l=o.cross(i),c=i.dot(a).mul(EM),u=c.sign().mul(n.x.mul(a).add(n.y.mul(l)));return c.abs().mul(e).sub(u).normalize()});class oB extends Mn{static get type(){return"BumpMapNode"}constructor(t,e=null){super("vec3"),this.textureNode=t,this.scaleNode=e}setup(){const t=this.scaleNode!==null?this.scaleNode:1,e=rB({textureNode:this.textureNode,bumpScale:t});return sB({surf_pos:In,surf_norm:mi,dHdxy:e})}}const aB=je(oB).setParameterLength(1,2),v0=new Map;class Gt extends Qt{static get type(){return"MaterialNode"}constructor(t){super(),this.scope=t}getCache(t,e){let n=v0.get(t);return n===void 0&&(n=qF(t,e),v0.set(t,n)),n}getFloat(t){return this.getCache(t,"float")}getColor(t){return this.getCache(t,"color")}getTexture(t){return this.getCache(t==="map"?"map":t+"Map","texture")}setup(t){const e=t.context.material,n=this.scope;let i=null;if(n===Gt.COLOR){const s=e.color!==void 0?this.getColor(n):we();e.map&&e.map.isTexture===!0?i=s.mul(this.getTexture("map")):i=s}else if(n===Gt.OPACITY){const s=this.getFloat(n);e.alphaMap&&e.alphaMap.isTexture===!0?i=s.mul(this.getTexture("alpha")):i=s}else if(n===Gt.SPECULAR_STRENGTH)e.specularMap&&e.specularMap.isTexture===!0?i=this.getTexture("specular").r:i=ln(1);else if(n===Gt.SPECULAR_INTENSITY){const s=this.getFloat(n);e.specularIntensityMap&&e.specularIntensityMap.isTexture===!0?i=s.mul(this.getTexture(n).a):i=s}else if(n===Gt.SPECULAR_COLOR){const s=this.getColor(n);e.specularColorMap&&e.specularColorMap.isTexture===!0?i=s.mul(this.getTexture(n).rgb):i=s}else if(n===Gt.ROUGHNESS){const s=this.getFloat(n);e.roughnessMap&&e.roughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).g):i=s}else if(n===Gt.METALNESS){const s=this.getFloat(n);e.metalnessMap&&e.metalnessMap.isTexture===!0?i=s.mul(this.getTexture(n).b):i=s}else if(n===Gt.EMISSIVE){const s=this.getFloat("emissiveIntensity"),o=this.getColor(n).mul(s);e.emissiveMap&&e.emissiveMap.isTexture===!0?i=o.mul(this.getTexture(n)):i=o}else if(n===Gt.NORMAL)e.normalMap?(i=_0(this.getTexture("normal"),this.getCache("normalScale","vec2")),i.normalMapType=e.normalMapType):e.bumpMap?i=aB(this.getTexture("bump").r,this.getFloat("bumpScale")):i=mi;else if(n===Gt.CLEARCOAT){const s=this.getFloat(n);e.clearcoatMap&&e.clearcoatMap.isTexture===!0?i=s.mul(this.getTexture(n).r):i=s}else if(n===Gt.CLEARCOAT_ROUGHNESS){const s=this.getFloat(n);e.clearcoatRoughnessMap&&e.clearcoatRoughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).r):i=s}else if(n===Gt.CLEARCOAT_NORMAL)e.clearcoatNormalMap?i=_0(this.getTexture(n),this.getCache(n+"Scale","vec2")):i=mi;else if(n===Gt.SHEEN){const s=this.getColor("sheenColor").mul(this.getFloat("sheen"));e.sheenColorMap&&e.sheenColorMap.isTexture===!0?i=s.mul(this.getTexture("sheenColor").rgb):i=s}else if(n===Gt.SHEEN_ROUGHNESS){const s=this.getFloat(n);e.sheenRoughnessMap&&e.sheenRoughnessMap.isTexture===!0?i=s.mul(this.getTexture(n).a):i=s,i=i.clamp(.07,1)}else if(n===Gt.ANISOTROPY)if(e.anisotropyMap&&e.anisotropyMap.isTexture===!0){const s=this.getTexture(n);i=nM(xa.x,xa.y,xa.y.negate(),xa.x).mul(s.rg.mul(2).sub(Rl(1)).normalize().mul(s.b))}else i=xa;else if(n===Gt.IRIDESCENCE_THICKNESS){const s=nh("1","float",e.iridescenceThicknessRange);if(e.iridescenceThicknessMap){const o=nh("0","float",e.iridescenceThicknessRange);i=s.sub(o).mul(this.getTexture(n).g).add(o)}else i=s}else if(n===Gt.TRANSMISSION){const s=this.getFloat(n);e.transmissionMap?i=s.mul(this.getTexture(n).r):i=s}else if(n===Gt.THICKNESS){const s=this.getFloat(n);e.thicknessMap?i=s.mul(this.getTexture(n).g):i=s}else if(n===Gt.IOR)i=this.getFloat(n);else if(n===Gt.LIGHT_MAP)i=this.getTexture(n).rgb.mul(this.getFloat("lightMapIntensity"));else if(n===Gt.AO)i=this.getTexture(n).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(n===Gt.LINE_DASH_OFFSET)i=e.dashOffset?this.getFloat(n):ln(0);else{const s=this.getNodeType(t);i=this.getCache(n,s)}return i}}Gt.ALPHA_TEST="alphaTest";Gt.COLOR="color";Gt.OPACITY="opacity";Gt.SHININESS="shininess";Gt.SPECULAR="specular";Gt.SPECULAR_STRENGTH="specularStrength";Gt.SPECULAR_INTENSITY="specularIntensity";Gt.SPECULAR_COLOR="specularColor";Gt.REFLECTIVITY="reflectivity";Gt.ROUGHNESS="roughness";Gt.METALNESS="metalness";Gt.NORMAL="normal";Gt.CLEARCOAT="clearcoat";Gt.CLEARCOAT_ROUGHNESS="clearcoatRoughness";Gt.CLEARCOAT_NORMAL="clearcoatNormal";Gt.EMISSIVE="emissive";Gt.ROTATION="rotation";Gt.SHEEN="sheen";Gt.SHEEN_ROUGHNESS="sheenRoughness";Gt.ANISOTROPY="anisotropy";Gt.IRIDESCENCE="iridescence";Gt.IRIDESCENCE_IOR="iridescenceIOR";Gt.IRIDESCENCE_THICKNESS="iridescenceThickness";Gt.IOR="ior";Gt.TRANSMISSION="transmission";Gt.THICKNESS="thickness";Gt.ATTENUATION_DISTANCE="attenuationDistance";Gt.ATTENUATION_COLOR="attenuationColor";Gt.LINE_SCALE="scale";Gt.LINE_DASH_SIZE="dashSize";Gt.LINE_GAP_SIZE="gapSize";Gt.LINE_WIDTH="linewidth";Gt.LINE_DASH_OFFSET="dashOffset";Gt.POINT_SIZE="size";Gt.DISPERSION="dispersion";Gt.LIGHT_MAP="light";Gt.AO="ao";const xa=dn(new fi).onReference(function(r){return r.material}).onRenderUpdate(function({material:r}){this.value.set(r.anisotropy*Math.cos(r.anisotropyRotation),r.anisotropy*Math.sin(r.anisotropyRotation))});class ei extends Qt{static get type(){return"IndexNode"}constructor(t){super("uint"),this.scope=t,this.isIndexNode=!0}generate(t){const e=this.getNodeType(t),n=this.scope;let i;if(n===ei.VERTEX)i=t.getVertexIndex();else if(n===ei.INSTANCE)i=t.getInstanceIndex();else if(n===ei.DRAW)i=t.getDrawIndex();else if(n===ei.INVOCATION_LOCAL)i=t.getInvocationLocalIndex();else if(n===ei.INVOCATION_SUBGROUP)i=t.getInvocationSubgroupIndex();else if(n===ei.SUBGROUP)i=t.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+n);let s;return t.shaderStage==="vertex"||t.shaderStage==="compute"?s=i:s=zs(this).build(t,e),s}}ei.VERTEX="vertex";ei.INSTANCE="instance";ei.SUBGROUP="subgroup";ei.INVOCATION_LOCAL="invocationLocal";ei.INVOCATION_SUBGROUP="invocationSubgroup";ei.DRAW="draw";class lB extends Qt{static get type(){return"LoopNode"}constructor(t=[]){super(),this.params=t}getVarName(t){return String.fromCharCode(105+t)}getProperties(t){const e=t.getNodeProperties(this);if(e.stackNode!==void 0)return e;const n={};for(let o=0,a=this.params.length-1;o<a;o++){const l=this.params[o],c=l.isNode!==!0&&l.name||this.getVarName(o),u=l.isNode!==!0&&l.type||"int";n[c]=ul(c,u)}const i=t.addStack();e.returnsNode=this.params[this.params.length-1](n,t),e.stackNode=i;const s=this.params[0];return s.isNode!==!0&&typeof s.update=="function"&&(e.updateNode=ge(this.params[0].update)(n)),t.removeStack(),e}getNodeType(t){const{returnsNode:e}=this.getProperties(t);return e?e.getNodeType(t):"void"}setup(t){this.getProperties(t)}generate(t){const e=this.getProperties(t),n=this.params,i=e.stackNode;for(let a=0,l=n.length-1;a<l;a++){const c=n[a];let u=!1,h=null,d=null,f=null,p=null,y=null,m=null;c.isNode?c.getNodeType(t)==="bool"?(u=!0,p="bool",d=c.build(t,p)):(p="int",f=this.getVarName(a),h="0",d=c.build(t,p),y="<"):(p=c.type||"int",f=c.name||this.getVarName(a),h=c.start,d=c.end,y=c.condition,m=c.update,typeof h=="number"?h=t.generateConst(p,h):h&&h.isNode&&(h=h.build(t,p)),typeof d=="number"?d=t.generateConst(p,d):d&&d.isNode&&(d=d.build(t,p)),h!==void 0&&d===void 0?(h=h+" - 1",d="0",y=">="):d!==void 0&&h===void 0&&(h="0",y="<"),y===void 0&&(Number(h)>Number(d)?y=">=":y="<"));let g;if(u)g="while ( ".concat(d," )");else{const w={start:h,end:d},b=w.start,M=w.end;let A;const S=()=>y.includes("<")?"+=":"-=";if(m!=null)switch(typeof m){case"function":A=t.flowStagesNode(e.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":A=f+" "+S()+" "+t.generateConst(p,m);break;case"string":A=f+" "+m;break;default:m.isNode?A=f+" "+S()+" "+m.build(t):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),A="break /* invalid update */")}else p==="int"||p==="uint"?m=y.includes("<")?"++":"--":m=S()+" 1.",A=f+" "+m;const E=t.getVar(p,f)+" = "+b,x=f+" "+y+" "+M;g="for ( ".concat(E,"; ").concat(x,"; ").concat(A," )")}t.addFlowCode((a===0?"\n":"")+t.tab+g+" {\n\n").addFlowTab()}const s=i.build(t,"void"),o=e.returnsNode?e.returnsNode.build(t):"";t.removeFlowTab().addFlowCode("\n"+t.tab+s);for(let a=0,l=this.params.length-1;a<l;a++)t.addFlowCode((a===0?"":t.tab)+"}\n\n").removeFlowTab();return t.addFlowTab(),o}}const ba=(...r)=>Tt(new lB(Co(r,"int"))).toStack(),yo=new fi;class cB extends Yh{static get type(){return"ViewportTextureNode"}constructor(t=zm,e=null,n=null){let i=null;n===null?(i=new dD,i.minFilter=Gb,n=i):i=n,super(n,t,e),this.generateMipmaps=!1,this.defaultFramebuffer=i,this.isOutputTextureNode=!0,this.updateBeforeType=qe.FRAME,this._cacheTextures=new WeakMap}getTextureForReference(t=null){let e,n;if(this.referenceNode?(e=this.referenceNode.defaultFramebuffer,n=this.referenceNode._cacheTextures):(e=this.defaultFramebuffer,n=this._cacheTextures),t===null)return e;if(n.has(t)===!1){const i=e.clone();n.set(t,i)}return n.get(t)}updateReference(t){const e=t.renderer.getRenderTarget();return this.value=this.getTextureForReference(e),this.value}updateBefore(t){const e=t.renderer,n=e.getRenderTarget();n===null?e.getDrawingBufferSize(yo):yo.set(n.width,n.height);const i=this.getTextureForReference(n);(i.image.width!==yo.width||i.image.height!==yo.height)&&(i.image.width=yo.width,i.image.height=yo.height,i.needsUpdate=!0);const s=i.generateMipmaps;i.generateMipmaps=this.generateMipmaps,e.copyFramebufferToTexture(i),i.generateMipmaps=s}clone(){const t=new this.constructor(this.uvNode,this.levelNode,this.value);return t.generateMipmaps=this.generateMipmaps,t}}let Gc=null;class uB extends cB{static get type(){return"ViewportDepthTextureNode"}constructor(t=zm,e=null){Gc===null&&(Gc=new Sm),super(t,e,Gc)}getTextureForReference(){return Gc}}const hB=je(uB).setParameterLength(0,2);class di extends Qt{static get type(){return"ViewportDepthNode"}constructor(t,e=null){super("float"),this.scope=t,this.valueNode=e,this.isViewportDepthNode=!0}generate(t){const{scope:e}=this;return e===di.DEPTH_BASE?t.getFragDepth():super.generate(t)}setup({camera:t}){const{scope:e}=this,n=this.valueNode;let i=null;if(e===di.DEPTH_BASE)n!==null&&(i=zM().assign(n));else if(e===di.DEPTH)t.isPerspectiveCamera?i=dB(In.z,_a,va):i=Kc(In.z,_a,va);else if(e===di.LINEAR_DEPTH)if(n!==null)if(t.isPerspectiveCamera){const s=BM(n,_a,va);i=Kc(s,_a,va)}else i=n;else i=Kc(In.z,_a,va);return i}}di.DEPTH_BASE="depthBase";di.DEPTH="depth";di.LINEAR_DEPTH="linearDepth";const Kc=(r,t,e)=>r.add(t).div(t.sub(e)),dB=(r,t,e)=>t.add(r).mul(e).div(e.sub(t).mul(r)),BM=(r,t,e)=>t.mul(e).div(e.sub(t).mul(r).sub(e)),zM=je(di,di.DEPTH_BASE),fB=xr(di,di.DEPTH);hB();fB.assign=r=>zM(r);class Es extends Qt{static get type(){return"ClippingNode"}constructor(t=Es.DEFAULT){super(),this.scope=t}setup(t){super.setup(t);const e=t.clippingContext,{intersectionPlanes:n,unionPlanes:i}=e;return this.hardwareClipping=t.material.hardwareClipping,this.scope===Es.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(n,i):this.scope===Es.HARDWARE?this.setupHardwareClipping(i,t):this.setupDefault(n,i)}setupAlphaToCoverage(t,e){return ge(()=>{const n=ln().toVar("distanceToPlane"),i=ln().toVar("distanceToGradient"),s=ln(1).toVar("clipOpacity"),o=e.length;if(this.hardwareClipping===!1&&o>0){const l=ps(e).setGroup(Ei);ba(o,({i:c})=>{const u=l.element(c);n.assign(In.dot(u.xyz).negate().add(u.w)),i.assign(n.fwidth().div(2)),s.mulAssign(cl(i.negate(),i,n))})}const a=t.length;if(a>0){const l=ps(t).setGroup(Ei),c=ln(1).toVar("intersectionClipOpacity");ba(a,({i:u})=>{const h=l.element(u);n.assign(In.dot(h.xyz).negate().add(h.w)),i.assign(n.fwidth().div(2)),c.mulAssign(cl(i.negate(),i,n).oneMinus())}),s.mulAssign(c.oneMinus())}c0.a.mulAssign(s),c0.a.equal(0).discard()})()}setupDefault(t,e){return ge(()=>{const n=e.length;if(this.hardwareClipping===!1&&n>0){const s=ps(e).setGroup(Ei);ba(n,({i:o})=>{const a=s.element(o);In.dot(a.xyz).greaterThan(a.w).discard()})}const i=t.length;if(i>0){const s=ps(t).setGroup(Ei),o=eM(!0).toVar("clipped");ba(i,({i:a})=>{const l=s.element(a);o.assign(In.dot(l.xyz).greaterThan(l.w).and(o))}),o.discard()}})()}setupHardwareClipping(t,e){const n=t.length;return e.enableHardwareClipping(n),ge(()=>{const i=ps(t).setGroup(Ei),s=SM(e.getClipDistance());ba(n,({i:o})=>{const a=i.element(o),l=In.dot(a.xyz).sub(a.w).negate();s.element(o).assign(l)})})()}}Es.ALPHA_TO_COVERAGE="alphaToCoverage";Es.DEFAULT="default";Es.HARDWARE="hardware";we(.04);ln(1);const pB=ge(([r,t])=>{const e=r.toVar();e.assign(Bs(2,e).sub(1));const n=we(e,1).toVar();return tM(t.equal(0),()=>{n.assign(n.zyx)}).ElseIf(t.equal(1),()=>{n.assign(n.xzy),n.xz.mulAssign(-1)}).ElseIf(t.equal(2),()=>{n.x.mulAssign(-1)}).ElseIf(t.equal(3),()=>{n.assign(n.zyx),n.xz.mulAssign(-1)}).ElseIf(t.equal(4),()=>{n.assign(n.xzy),n.xy.mulAssign(-1)}).ElseIf(t.equal(5),()=>{n.z.mulAssign(-1)}),n}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),pf=pB(Pl(),$h("faceIndex")).normalize();pf.x,pf.y,pf.z;Xh("vec3");Xh("vec3");Xh("vec3");new hD;new Wt;new Wt;new Wt;new Wn;new Wt(0,0,-1);new $i;new Wt;new Wt;new $i;new fi;const mB=new Yb;zm.flipX();mB.depthTexture=new Sm(1,1);class hl extends Qt{static get type(){return"EventNode"}constructor(t,e){super("void"),this.eventType=t,this.callback=e,t===hl.OBJECT?this.updateType=qe.OBJECT:t===hl.MATERIAL&&(this.updateType=qe.RENDER)}update(t){this.callback(t)}}hl.OBJECT="object";hl.MATERIAL="material";const Ma=new Jo,mf=new Wn;class Fr extends Qt{static get type(){return"SceneNode"}constructor(t=Fr.BACKGROUND_BLURRINESS,e=null){super(),this.scope=t,this.scene=e}setup(t){const e=this.scope,n=this.scene!==null?this.scene:t.scene;let i;return e===Fr.BACKGROUND_BLURRINESS?i=nh("backgroundBlurriness","float",n):e===Fr.BACKGROUND_INTENSITY?i=nh("backgroundIntensity","float",n):e===Fr.BACKGROUND_ROTATION?i=dn("mat4").setName("backgroundRotation").setGroup(Ei).onRenderUpdate(()=>{const s=n.background;return s!==null&&s.isTexture&&s.mapping!==_m?(Ma.copy(n.backgroundRotation),Ma.x*=-1,Ma.y*=-1,Ma.z*=-1,mf.makeRotationFromEuler(Ma)):mf.identity(),mf}):console.error("THREE.SceneNode: Unknown scope:",e),i}}Fr.BACKGROUND_BLURRINESS="backgroundBlurriness";Fr.BACKGROUND_INTENSITY="backgroundIntensity";Fr.BACKGROUND_ROTATION="backgroundRotation";ge(({texture:r,uv:t})=>{const e=we().toVar();return tM(t.x.lessThan(1e-4),()=>{e.assign(we(1,0,0))}).ElseIf(t.y.lessThan(1e-4),()=>{e.assign(we(0,1,0))}).ElseIf(t.z.lessThan(1e-4),()=>{e.assign(we(0,0,1))}).ElseIf(t.x.greaterThan(1-1e-4),()=>{e.assign(we(-1,0,0))}).ElseIf(t.y.greaterThan(1-1e-4),()=>{e.assign(we(0,-1,0))}).ElseIf(t.z.greaterThan(1-1e-4),()=>{e.assign(we(0,0,-1))}).Else(()=>{const n=r.sample(t.add(we(-.01,0,0))).r.sub(r.sample(t.add(we(.01,0,0))).r),i=r.sample(t.add(we(0,-.01,0))).r.sub(r.sample(t.add(we(0,.01,0))).r),s=r.sample(t.add(we(0,0,-.01))).r.sub(r.sample(t.add(we(0,0,.01))).r);e.assign(we(n,i,s))}),e.normalize()});const Wc=new fi;class gB extends Yh{static get type(){return"PassTextureNode"}constructor(t,e){super(e),this.passNode=t,this.setUpdateMatrix(!1)}setup(t){return this.passNode.build(t),super.setup(t)}clone(){return new this.constructor(this.passNode,this.value)}}class x0 extends gB{static get type(){return"PassMultipleTextureNode"}constructor(t,e,n=!1){super(t,null),this.textureName=e,this.previousTexture=n}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(t){return this.updateTexture(),super.setup(t)}clone(){const t=new this.constructor(this.passNode,this.textureName,this.previousTexture);return t.uvNode=this.uvNode,t.levelNode=this.levelNode,t.biasNode=this.biasNode,t.sampler=this.sampler,t.depthNode=this.depthNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t}}class jh extends Mn{static get type(){return"PassNode"}constructor(t,e,n,i={}){super("vec4"),this.scope=t,this.scene=e,this.camera=n,this.options=i,this._pixelRatio=1,this._width=1,this._height=1;const s=new Sm;s.isRenderTargetTexture=!0,s.name="depth";const o=new Yb(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:TL,...i});o.texture.name="output",o.depthTexture=s,this.renderTarget=o,this._textures={output:o.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=dn(0),this._cameraFar=dn(0),this._mrt=null,this._layers=null,this._resolution=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=qe.FRAME,this.global=!0}setResolution(t){return this._resolution=t,this}getResolution(){return this._resolution}setLayers(t){return this._layers=t,this}getLayers(){return this._layers}setMRT(t){return this._mrt=t,this}getMRT(){return this._mrt}getTexture(t){let e=this._textures[t];return e===void 0&&(e=this.renderTarget.texture.clone(),e.name=t,this._textures[t]=e,this.renderTarget.textures.push(e)),e}getPreviousTexture(t){let e=this._previousTextures[t];return e===void 0&&(e=this.getTexture(t).clone(),this._previousTextures[t]=e),e}toggleTexture(t){const e=this._previousTextures[t];if(e!==void 0){const n=this._textures[t],i=this.renderTarget.textures.indexOf(n);this.renderTarget.textures[i]=e,this._textures[t]=e,this._previousTextures[t]=n,this._textureNodes[t].updateTexture(),this._previousTextureNodes[t].updateTexture()}}getTextureNode(t="output"){let e=this._textureNodes[t];return e===void 0&&(e=Tt(new x0(this,t)),e.updateTexture(),this._textureNodes[t]=e),e}getPreviousTextureNode(t="output"){let e=this._previousTextureNodes[t];return e===void 0&&(this._textureNodes[t]===void 0&&this.getTextureNode(t),e=Tt(new x0(this,t,!0)),e.updateTexture(),this._previousTextureNodes[t]=e),e}getViewZNode(t="depth"){let e=this._viewZNodes[t];if(e===void 0){const n=this._cameraNear,i=this._cameraFar;this._viewZNodes[t]=e=BM(this.getTextureNode(t),n,i)}return e}getLinearDepthNode(t="depth"){let e=this._linearDepthNodes[t];if(e===void 0){const n=this._cameraNear,i=this._cameraFar,s=this.getViewZNode(t);this._linearDepthNodes[t]=e=Kc(s,n,i)}return e}async compileAsync(t){const e=t.getRenderTarget(),n=t.getMRT();t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),await t.compileAsync(this.scene,this.camera),t.setRenderTarget(e),t.setMRT(n)}setup({renderer:t}){return this.renderTarget.samples=this.options.samples===void 0?t.samples:this.options.samples,this.renderTarget.texture.type=t.getColorBufferType(),this.scope===jh.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(t){const{renderer:e}=t,{scene:n}=this;let i,s;const o=e.getOutputRenderTarget();o&&o.isXRRenderTarget===!0?(s=1,i=e.xr.getCamera(),e.xr.updateCamera(i),Wc.set(o.width,o.height)):(i=this.camera,s=e.getPixelRatio(),e.getSize(Wc)),this._pixelRatio=s,this.setSize(Wc.width,Wc.height);const a=e.getRenderTarget(),l=e.getMRT(),c=i.layers.mask;this._cameraNear.value=i.near,this._cameraFar.value=i.far,this._layers!==null&&(i.layers.mask=this._layers.mask);for(const u in this._previousTextures)this.toggleTexture(u);e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),e.render(n,i),e.setRenderTarget(a),e.setMRT(l),i.layers.mask=c}setSize(t,e){this._width=t,this._height=e;const n=this._width*this._pixelRatio*this._resolution,i=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(n,i),this._scissor!==null&&this.renderTarget.scissor.copy(this._scissor),this._viewport!==null&&this.renderTarget.viewport.copy(this._viewport)}setScissor(t,e,n,i){t===null?this._scissor=null:(this._scissor===null&&(this._scissor=new $i),t.isVector4?this._scissor.copy(t):this._scissor.set(t,e,n,i),this._scissor.multiplyScalar(this._pixelRatio*this._resolution).floor())}setViewport(t,e,n,i){t===null?this._viewport=null:(this._viewport===null&&(this._viewport=new $i),t.isVector4?this._viewport.copy(t):this._viewport.set(t,e,n,i),this._viewport.multiplyScalar(this._pixelRatio*this._resolution).floor())}setPixelRatio(t){this._pixelRatio=t,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}jh.COLOR="color";jh.DEPTH="depth";we(1.6605,-.1246,-.0182),we(-.5876,1.1329,-.1006),we(-.0728,-.0083,1.1187);we(.6274,.0691,.0164),we(.3293,.9195,.088),we(.0433,.0113,.8956);class Qn extends Qt{static get type(){return"CodeNode"}constructor(t="",e=[],n=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=t,this.includes=e,this.language=n}setIncludes(t){return this.includes=t,this}getIncludes(){return this.includes}generate(t){const e=this.getIncludes(t);for(const i of e)i.build(t);const n=t.getCodeFromNode(this,this.getNodeType(t));return n.code=this.code,n.code}serialize(t){super.serialize(t),t.code=this.code,t.language=this.language}deserialize(t){super.deserialize(t),this.code=t.code,this.language=t.language}}function kM(r){let t;const e=r.context.getViewZ;return e!==void 0&&(t=e(this)),(t||In.z).negate()}ge(([r,t],e)=>{const n=kM(e);return cl(r,t,n)});ge(([r],t)=>{const e=kM(t);return r.mul(r,e,e).negate().exp().oneMinus()});ge(([r,t])=>dr(t.toFloat().mix(u0.rgb,r.toVec3()),u0.a));class yB extends Qt{constructor(t){super(),this.scope=t}generate(t){const{scope:e}=this,{renderer:n}=t;n.backend.isWebGLBackend===!0?t.addFlowCode("	// ".concat(e,"Barrier \n")):t.addLineFlowCode("".concat(e,"Barrier()"),this)}}je(yB);class Zi extends Qt{static get type(){return"AtomicFunctionNode"}constructor(t,e,n){super("uint"),this.method=t,this.pointerNode=e,this.valueNode=n,this.parents=!0}getInputType(t){return this.pointerNode.getNodeType(t)}getNodeType(t){return this.getInputType(t)}generate(t){const e=t.getNodeProperties(this),n=e.parents,i=this.method,s=this.getNodeType(t),o=this.getInputType(t),a=this.pointerNode,l=this.valueNode,c=[];c.push("&".concat(a.build(t,o))),l!==null&&c.push(l.build(t,o));const u="".concat(t.getMethod(i,s),"( ").concat(c.join(", ")," )");if(n&&n.length===1&&n[0].isStackNode===!0)t.addLineFlowCode(u,this);else return e.constNode===void 0&&(e.constNode=ul(u,s).toConst()),e.constNode.build(t)}}Zi.ATOMIC_LOAD="atomicLoad";Zi.ATOMIC_STORE="atomicStore";Zi.ATOMIC_ADD="atomicAdd";Zi.ATOMIC_SUB="atomicSub";Zi.ATOMIC_MAX="atomicMax";Zi.ATOMIC_MIN="atomicMin";Zi.ATOMIC_AND="atomicAnd";Zi.ATOMIC_OR="atomicOr";Zi.ATOMIC_XOR="atomicXor";je(Zi);class xe extends Mn{static get type(){return"SubgroupFunctionNode"}constructor(t,e=null,n=null){super(),this.method=t,this.aNode=e,this.bNode=n}getInputType(t){const e=this.aNode?this.aNode.getNodeType(t):null,n=this.bNode?this.bNode.getNodeType(t):null,i=t.isMatrix(e)?0:t.getTypeLength(e),s=t.isMatrix(n)?0:t.getTypeLength(n);return i>s?e:n}getNodeType(t){const e=this.method;return e===xe.SUBGROUP_ELECT?"bool":e===xe.SUBGROUP_BALLOT?"uvec4":this.getInputType(t)}generate(t,e){const n=this.method,i=this.getNodeType(t),s=this.getInputType(t),o=this.aNode,a=this.bNode,l=[];if(n===xe.SUBGROUP_BROADCAST||n===xe.SUBGROUP_SHUFFLE||n===xe.QUAD_BROADCAST){const u=a.getNodeType(t);l.push(o.build(t,i),a.build(t,u==="float"?"int":i))}else n===xe.SUBGROUP_SHUFFLE_XOR||n===xe.SUBGROUP_SHUFFLE_DOWN||n===xe.SUBGROUP_SHUFFLE_UP?l.push(o.build(t,i),a.build(t,"uint")):(o!==null&&l.push(o.build(t,s)),a!==null&&l.push(a.build(t,s)));const c=l.length===0?"()":"( ".concat(l.join(", ")," )");return t.format("".concat(t.getMethod(n,i)).concat(c),i,e)}serialize(t){super.serialize(t),t.method=this.method}deserialize(t){super.deserialize(t),this.method=t.method}}xe.SUBGROUP_ELECT="subgroupElect";xe.SUBGROUP_BALLOT="subgroupBallot";xe.SUBGROUP_ADD="subgroupAdd";xe.SUBGROUP_INCLUSIVE_ADD="subgroupInclusiveAdd";xe.SUBGROUP_EXCLUSIVE_AND="subgroupExclusiveAdd";xe.SUBGROUP_MUL="subgroupMul";xe.SUBGROUP_INCLUSIVE_MUL="subgroupInclusiveMul";xe.SUBGROUP_EXCLUSIVE_MUL="subgroupExclusiveMul";xe.SUBGROUP_AND="subgroupAnd";xe.SUBGROUP_OR="subgroupOr";xe.SUBGROUP_XOR="subgroupXor";xe.SUBGROUP_MIN="subgroupMin";xe.SUBGROUP_MAX="subgroupMax";xe.SUBGROUP_ALL="subgroupAll";xe.SUBGROUP_ANY="subgroupAny";xe.SUBGROUP_BROADCAST_FIRST="subgroupBroadcastFirst";xe.QUAD_SWAP_X="quadSwapX";xe.QUAD_SWAP_Y="quadSwapY";xe.QUAD_SWAP_DIAGONAL="quadSwapDiagonal";xe.SUBGROUP_BROADCAST="subgroupBroadcast";xe.SUBGROUP_SHUFFLE="subgroupShuffle";xe.SUBGROUP_SHUFFLE_XOR="subgroupShuffleXor";xe.SUBGROUP_SHUFFLE_UP="subgroupShuffleUp";xe.SUBGROUP_SHUFFLE_DOWN="subgroupShuffleDown";xe.QUAD_BROADCAST="quadBroadcast";ge(([r=Pl()],{renderer:t,material:e})=>{const n=fM(r.mul(2).sub(1));let i;if(e.alphaToCoverage&&t.samples>1){const s=ln(n.fwidth()).toVar();i=cl(s.oneMinus(),s.add(1),n).oneMinus()}else i=Um(n.greaterThan(1),0,1);return i});const _o=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4};_o&&_o.VERTEX,_o&&_o.FRAGMENT,_o&&_o.COMPUTE;new Qn("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),new Qn("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),new Qn("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),new Qn("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),new Qn("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),new Qn("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),new Qn("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),new Qn("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),new Qn("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),new Qn("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),new Qn("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),new Qn("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),new Qn("\nfn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {\n\n	let res = vec2f( iRes );\n\n	let uvScaled = coord * res;\n	let uvWrapping = ( ( uvScaled % res ) + res ) % res;\n\n	// https://www.shadertoy.com/view/WtyXRy\n\n	let uv = uvWrapping - 0.5;\n	let iuv = floor( uv );\n	let f = fract( uv );\n\n	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );\n	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );\n	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );\n	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );\n\n	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );\n\n}\n");const _B=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);typeof Float16Array<"u"&&_B.set(Float16Array,["float16"]);var vB="void main() {\n  gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n}",xB="#include <common>\n\nvoid main() {\n  vec2 center = vec2(0., 1.);\n  float rotation = 0.0;\n\n  \n  \n  float size = 0.03;\n\n  vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n  vec2 scale;\n  scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n  scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\n  bool isPerspective = isPerspectiveMatrix( projectionMatrix );\n  if ( isPerspective ) scale *= - mvPosition.z;\n\n  vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale * size;\n  vec2 rotatedPosition;\n  rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n  rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n  mvPosition.xy += rotatedPosition;\n\n  gl_Position = projectionMatrix * mvPosition;\n}";const Dl=new L(0,0,0),km=new L(0,0,0),bB=new L(0,0,0);function b0(r,t,e){const n=Dl.setFromMatrixPosition(r.matrixWorld);n.project(t);const i=e.width/2,s=e.height/2;return[(Number.isNaN(n.x)?0:n.x)*i+i,-(n.y*s)+s,n.z]}function MB(r,t){const e=Dl.setFromMatrixPosition(r.matrixWorld),n=km.setFromMatrixPosition(t.matrixWorld),i=e.sub(n),s=t.getWorldDirection(bB);return i.angleTo(s)>Math.PI/2}function SB(r,t,e,n){const i=Dl.setFromMatrixPosition(r.matrixWorld),s=i.clone();s.project(t),e.setFromCamera(new at(s.x,s.y),t);const o=e.intersectObjects(n,!0);if(o.length>0){const a=o[0].distance;return i.distanceTo(e.ray.origin)<a}return!0}function wB(r,t){if(t instanceof ur)return t.zoom;if(t instanceof Fe){const e=Dl.setFromMatrixPosition(r.matrixWorld),n=km.setFromMatrixPosition(t.matrixWorld),i=t.fov*Math.PI/180,s=e.distanceTo(n);return 1/(2*Math.tan(i/2)*s)}else return 1}function TB(r,t,e){if(t instanceof Fe||t instanceof ur){const n=Dl.setFromMatrixPosition(r.matrixWorld),i=km.setFromMatrixPosition(t.matrixWorld),s=n.distanceTo(i),o=(e[1]-e[0])/(t.far-t.near),a=e[1]-o*t.far;return Math.round(o*s+a)}}const sp=r=>Math.abs(r)<1e-10?0:r;function VM(r,t,e=""){let n="matrix3d(";for(let i=0;i!==16;i++)n+=sp(t[i]*r.elements[i])+(i!==15?",":")");return e+n}const EB=(r=>t=>VM(t,r))([1,-1,1,1,1,-1,1,1,1,-1,1,1,1,-1,1,1]),AB=(r=>(t,e)=>VM(t,r(e),"translate(-50%,-50%)"))(r=>[1/r,1/r,1/r,1,-1/r,-1/r,-1/r,-1,1/r,1/r,1/r,1,1,1,1,1]),CB=["geometry","material"],HM=fr({__name:"HTML",props:{geometry:{default:new Ds},material:{},as:{default:"div"},transform:{type:Boolean,default:!1},portal:{},wrapperClass:{},eps:{default:1e-4},distanceFactor:{},fullscreen:{type:Boolean},center:{type:Boolean},pointerEvents:{default:"auto"},sprite:{type:Boolean,default:!1},zIndexRange:{default:()=>[16777271,0]},occlude:{type:[Object,null,Array,Boolean,String]}},emits:["onOcclude"],setup(r,{expose:t,emit:e}){const n=r,i=e,s=C0(),o=nS(),a=tn(),l=tn(),{geometry:c,material:u,as:h,transform:d,portal:f,wrapperClass:p,eps:y,distanceFactor:m,fullscreen:g,center:w,pointerEvents:b,sprite:M,occlude:A,zIndexRange:S}=ih(n),{renderer:E,scene:x,camera:v,sizes:_}=rm(),T=We(()=>document.createElement(h.value)),I=tn([0,0,0]),B=tn(0),V=tn(),H=tn(new jp),U=We(()=>d.value?{position:"absolute",top:0,left:0,width:"".concat(_.width.value,"px"),height:"".concat(_.height.value,"px"),transformStyle:"preserve-3d",pointerEvents:"none",zIndex:2}:{position:"absolute",transform:w.value?"translate3d(-50%,-50%,0)":"none",...g.value&&{top:-_.height.value/2,left:-_.width.value/2,width:"".concat(_.width.value,"px"),height:"".concat(_.height.value,"px")},zIndex:2,...Object.assign({},o.style)}),Q=We(()=>({position:"absolute",pointerEvents:b.value})),W=tn(null),lt=tn(!1),ut=We(()=>(A==null?void 0:A.value)&&(A==null?void 0:A.value)!=="blending"||Array.isArray(A==null?void 0:A.value)&&(A==null?void 0:A.value.length)&&xs(A.value[0]));Xn(()=>A,({value:$t})=>{$t==="blending"?(T.value.style.zIndex="".concat(Math.floor(S.value[0]/2)),T.value.style.position="absolute",T.value.style.pointerEvents="none"):(T.value.style.zIndex=null,T.value.style.position=null,T.value.style.pointerEvents=null)}),Xn(()=>{var $t;return[a.value,E.instance,_.width.value,_.height.value,($t=s.default)==null?void 0:$t.call(s)]},([$t,ct])=>{var pt,K,R,D,z,J;if($t&&ct){const N=(f==null?void 0:f.value)||ct.domElement;if((pt=x.value)==null||pt.updateMatrixWorld(),d.value)T.value.style.cssText="position:absolute;top:0;left:0;pointer-events:none;overflow:hidden;";else{const G=b0($t,v.activeCamera.value,{width:_.width.value,height:_.height.value});T.value.style.cssText="position:absolute;top:0;left:0;transform:translate3d(".concat(G[0],"px,").concat(G[1],"px,0);transform-origin:0 0;")}N&&!T.value.parentNode&&((K=N.parentNode)==null||K.appendChild(T.value)),d.value?V.value=Dr("div",{id:"outer",style:U.value},[Dr("div",{id:"inner",style:Q.value},[Dr("div",{key:(R=l.value)==null?void 0:R.uuid,id:x==null?void 0:x.value.uuid,class:o.class,style:o.style},(D=s.default)==null?void 0:D.call(s))])]):V.value=Dr("div",{key:(z=l.value)==null?void 0:z.uuid,id:x==null?void 0:x.value.uuid,style:U.value},(J=s.default)==null?void 0:J.call(s)),iS(V.value,T.value)}}),ci(()=>{p!=null&&p.value&&(T.value.className=p.value)});const mt=tn(!0),{onBeforeRender:Xt}=Jx();Xt(()=>{var $t,ct,pt,K,R,D,z;if(a.value&&v.activeCamera.value&&E.instance){($t=v.activeCamera.value)==null||$t.updateMatrixWorld(),a.value.updateWorldMatrix(!0,!1);const J=d.value?I.value:b0(a.value,v.activeCamera.value,{width:_.width.value||0,height:_.height.value||0});if(d.value||Math.abs(B.value-v.activeCamera.value.zoom)>y.value||Math.abs(I.value[0]-J[0])>y.value||Math.abs(I.value[1]-J[1])>y.value||Math.abs(I.value[2]-J[2])>y.value){const N=MB(a.value,v.activeCamera.value);let G=!1;ut.value&&(Array.isArray(A==null?void 0:A.value)?G=A==null?void 0:A.value:(A==null?void 0:A.value)!=="blending"&&(G=[x.value]));const Z=mt.value;if(G){const ht=SB(a.value,v.activeCamera.value,H.value,G);mt.value=ht&&!N}else mt.value=!N;Z!==mt.value&&(i("onOcclude",!mt.value),T.value.style.display=mt.value?"block":"none");const tt=Math.floor(S.value[0]/2),nt=A!=null&&A.value?ut.value?[S.value[0],tt]:[tt-1,0]:S.value;if(T.value.style.zIndex="".concat(TB(a.value,v.activeCamera.value,nt)),d.value){const[ht,dt]=[_.width.value/2,_.height.value/2],yt=v.activeCamera.value.projectionMatrix.elements[5]*dt,{isOrthographicCamera:It,top:Pt,left:O,bottom:C,right:q}=v.activeCamera.value,st=EB(v.activeCamera.value.matrixWorldInverse),gt=It?"scale(".concat(yt,")translate(").concat(sp(-(q+O)/2),"px,").concat(sp((Pt+C)/2),"px)"):"translateZ(".concat(yt,"px)");let it=a.value.matrixWorld;if(M.value&&(it=v.activeCamera.value.matrixWorldInverse.clone().transpose().copyPosition(it).scale(a.value.scale),it.elements[3]=it.elements[7]=it.elements[11]=0,it.elements[15]=1),T.value.style.width="".concat(_.width.value,"px"),T.value.style.height="".concat(_.height.value,"px"),T.value.style.perspective=It?"":"".concat(yt,"px"),((ct=V.value)==null?void 0:ct.el)&&((pt=V.value)==null?void 0:pt.children)&&Array.isArray(V.value.children)){V.value.el.style.transform="".concat(gt).concat(st,"translate(").concat(ht,"px,").concat(dt,"px)");const Ft=V.value.children[0];Ft&&Ft.el&&(Ft.el.style.transform=AB(it,1/(((m==null?void 0:m.value)||10)/400)))}}else{const ht=(m==null?void 0:m.value)===void 0?1:wB(a.value,v.activeCamera.value)*(m==null?void 0:m.value);T.value.style.transform="translate3d(".concat(J[0],"px,").concat(J[1],"px,0) scale(").concat(ht,")")}}I.value=J,B.value=v.activeCamera.value.zoom}if(!ut.value&&l.value&&!lt.value)if(d.value){if((K=V.value)!=null&&K.el&&((R=V.value)!=null&&R.children)){const J=((D=V.value)==null?void 0:D.children)[0];if(J!=null&&J.clientWidth&&(J!=null&&J.clientHeight)){const{isOrthographicCamera:N}=v.activeCamera.value;if(N||c)o.scale&&(Array.isArray(o.scale)?o.scale instanceof L?l.value.scale.copy(o.scale.clone().divideScalar(1)):l.value.scale.set(1/o.scale[0],1/o.scale[1],1/o.scale[2]):l.value.scale.setScalar(1/o.scale));else{const G=((m==null?void 0:m.value)||10)/400,Z=J.clientWidth*G,tt=J.clientHeight*G;l.value.scale.set(Z,tt,1)}lt.value=!0}}}else{const J=T.value.children[0];if(J!=null&&J.clientWidth&&(J!=null&&J.clientHeight)){const N=J.clientWidth*1,G=J.clientHeight*1;l.value.scale.set(N,G,1),lt.value=!0}W.value.lookAt((z=v.activeCamera.value)==null?void 0:z.position)}});const te=We(()=>({vertexShader:d.value?void 0:xB,fragmentShader:vB})),qt=We(()=>{const $t=te.value;return u.value||new $n({vertexShader:$t.vertexShader,fragmentShader:$t.fragmentShader,side:ni})});return As(()=>{qt.value&&qt.value.dispose(),T.value.remove()}),t({instance:a}),($t,ct)=>(Ye(),xn("TresGroup",{ref_key:"groupRef",ref:a},[oe(A)&&!ut.value?(Ye(),xn("TresMesh",{key:0,ref_key:"meshRef",ref:l,geometry:oe(c),material:qt.value},null,8,CB)):nu("",!0)],512))}});var op={exports:{}},RB=op.exports,M0;function IB(){return M0||(M0=1,function(r,t){(function(e,n){r.exports=n()})(RB,function(){var e=function(){function n(f){return o.appendChild(f.dom),f}function i(f){for(var p=0;p<o.children.length;p++)o.children[p].style.display=p===f?"block":"none";s=f}var s=0,o=document.createElement("div");o.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",o.addEventListener("click",function(f){f.preventDefault(),i(++s%o.children.length)},!1);var a=(performance||Date).now(),l=a,c=0,u=n(new e.Panel("FPS","#0ff","#002")),h=n(new e.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var d=n(new e.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:o,addPanel:n,showPanel:i,begin:function(){a=(performance||Date).now()},end:function(){c++;var f=(performance||Date).now();if(h.update(f-a,200),f>l+1e3&&(u.update(1e3*c/(f-l),100),l=f,c=0,d)){var p=performance.memory;d.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return f},update:function(){a=this.end()},domElement:o,setMode:i}};return e.Panel=function(n,i,s){var o=1/0,a=0,l=Math.round,c=l(window.devicePixelRatio||1),u=80*c,h=48*c,d=3*c,f=2*c,p=3*c,y=15*c,m=74*c,g=30*c,w=document.createElement("canvas");w.width=u,w.height=h,w.style.cssText="width:80px;height:48px";var b=w.getContext("2d");return b.font="bold "+9*c+"px Helvetica,Arial,sans-serif",b.textBaseline="top",b.fillStyle=s,b.fillRect(0,0,u,h),b.fillStyle=i,b.fillText(n,d,f),b.fillRect(p,y,m,g),b.fillStyle=s,b.globalAlpha=.9,b.fillRect(p,y,m,g),{dom:w,update:function(M,A){o=Math.min(o,M),a=Math.max(a,M),b.fillStyle=s,b.globalAlpha=1,b.fillRect(0,0,u,y),b.fillStyle=i,b.fillText(l(M)+" "+n+" ("+l(o)+"-"+l(a)+")",d,f),b.drawImage(w,p+c,y,m-c,g,p,y,m-c,g),b.fillRect(p+m-c,y,c,g),b.fillStyle=s,b.globalAlpha=.9,b.fillRect(p+m-c,y,c,l((1-M/A)*g))}}},e})}(op)),op.exports}IB();const NB=["args"],PB=["color"],S0=fr({__name:"Box",props:{args:{default:()=>[1,1,1]},color:{default:"#ffffff"}},setup(r,{expose:t}){const e=r,{invalidate:n}=Fh(),{args:i,color:s}=ih(e);Xn(i,()=>{n()});const o=rn();return t({instance:o}),(a,l)=>(Ye(),xn("TresMesh",rS({ref_key:"boxRef",ref:o},a.$attrs),[ui("TresBoxGeometry",{args:oe(i)},null,8,NB),R0(a.$slots,"default",{},()=>[ui("TresMeshBasicMaterial",{color:oe(s)},null,8,PB)])],16))}});new At;const LB={key:0,args:[0,1,64]},DB={key:1,args:[.5,1,64]},OB={key:2},UB=["tone-mapped","map","side","color"];new At(16777215);const FB=["position"],BB={class:"label"},zB="#999999",kB=fr({__name:"CoordinateBox",props:{coordinate:{},isActive:{type:Boolean},paloxDisplayName:{}},setup(r){const t=r,e=[1,1,1],n=We(()=>[t.coordinate.x_column,t.coordinate.y_level,t.coordinate.z_slot]);return(i,s)=>(Ye(),xn("TresGroup",{position:n.value},[r.isActive?(Ye(),xn(eu,{key:0},[Dr(oe(S0),{args:e,color:"orange"}),Dr(oe(HM),{position:[0,0,0],center:""},{default:iu(()=>[ui("div",BB,sS(r.paloxDisplayName),1)]),_:1})],64)):(Ye(),Aa(oe(S0),{key:1,args:e},{default:iu(()=>[ui("TresMeshBasicMaterial",{color:zB,wireframe:""})]),_:1}))],8,FB))}}),VB=I0(kB,[["__scopeId","data-v-5922e771"]]),HB={key:0,class:"loading-container"},GB={key:1,class:"empty-state"},WB="lightblue",XB=fr({__name:"MatrixGrid",props:{coordinates:{},slotLevelId:{},paloxDisplayName:{},isLoading:{type:Boolean}},setup(r){const t=r,e=tn(!1);function n(){requestAnimationFrame(()=>e.value=!0)}const i=We(()=>!t.coordinates||t.coordinates.length===0),s=[10,8,10],o=[1.5,2,2],a=[1.5,-.5,2],l=[4,.01,5,4,1,5],c=[1.5,-.5,5];return(u,h)=>r.isLoading?(Ye(),xn("div",HB,[Dr(oe(oS),{name:"crescent"})])):i.value?(Ye(),xn("div",GB,[...h[0]||(h[0]=[ui("p",null,"Keine Koordinaten vorhanden.",-1)])])):(Ye(),Aa(oe(L3),{key:2,"clear-color":"#f6f6f6",onReady:n},{default:iu(()=>[ui("TresPerspectiveCamera",{position:s}),Dr(oe(hL),{target:o}),ui("TresMesh",{position:a},[ui("TresBoxGeometry",{args:l}),ui("TresMeshBasicMaterial",{color:WB,wireframe:""})]),e.value?(Ye(),Aa(oe(HM),{key:0,position:c,center:""},{default:iu(()=>[...h[1]||(h[1]=[ui("div",{class:"scene-label"},"Frontansicht",-1)])]),_:1})):nu("",!0),(Ye(!0),xn(eu,null,aS(r.coordinates,d=>(Ye(),xn(eu,{key:d.slot_level_id},[e.value?(Ye(),Aa(VB,{key:0,coordinate:d,isActive:d.slot_level_id===r.slotLevelId,paloxDisplayName:r.paloxDisplayName},null,8,["coordinate","isActive","paloxDisplayName"])):nu("",!0)],64))),128))]),_:1}))}}),KB=I0(XB,[["__scopeId","data-v-4208c93c"]]);export{KB as default};
